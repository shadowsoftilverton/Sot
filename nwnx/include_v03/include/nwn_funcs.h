/*
 *  NWNeXalt - Empty File
 *  (c) 2007 Doug Swarin (zac@intertex.net)
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *  $Id$
 *  $HeadURL$
 *
 */

#ifndef _NX_NWN_FUNCS_H_
#define _NX_NWN_FUNCS_H_

#ifdef __cplusplus
extern "C" {
#endif

CGameObject *nwn_GetObjectByID (nwn_objid_t oid);
CGameObject *nwn_GetObjectByStringID (const char *oid);
CNWSPlayer *nwn_GetPlayerByID (nwn_objid_t oid);

bool nwn_GetKnowsFeat (const CNWSCreatureStats *stats, int feat);
int nwn_GetKnowsSkill (const CNWSCreatureStats *stats, int skill);
int nwn_GetLevelByClass (const CNWSCreatureStats *stats, int cl);
CNWSStats_Level *nwn_GetLevelStats (const CNWSCreatureStats *stats, int level);
int64_t nwn_GetWorldTime (uint32_t *time_2880s, uint32_t *time_msec);
void nwn_UpdateQuickBar (CNWSCreature *cre);
void nwn_ExecuteScript (const char *scr, nwn_objid_t oid);


extern int (*CExoKeyTable__AddDirectoryContents)(CExoKeyTable *, int32_t);
extern int (*CExoKeyTable__AddEncapsulatedContents)(CExoKeyTable *, int32_t);
extern int (*CExoKeyTable__AddKey)(CExoKeyTable *, CResRef const *, uint16_t, uint32_t, int32_t);
extern int (*CExoKeyTable__AddKeyTableContents)(CExoKeyTable *, int32_t);
extern int (*CExoKeyTable__AddResourceImageContents)(CExoKeyTable *, int32_t, unsigned char *);
extern int (*CExoKeyTable__AllocateTable)(CExoKeyTable *, uint32_t, int32_t);
extern int (*CExoKeyTable__BuildNewTable)(CExoKeyTable *, uint32_t, CExoString const *, uint32_t, int32_t, unsigned char *);
extern int (*CExoKeyTable__DeleteTableList)(CExoKeyTable *, CExoLinkedList *);
extern int (*CExoKeyTable__DestroyTable)(CExoKeyTable *);
extern int (*CExoKeyTable__FindKey_1)(CExoKeyTable *, CRes *);
extern int (*CExoKeyTable__FindKey_2)(CExoKeyTable *, CResRef const *, uint16_t);
extern int (*CExoKeyTable__GetEntryCount)(CExoKeyTable *, int32_t);
extern int (*CExoKeyTable__GetKeysOfType)(CExoKeyTable *, uint16_t);
extern int (*CExoKeyTable__GetRes)(CExoKeyTable *, CResRef const *, uint16_t);
extern int (*CExoKeyTable__GetResID)(CExoKeyTable *, CResRef const *, uint16_t);
extern int (*CExoKeyTable__GetTableEntry)(CExoKeyTable *, uint32_t, CResRef *, uint16_t *);
extern int (*CExoKeyTable__GetTableIndex)(CExoKeyTable *, uint32_t *, CResRef const *, uint16_t);
extern int (*CExoKeyTable__Hash)(CExoKeyTable *, CResRef const *, uint16_t);
extern int (*CExoKeyTable__LocateBifFile)(CExoKeyTable *, CExoString const *);
extern int (*CExoKeyTable__RebuildTable)(CExoKeyTable *, unsigned char *);
extern int (*CExoLinkedList__AddAfter)(CExoLinkedList *, void *, CExoLinkedListNode *);
extern int (*CExoLinkedList__AddBefore)(CExoLinkedList *, void *, CExoLinkedListNode *);
extern int (*CExoLinkedList__AddHead)(CExoLinkedList *, void *);
extern int (*CExoLinkedList__AddTail)(CExoLinkedList *, void *);
extern int (*CExoLinkedList__GetAtPos)(CExoLinkedList *, CExoLinkedListNode *);
extern int (*CExoLinkedList__GetNext)(CExoLinkedList *, CExoLinkedListNode **);
extern int (*CExoLinkedList__GetPrev)(CExoLinkedList *, CExoLinkedListNode **);
extern int (*CExoLinkedList__Remove)(CExoLinkedList *, CExoLinkedListNode *);
extern int (*CExoLinkedList__RemoveHead)(CExoLinkedList *);
extern int (*CExoLinkedList__RemoveTail)(CExoLinkedList *);
extern int (*CExoLocString__AddString)(CExoLocString *, int32_t, CExoString, uint8_t);
extern int (*CExoLocString__ClearLocString)(CExoLocString *);
extern int (*CExoLocString__GetString_1)(CExoLocString *, int32_t, CExoString *, uint8_t, bool);
extern int (*CExoLocString__GetString_2)(CExoLocString *, uint32_t, int32_t *, CExoString *, unsigned char *);
extern int (*CExoLocString__GetStringCount)(CExoLocString *);
extern int (*CExoLocString__GetStringInternal)(CExoLocString *, int32_t, CExoString *);
extern int (*CExoLocString__GetStringLength)(CExoLocString *, uint32_t);
extern int (*CExoLocString__GetStringLoc)(CExoLocString *, int32_t, CExoString *, uint8_t);
extern int (*CExoLocString__RemoveString_1)(CExoLocString *, int32_t);
extern int (*CExoLocString__RemoveString_2)(CExoLocString *, int32_t, uint8_t);
extern int (*CExoLocString__op_ne)(CExoLocString *, CExoLocString *);
extern int (*CExoLocString__op_as)(CExoLocString *, CExoLocString const *);
extern int (*CExoLocString__op_eq)(CExoLocString *, CExoLocString *);
extern int (*CExoRand__GetString)(CExoRand *, uint16_t);
extern int (*CExoRand__Rand)(CExoRand *);
extern int (*CExoRand__SignalEvent_1)(CExoRand *, uint32_t);
extern int (*CExoRand__SignalEvent_2)(CExoRand *);
extern int (*CExoString__AsFLOAT)(CExoString *);
extern int (*CExoString__AsINT)(CExoString *);
extern int (*CExoString__AsTAG)(CExoString *);
extern int (*CExoString__CStr)(CExoString *);
extern int (*CExoString__CompareNoCase)(CExoString *, CExoString const *);
extern int (*CExoString__ComparePrefixNoCase)(CExoString *, CExoString const *, int32_t);
extern int (*CExoString__Find_1)(CExoString *, CExoString const *, int32_t);
extern int (*CExoString__Find_2)(CExoString *, int8_t, int32_t);
extern int (*CExoString__FindNot)(CExoString *, int8_t, int32_t);
extern int (*CExoString__Format)(CExoString *, char *,...);
extern int (*CExoString__GetLength)(CExoString *);
extern int (*CExoString__Insert)(CExoString *, CExoString const *, int32_t);
extern int (*CExoString__IsEmpty)(CExoString *);
extern int (*CExoString__Left)(CExoString *, int32_t);
extern int (*CExoString__LowerCase)(CExoString *);
extern int (*CExoString__Right)(CExoString *, int32_t);
extern int (*CExoString__StripNonAlphaNumeric)(CExoString *, int32_t, int32_t, int32_t);
extern int (*CExoString__SubString)(CExoString *, int32_t, int32_t);
extern int (*CExoString__UpperCase)(CExoString *);
extern int (*CExoString__Get)(CExoString *, int32_t);
extern int (*CExoStringList__Add)(CExoStringList *, CExoString *);
extern int (*CExoStringList__AddSorted)(CExoStringList *, CExoString *);
extern int (*CExoStringList__Clear)(CExoStringList *);
extern int (*CExoStringList__Delete)(CExoStringList *, CExoString *);
extern int (*CExoStringList__GetCount)(CExoStringList *);
extern int (*CExoStringList__GetDuplicate)(CExoStringList *);
extern int (*CExoStringList__GetSize)(CExoStringList *);
extern int (*CExoStringList__GetSorted)(CExoStringList *);
extern int (*CExoStringList__GetString)(CExoStringList *, int32_t);
extern int (*CExoStringList__Insert)(CExoStringList *, CExoString *, int32_t);
extern int (*CExoStringList__Introduce)(CExoStringList *, CExoString *, int32_t);
extern int (*CExoStringList__Merge)(CExoStringList *, CExoStringList *, int32_t, int32_t);
extern int (*CExoStringList__Remove)(CExoStringList *, int32_t);
extern int (*CExoStringList__Get)(CExoStringList *, int32_t);
extern int (*CExoTimers__GetHighResolutionTimer)(CExoTimers *);
extern int (*CExoTimers__GetLowResolutionTimer)(CExoTimers *);
extern int (*CFactionManager__CreateDefaultFactions)(CFactionManager *);
extern int (*CFactionManager__DeleteFaction)(CFactionManager *, int32_t);
extern int (*CFactionManager__GetDefaultPCReputation)(CFactionManager *);
extern CNWSFaction *(*CFactionManager__GetFaction)(CFactionManager *, int32_t);
extern int (*CFactionManager__GetFactionIdByName)(CFactionManager *, CExoString const *);
extern int (*CFactionManager__GetIsNPCFaction)(CFactionManager *, int32_t);
extern int (*CFactionManager__GetNPCFactionReputation)(CFactionManager *, int32_t, int32_t);
extern int (*CFactionManager__LoadFactions)(CFactionManager *, CResGFF *, CResList *);
extern int (*CFactionManager__LoadReputations)(CFactionManager *, CResGFF *, CResList *);
extern int (*CFactionManager__SaveFactions)(CFactionManager *, CResGFF *, CResList *);
extern int (*CFactionManager__SaveReputations)(CFactionManager *, CResGFF *, CResList *);
extern int (*CFactionManager__SetNPCFactionReputation)(CFactionManager *, int32_t, int32_t, int32_t);
extern int (*CGameEffect__CopyEffect)(CGameEffect *, CGameEffect *, int32_t);
extern int (*CGameEffect__GetExpiryTime)(CGameEffect *, uint32_t *, uint32_t *);
extern int (*CGameEffect__GetFloat)(CGameEffect *, int32_t);
extern int (*CGameEffect__GetInteger)(CGameEffect *, int32_t);
extern int (*CGameEffect__GetObjectID)(CGameEffect *, int32_t);
extern int (*CGameEffect__GetScriptEffectType)(CGameEffect *);
extern int (*CGameEffect__GetString)(CGameEffect *, int32_t);
extern int (*CGameEffect__LoadGameEffect)(CGameEffect *, CResGFF *, CResStruct *);
extern int (*CGameEffect__SaveGameEffect)(CGameEffect *, CResGFF *, CResStruct *);
extern int (*CGameEffect__SetCreator)(CGameEffect *, uint32_t);
extern int (*CGameEffect__SetExpiryTime)(CGameEffect *, uint32_t, uint32_t);
extern int (*CGameEffect__SetFloat)(CGameEffect *, int32_t, float);
extern int (*CGameEffect__SetInteger)(CGameEffect *, int32_t, int32_t);
extern int (*CGameEffect__SetLinked)(CGameEffect *, CGameEffect *, CGameEffect *);
extern int (*CGameEffect__SetNumIntegers)(CGameEffect *, int32_t);
extern int (*CGameEffect__SetNumIntegersInitializeToNegativeOne)(CGameEffect *, int32_t);
extern int (*CGameEffect__SetObjectID)(CGameEffect *, int32_t, uint32_t);
extern int (*CGameEffect__SetString)(CGameEffect *, int32_t, CExoString);
extern int (*CGameEffect__UpdateLinked)(CGameEffect *);
extern int (*CGameEffect__op_ne)(CGameEffect *, CGameEffect const *);
extern int (*CGameEffect__op_as)(CGameEffect *, CGameEffect const *);
extern int (*CGameEffect__op_eq)(CGameEffect *, CGameEffect const *);
extern int (*CGameObject__AsNWCArea)(CGameObject *);
extern int (*CGameObject__AsNWCAreaOfEffectObject)(CGameObject *);
extern int (*CGameObject__AsNWCCreature)(CGameObject *);
extern int (*CGameObject__AsNWCDoor)(CGameObject *);
extern int (*CGameObject__AsNWCItem)(CGameObject *);
extern int (*CGameObject__AsNWCModule)(CGameObject *);
extern int (*CGameObject__AsNWCObject)(CGameObject *);
extern int (*CGameObject__AsNWCPlaceable)(CGameObject *);
extern int (*CGameObject__AsNWCProjectile)(CGameObject *);
extern int (*CGameObject__AsNWCSoundObject)(CGameObject *);
extern int (*CGameObject__AsNWCStore)(CGameObject *);
extern int (*CGameObject__AsNWCTrigger)(CGameObject *);
extern int (*CGameObject__AsNWSArea)(CGameObject *);
extern int (*CGameObject__AsNWSAreaOfEffectObject)(CGameObject *);
extern int (*CGameObject__AsNWSCreature)(CGameObject *);
extern int (*CGameObject__AsNWSDoor)(CGameObject *);
extern int (*CGameObject__AsNWSEncounter)(CGameObject *);
extern int (*CGameObject__AsNWSItem)(CGameObject *);
extern int (*CGameObject__AsNWSModule)(CGameObject *);
extern int (*CGameObject__AsNWSObject)(CGameObject *);
extern int (*CGameObject__AsNWSPlaceable)(CGameObject *);
extern int (*CGameObject__AsNWSPlayerTURD)(CGameObject *);
extern int (*CGameObject__AsNWSSoundObject)(CGameObject *);
extern int (*CGameObject__AsNWSStore)(CGameObject *);
extern int (*CGameObject__AsNWSTrigger)(CGameObject *);
extern int (*CGameObject__AsNWSWaypoint)(CGameObject *);
extern int (*CGameObject__ResetUpdateTimes)(CGameObject *, uint32_t, uint32_t);
extern int (*CGameObject__SetId)(CGameObject *, uint32_t);
extern int (*CGameObjectArray__AddCharacterObjectAtPos)(CGameObjectArray *, uint32_t, CGameObject *);
extern int (*CGameObjectArray__AddExternalObject)(CGameObjectArray *, uint32_t *, CGameObject *, int32_t);
extern int (*CGameObjectArray__AddInternalObject)(CGameObjectArray *, uint32_t *, CGameObject *, int32_t);
extern int (*CGameObjectArray__AddObjectAtPos)(CGameObjectArray *, uint32_t, CGameObject *);
extern int (*CGameObjectArray__Clean)(CGameObjectArray *, uint16_t);
extern int (*CGameObjectArray__Delete_1)(CGameObjectArray *, uint32_t);
extern int (*CGameObjectArray__Delete_2)(CGameObjectArray *, uint32_t, CGameObject **);
extern CGameObject *(*CGameObjectArray__GetGameObject)(CGameObjectArray *, uint32_t, CGameObject **);
extern int (*CItemRepository__AddItem)(CItemRepository *, CNWSItem **, uint8_t, uint8_t, int32_t, int32_t);
extern int (*CItemRepository__AddPanel)(CItemRepository *);
extern int (*CItemRepository__CalculateContentsWeight)(CItemRepository *);
extern int (*CItemRepository__CalculatePage)(CItemRepository *, uint8_t, uint8_t);
extern int (*CItemRepository__CheckFit)(CItemRepository *, CNWSItem *, uint8_t, uint8_t);
extern int (*CItemRepository__CheckItemOverlaps)(CItemRepository *, CNWSItem *, CNWSItem *, uint8_t, uint8_t);
extern int (*CItemRepository__FindItemWithBaseItemId)(CItemRepository *, uint32_t, int32_t);
extern int (*CItemRepository__FindItemWithTag)(CItemRepository *, CExoString *);
extern int (*CItemRepository__FindPosition)(CItemRepository *, CNWSItem *, unsigned char *, unsigned char *, int32_t);
extern int (*CItemRepository__GetItemInRepository_1)(CItemRepository *, CNWSItem *, int32_t);
extern int (*CItemRepository__GetItemInRepository_2)(CItemRepository *, uint8_t, uint8_t);
extern int (*CItemRepository__ItemListGetItem)(CItemRepository *, CExoLinkedListNode *);
extern int (*CItemRepository__ItemListGetItemObjectID)(CItemRepository *, CExoLinkedListNode *);
extern int (*CItemRepository__MoveItem)(CItemRepository *, CNWSItem *, uint8_t, uint8_t);
extern int (*CItemRepository__RemoveItem)(CItemRepository *, CNWSItem *);
extern int (*CNetLayer__CleanUpEnumerateSpecific)(CNetLayer *);
extern int (*CNetLayer__ClearSessionInfoChanged)(CNetLayer *, uint32_t);
extern int (*CNetLayer__CloseStandardConnection)(CNetLayer *, int32_t);
extern int (*CNetLayer__DisconnectFromSession)(CNetLayer *);
extern int (*CNetLayer__DisconnectPlayer)(CNetLayer *, uint32_t, uint32_t, int32_t);
extern int (*CNetLayer__DropConnectionToServer)(CNetLayer *);
extern int (*CNetLayer__EndConnectToSession)(CNetLayer *);
extern int (*CNetLayer__EndEnumerateSessions)(CNetLayer *);
extern int (*CNetLayer__EndInternetAddressTranslation)(CNetLayer *);
extern int (*CNetLayer__EndPing)(CNetLayer *, uint32_t);
extern int (*CNetLayer__EndProtocol)(CNetLayer *, uint32_t);
extern int (*CNetLayer__EndServerMode)(CNetLayer *);
extern int (*CNetLayer__EnumerateSessionsList)(CNetLayer *, uint8_t);
extern int (*CNetLayer__GetAnySessionsEnumerated)(CNetLayer *);
extern int (*CNetLayer__GetAnyWindowBehind)(CNetLayer *);
extern int (*CNetLayer__GetClientConnected)(CNetLayer *);
extern int (*CNetLayer__GetConnectionError)(CNetLayer *);
extern int (*CNetLayer__GetConnectionsMustBeValidated)(CNetLayer *);
extern int (*CNetLayer__GetDisconnectStrref)(CNetLayer *);
extern int (*CNetLayer__GetExoApp)(CNetLayer *);
extern int (*CNetLayer__GetExoNet)(CNetLayer *);
extern int (*CNetLayer__GetExpansionPackReqd)(CNetLayer *);
extern int (*CNetLayer__GetGameMasterPassword)(CNetLayer *);
extern int (*CNetLayer__GetGameMasterPermision)(CNetLayer *);
extern int (*CNetLayer__GetIPBySessionId)(CNetLayer *, uint32_t, CExoString *);
extern int (*CNetLayer__GetInternetAddressTranslationStatus)(CNetLayer *, unsigned char *);
extern int (*CNetLayer__GetLocalAdapterString)(CNetLayer *, uint32_t, uint32_t);
extern int (*CNetLayer__GetLocalPrivileges)(CNetLayer *, uint32_t);
extern int (*CNetLayer__GetMessageFromStandardConnection)(CNetLayer *, int32_t *, char **, int32_t *);
extern int (*CNetLayer__GetNumberLocalAdapters)(CNetLayer *, uint32_t);
extern int (*CNetLayer__GetPasswordRequired)(CNetLayer *);
extern int (*CNetLayer__GetPlayerAddress)(CNetLayer *, uint32_t);
extern int (*CNetLayer__GetPlayerAddressData)(CNetLayer *, uint32_t, uint32_t *, unsigned char **, unsigned char **, uint32_t *);
extern int (*CNetLayer__GetPlayerInfo)(CNetLayer *, uint32_t);
extern int (*CNetLayer__GetPlayerPassword)(CNetLayer *);
extern int (*CNetLayer__GetPortBySessionId)(CNetLayer *, uint32_t);
extern int (*CNetLayer__GetSendUDPSocket)(CNetLayer *);
extern int (*CNetLayer__GetServerAdminPassword)(CNetLayer *);
extern int (*CNetLayer__GetServerConnected)(CNetLayer *);
extern int (*CNetLayer__GetServerNetworkAddress)(CNetLayer *);
extern int (*CNetLayer__GetSessionInfo)(CNetLayer *, uint32_t);
extern int (*CNetLayer__GetSessionInfoChanged)(CNetLayer *, uint32_t);
extern int (*CNetLayer__GetSessionMaxPlayers)(CNetLayer *);
extern int (*CNetLayer__GetSessionName)(CNetLayer *);
extern int (*CNetLayer__GetUDPRecievePort)(CNetLayer *);
extern int (*CNetLayer__Initialize)(CNetLayer *, CBaseExoApp *);
extern int (*CNetLayer__IsConnectedToLocalhost)(CNetLayer *);
extern int (*CNetLayer__MessageArrived)(CNetLayer *, uint32_t, uint32_t, uint32_t, int32_t);
extern int (*CNetLayer__OpenStandardConnection)(CNetLayer *, int32_t, CExoString, int32_t);
extern int (*CNetLayer__PlayerIdToConnectionId)(CNetLayer *, uint32_t, uint32_t *);
extern int (*CNetLayer__ProcessReceivedFrames)(CNetLayer *, int32_t);
extern int (*CNetLayer__RequestExtendedServerInfo)(CNetLayer *, uint32_t, int32_t, int32_t);
extern int (*CNetLayer__RequestServerDetails)(CNetLayer *, uint32_t);
extern int (*CNetLayer__SendMessageToAddress)(CNetLayer *, uint32_t, unsigned char *, uint32_t);
extern int (*CNetLayer__SendMessageToPlayer)(CNetLayer *, uint32_t, unsigned char *, uint32_t, uint32_t);
extern int (*CNetLayer__SendMessageToStandardConnection)(CNetLayer *, int32_t, char *, int32_t);
extern int (*CNetLayer__SetConnectionsDisallowed)(CNetLayer *, int32_t);
extern int (*CNetLayer__SetConnectionsMustBeValidated)(CNetLayer *, int32_t);
extern int (*CNetLayer__SetDisconnectStrref)(CNetLayer *, uint32_t);
extern int (*CNetLayer__SetExpansionPackReqd)(CNetLayer *, uint16_t);
extern int (*CNetLayer__SetGameMasterPassword)(CNetLayer *, CExoString *);
extern int (*CNetLayer__SetMasterServerInternetAddress)(CNetLayer *, unsigned char const *, uint32_t);
extern int (*CNetLayer__SetMstServerPassword)(CNetLayer *, CExoString *);
extern int (*CNetLayer__SetPlayerPassword)(CNetLayer *, CExoString *);
extern int (*CNetLayer__SetServerAdminPassword)(CNetLayer *, CExoString *);
extern int (*CNetLayer__SetServerLanguage)(CNetLayer *, int32_t);
extern int (*CNetLayer__SetSessionInfoChanged)(CNetLayer *, uint32_t, int32_t);
extern int (*CNetLayer__SetSessionMaxPlayers)(CNetLayer *, uint32_t);
extern int (*CNetLayer__SetSessionName)(CNetLayer *, CExoString);
extern int (*CNetLayer__SetUpPlayBackConnection)(CNetLayer *);
extern int (*CNetLayer__ShutDown)(CNetLayer *);
extern int (*CNetLayer__ShutDownClientInterfaceWithReason)(CNetLayer *, uint32_t);
extern int (*CNetLayer__StartConnectToSession)(CNetLayer *, uint32_t, CExoString *, int32_t, int32_t, CExoString *, uint32_t, uint32_t, CExoString *);
extern int (*CNetLayer__StartEnumerateSessions)(CNetLayer *, uint32_t, int32_t, unsigned char *, uint16_t, int32_t, uint16_t, CExoString *, uint16_t, CExoString *, uint16_t, CExoString *);
extern int (*CNetLayer__StartInternetAddressTranslation)(CNetLayer *, CExoString, uint32_t, uint32_t);
extern int (*CNetLayer__StartPing)(CNetLayer *, uint32_t);
extern int (*CNetLayer__StartProtocol)(CNetLayer *, uint32_t, uint32_t, uint32_t, uint32_t);
extern int (*CNetLayer__StartServerMode)(CNetLayer *, CExoString, uint32_t);
extern int (*CNetLayer__StoreMessage)(CNetLayer *, unsigned char *, uint32_t);
extern int (*CNetLayer__TranslateAddressFromString)(CNetLayer *, char *, uint32_t *, unsigned char *, unsigned char *, uint32_t *);
extern int (*CNetLayer__UpdateStatusLoop)(CNetLayer *, uint32_t);
extern int (*CNWArea__AddStaticBoundingBox)(CNWArea *, uint32_t, Vector const *, Vector const *);
extern int (*CNWArea__AddStaticObject)(CNWArea *, uint32_t, Vector const *, Vector const *, int32_t, Vector *, int32_t, int32_t *);
extern int (*CNWArea__GetFlags)(CNWArea *);
extern int (*CNWArea__GetFog)(CNWArea *, int32_t *, Vector *);
extern int (*CNWArea__GetFogClipDistance)(CNWArea *);
extern int (*CNWArea__GetHeight)(CNWArea *);
extern int (*CNWArea__GetIsIDInExcludeList)(CNWArea *, uint32_t, CExoArrayList_ptr *);
extern int (*CNWArea__GetIsNight)(CNWArea *);
extern int (*CNWArea__GetMoonFogAmount)(CNWArea *);
extern int (*CNWArea__GetMoonFogColor)(CNWArea *);
extern int (*CNWArea__GetNoRestingAllowed)(CNWArea *);
extern int (*CNWArea__GetShadowOpacity)(CNWArea *);
extern int (*CNWArea__GetSkyBox)(CNWArea *);
extern int (*CNWArea__GetSunFogAmount)(CNWArea *);
extern int (*CNWArea__GetSunFogColor)(CNWArea *);
extern int (*CNWArea__GetUseDayNightCycle)(CNWArea *);
extern int (*CNWArea__GetWidth)(CNWArea *);
extern int (*CNWArea__GrowStaticObjectArray)(CNWArea *);
extern int (*CNWArea__GrowStaticObjectTriangles)(CNWArea *, int32_t);
extern int (*CNWArea__GrowStaticObjectVertices)(CNWArea *, int32_t);
extern int (*CNWArea__HandleTransparentDoors)(CNWArea *, float, float, float, float, float, float, float, uint32_t, uint32_t *, int32_t, CExoArrayList_ptr *, int32_t);
extern int (*CNWArea__InitializeStaticObjects)(CNWArea *);
extern int (*CNWArea__IntersectLineSegments)(CNWArea *, float, float, float, float, float, float, float, float, float *, float *);
extern int (*CNWArea__NoCreaturesOnLine)(CNWArea *, float, float, float, float, CPathfindInformation *);
extern int (*CNWArea__NoNonWalkPolys)(CNWArea *, float, float, float, float, float, float, float, uint32_t);
extern int (*CNWArea__NoNonWalkPolysDetailed)(CNWArea *, float, float, float, float, float, float, float, uint32_t, uint32_t *, int32_t, CExoArrayList_ptr *, int32_t);
extern int (*CNWArea__NoNonWalkPolysInDoors)(CNWArea *, float, float, float, float, float, float, float, uint32_t, uint32_t *, int32_t, CExoArrayList_ptr *, int32_t);
extern int (*CNWArea__RemoveStaticBoundingBox)(CNWArea *, uint32_t);
extern int (*CNWArea__RemoveStaticObject)(CNWArea *, int32_t);
extern int (*CNWArea__ReplaceStaticObject)(CNWArea *, int32_t, uint32_t, Vector const *, Vector const *, int32_t, Vector *, int32_t, int32_t *);
extern int (*CNWArea__SetFog)(CNWArea *, int32_t, Vector);
extern int (*CNWArea__SetIsNight)(CNWArea *, int32_t);
extern int (*CNWArea__SetMoonFogAmount)(CNWArea *, uint8_t);
extern int (*CNWArea__SetMoonFogColor)(CNWArea *, uint32_t);
extern int (*CNWArea__SetSkyBox)(CNWArea *, uint8_t);
extern int (*CNWArea__SetSunFogAmount)(CNWArea *, uint8_t);
extern int (*CNWArea__SetSunFogColor)(CNWArea *, uint32_t);
extern int (*CNWArea__SetUseDayNightCycle)(CNWArea *, int32_t);
extern int (*CNWArea__SetWind)(CNWArea *, uint8_t);
extern int (*CNWBaseItem__GetIconResRef)(CNWBaseItem *, uint8_t, int16_t, int8_t);
extern int (*CNWBaseItem__GetModelResRef)(CNWBaseItem *, uint8_t, int16_t, int8_t);
extern int (*CNWBaseItem__GetNameText)(CNWBaseItem *);
extern int (*CNWBaseItem__GetRequiredFeat)(CNWBaseItem *, uint8_t);
extern int (*CNWBaseItem__SetRequiredFeat)(CNWBaseItem *, uint8_t, uint16_t);
extern int (*CNWBaseItem__SetRequiredFeatCount)(CNWBaseItem *, uint8_t);
extern char *(*CNWBaseItemArray__GetBaseItem)(CNWBaseItemArray *, int32_t);
extern int (*CNWBaseItemArray__Load)(CNWBaseItemArray *);
extern int (*CNWCCMessageData__ClearData)(CNWCCMessageData *);
extern int (*CNWCCMessageData__CopyTo)(CNWCCMessageData *, CNWCCMessageData *);
extern int (*CNWCCMessageData__GetFloat)(CNWCCMessageData *, int32_t);
extern int (*CNWCCMessageData__GetInteger)(CNWCCMessageData *, int32_t);
extern int (*CNWCCMessageData__GetObjectID)(CNWCCMessageData *, int32_t);
extern int (*CNWCCMessageData__GetString)(CNWCCMessageData *, int32_t);
extern int (*CNWCCMessageData__LoadData)(CNWCCMessageData *, CResGFF *, CResStruct *);
extern int (*CNWCCMessageData__SaveData)(CNWCCMessageData *, CResGFF *, CResStruct *);
extern int (*CNWCCMessageData__SetFloat)(CNWCCMessageData *, int32_t, float);
extern int (*CNWCCMessageData__SetInteger)(CNWCCMessageData *, int32_t, int32_t);
extern int (*CNWCCMessageData__SetObjectID)(CNWCCMessageData *, int32_t, uint32_t);
extern int (*CNWCCMessageData__SetString)(CNWCCMessageData *, int32_t, CExoString);
extern int (*CNWClass__GetAttackBonus)(CNWClass *, uint8_t);
extern int (*CNWClass__GetBonusFeats)(CNWClass *, uint8_t);
extern int (*CNWClass__GetClassFeat)(CNWClass *, uint16_t);
extern int (*CNWClass__GetDescriptionText)(CNWClass *);
extern int (*CNWClass__GetFortSaveBonus)(CNWClass *, uint8_t);
extern int (*CNWClass__GetIsAlignmentAllowed)(CNWClass *, uint8_t, uint8_t);
extern int (*CNWClass__GetLevelFeatGranted)(CNWClass *, uint16_t);
extern int (*CNWClass__GetLevelGranted)(CNWClass *, uint16_t);
extern int (*CNWClass__GetNameLowerText)(CNWClass *);
extern int (*CNWClass__GetNamePluralText)(CNWClass *);
extern int (*CNWClass__GetNameText)(CNWClass *);
extern int (*CNWClass__GetRefSaveBonus)(CNWClass *, uint8_t);
extern int (*CNWClass__GetSpellGain)(CNWClass *, uint8_t, uint8_t);
extern int (*CNWClass__GetSpellsKnownPerLevel)(CNWClass *, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t);
extern int (*CNWClass__GetWillSaveBonus)(CNWClass *, uint8_t);
extern int (*CNWClass__IsBonusFeat)(CNWClass *, uint16_t);
extern int (*CNWClass__IsFeatUseable)(CNWClass *, uint16_t);
extern int (*CNWClass__IsGrantedFeat)(CNWClass *, uint16_t, unsigned char *);
extern int (*CNWClass__IsNormalFeat)(CNWClass *, uint16_t);
extern int (*CNWClass__IsSkillClassSkill)(CNWClass *, uint16_t);
extern int (*CNWClass__IsSkillUseable)(CNWClass *, uint16_t);
extern int (*CNWClass__LoadAttackBonusTable)(CNWClass *, CExoString);
extern int (*CNWClass__LoadBonusFeatsTable)(CNWClass *, CExoString);
extern int (*CNWClass__LoadFeatsTable)(CNWClass *, CExoString, CNWRules *);
extern int (*CNWClass__LoadSavingThrowTable)(CNWClass *, CExoString);
extern int (*CNWClass__LoadSkillsTable)(CNWClass *, CExoString);
extern int (*CNWClass__LoadSpellGainTable)(CNWClass *, CExoString);
extern int (*CNWClass__LoadSpellKnownTable)(CNWClass *, CExoString);
extern int (*CNWDomain__GetDescriptionText)(CNWDomain *);
extern int (*CNWDomain__GetNameText)(CNWDomain *);
extern int (*CNWFeat__GetDescriptionText)(CNWFeat *);
extern int (*CNWFeat__GetNameText)(CNWFeat *);
extern int (*CNWItem__GetBaseItemID)(CNWItem *);
extern int (*CNWItem__GetLayeredTextureColor)(CNWItem *, uint8_t);
extern int (*CNWItem__SetBaseItemID)(CNWItem *, uint32_t);
extern int (*CNWItem__SetLayeredTextureColor)(CNWItem *, uint8_t, uint8_t);
extern int (*CNWMessage__ClearReadMessage)(CNWMessage *);
extern int (*CNWMessage__CreateWriteMessage)(CNWMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWMessage__ExtendWriteBuffer)(CNWMessage *, uint32_t);
extern int (*CNWMessage__ExtendWriteFragmentsBuffer)(CNWMessage *, uint32_t);
extern int (*CNWMessage__GetObjectLookupTable)(CNWMessage *);
extern int (*CNWMessage__GetWriteMessage)(CNWMessage *, unsigned char **, uint32_t *);
extern int (*CNWMessage__MessageMoreDataToRead)(CNWMessage *);
extern int (*CNWMessage__MessageReadOverflow)(CNWMessage *, int32_t);
extern int (*CNWMessage__MessageReadUnderflow)(CNWMessage *, int32_t);
extern int (*CNWMessage__PeekAtWriteMessageSize)(CNWMessage *);
extern int (*CNWMessage__ReadBOOL)(CNWMessage *);
extern int (*CNWMessage__ReadBYTE)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadBit)(CNWMessage *, uint8_t);
extern int (*CNWMessage__ReadBits)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadCExoString)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadCHAR)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadCResRef)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadDOUBLE_1)(CNWMessage *, double, double, int32_t);
extern int (*CNWMessage__ReadDOUBLE_2)(CNWMessage *, double, int32_t);
extern int (*CNWMessage__ReadDWORD)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadDWORD64)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadFLOAT_1)(CNWMessage *, float, float, int32_t);
extern int (*CNWMessage__ReadFLOAT_2)(CNWMessage *, float, int32_t);
extern int (*CNWMessage__ReadINT)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadINT64)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadSHORT)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadSigned)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadUnsigned)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadVOIDPtr)(CNWMessage *, int32_t);
extern int (*CNWMessage__ReadWORD)(CNWMessage *, int32_t);
extern int (*CNWMessage__SetReadMessage)(CNWMessage *, unsigned char *, uint32_t, uint32_t, int32_t);
extern int (*CNWMessage__WriteBOOL)(CNWMessage *, int32_t);
extern int (*CNWMessage__WriteBYTE)(CNWMessage *, uint8_t, int32_t);
extern int (*CNWMessage__WriteBit)(CNWMessage *, uint8_t);
extern int (*CNWMessage__WriteBits)(CNWMessage *, uint64_t, int32_t);
extern int (*CNWMessage__WriteCExoString)(CNWMessage *, CExoString, int32_t);
extern int (*CNWMessage__WriteCHAR)(CNWMessage *, int8_t, int32_t);
extern int (*CNWMessage__WriteCResRef)(CNWMessage *, CResRef, int32_t);
extern int (*CNWMessage__WriteDOUBLE_1)(CNWMessage *, double, double, double, int32_t);
extern int (*CNWMessage__WriteDOUBLE_2)(CNWMessage *, double, double, int32_t);
extern int (*CNWMessage__WriteDWORD)(CNWMessage *, uint32_t, int32_t);
extern int (*CNWMessage__WriteDWORD64)(CNWMessage *, uint64_t, int32_t);
extern int (*CNWMessage__WriteFLOAT_1)(CNWMessage *, float, float, float, int32_t);
extern int (*CNWMessage__WriteFLOAT_2)(CNWMessage *, float, float, int32_t);
extern int (*CNWMessage__WriteINT)(CNWMessage *, int32_t, int32_t);
extern int (*CNWMessage__WriteINT64)(CNWMessage *, int64_t, int32_t);
extern int (*CNWMessage__WriteSHORT)(CNWMessage *, int16_t, int32_t);
extern int (*CNWMessage__WriteSigned)(CNWMessage *, int64_t, int32_t);
extern int (*CNWMessage__WriteUnsigned)(CNWMessage *, uint64_t, int32_t);
extern int (*CNWMessage__WriteVOIDPtr)(CNWMessage *, void *, int32_t);
extern int (*CNWMessage__WriteWORD)(CNWMessage *, uint16_t, int32_t);
extern int (*CNWRace__GetConverNameLowerText)(CNWRace *);
extern int (*CNWRace__GetConverNameText)(CNWRace *);
extern int (*CNWRace__GetDefaultBiographyText)(CNWRace *);
extern int (*CNWRace__GetDescriptionText)(CNWRace *);
extern int (*CNWRace__GetNamePluralText)(CNWRace *);
extern int (*CNWRace__GetNameText)(CNWRace *);
extern int (*CNWRace__IsFirstLevelGrantedFeat)(CNWRace *, uint16_t);
extern int (*CNWRace__LoadFeatsTable)(CNWRace *, CExoString);
extern int (*CNWRules__CompareFeatName)(CNWRules *, void const *, void const *);
extern int (*CNWRules__Get2DArrays)(CNWRules *);
extern int (*CNWRules__GetBaseItem)(CNWRules *, uint32_t);
extern int (*CNWRules__GetClass)(CNWRules *, uint8_t);
extern int (*CNWRules__GetClassExpansionLevel)(CNWRules *, uint8_t);
extern int (*CNWRules__GetDamageIndexFromFlags)(CNWRules *, uint32_t);
extern int (*CNWRules__GetDifficultyOption)(CNWRules *, int32_t, int32_t);
extern int (*CNWRules__GetDomain)(CNWRules *, uint16_t);
extern int (*CNWRules__GetExperienceLevel)(CNWRules *, uint8_t);
extern int (*CNWRules__GetFamiliarExpansionLevel)(CNWRules *, uint8_t, int32_t);
extern int (*CNWRules__GetFeat)(CNWRules *, uint16_t);
extern int (*CNWRules__GetFeatExpansionLevel)(CNWRules *, uint16_t);
extern int (*CNWRules__GetIsClassValid)(CNWRules *, uint8_t);
extern int (*CNWRules__GetMasterFeatDescriptionText)(CNWRules *, int8_t);
extern int (*CNWRules__GetMasterFeatIcon)(CNWRules *, int8_t);
extern int (*CNWRules__GetMasterFeatNameText)(CNWRules *, int8_t);
extern int (*CNWRules__GetMetaMagicLevelCost)(CNWRules *, uint8_t);
extern int (*CNWRules__GetNumClasses)(CNWRules *);
extern int (*CNWRules__GetNumDomains)(CNWRules *);
extern int (*CNWRules__GetNumFeats)(CNWRules *);
extern int (*CNWRules__GetNumRaces)(CNWRules *);
extern int (*CNWRules__GetNumSkills)(CNWRules *);
extern int (*CNWRules__GetNumSortedFeats)(CNWRules *);
extern int (*CNWRules__GetNumSpells)(CNWRules *);
extern int (*CNWRules__GetRace)(CNWRules *, uint16_t);
extern int (*CNWRules__GetSkill)(CNWRules *, uint16_t);
extern int (*CNWRules__GetSkillExpansionLevel)(CNWRules *, uint16_t);
extern int (*CNWRules__GetSortedFeatID)(CNWRules *, uint16_t);
extern int (*CNWRules__GetSpell)(CNWRules *, uint32_t);
extern int (*CNWRules__GetSpellExpansionLevel)(CNWRules *, uint32_t);
extern int (*CNWRules__GetSpellRange)(CNWRules *, int32_t);
extern int (*CNWRules__GetWeightedDamageAmount)(CNWRules *, int32_t, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWRules__IsArcaneClass)(CNWRules *, uint8_t);
extern int (*CNWRules__IsFeatUseable)(CNWRules *, uint8_t, uint16_t);
extern int (*CNWRules__LoadClassInfo)(CNWRules *);
extern int (*CNWRules__LoadDifficultyInfo)(CNWRules *);
extern int (*CNWRules__LoadDomainInfo)(CNWRules *);
extern int (*CNWRules__LoadFeatInfo)(CNWRules *);
extern int (*CNWRules__LoadRaceInfo)(CNWRules *);
extern int (*CNWRules__LoadSkillInfo)(CNWRules *);
extern int (*CNWRules__ReloadAll)(CNWRules *);
extern int (*CNWRules__RollDice)(CNWRules *, uint8_t, uint8_t);
extern int (*CNWRules__SortFeats)(CNWRules *);
extern int (*CNWRules__UnloadAll)(CNWRules *);
extern int (*CNWSAmbientSound__GetPlayersInArea)(CNWSAmbientSound *, CExoArrayList_uint32 *);
extern int (*CNWSAmbientSound__Load)(CNWSAmbientSound *, CResGFF *, CResStruct *);
extern int (*CNWSAmbientSound__PackIntoMessage)(CNWSAmbientSound *, CNWSMessage *);
extern int (*CNWSAmbientSound__PlayAmbientSound)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__PlayBattleMusic)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__PlayMusic)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__Save)(CNWSAmbientSound *, CResGFF *, CResStruct *);
extern int (*CNWSAmbientSound__SetAmbientDayTrack)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__SetAmbientDayVolume)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__SetAmbientNightTrack)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__SetAmbientNightVolume)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__SetBattleMusicTrack)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__SetMusicDayTrack)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__SetMusicDelay)(CNWSAmbientSound *, int32_t);
extern int (*CNWSAmbientSound__SetMusicNightTrack)(CNWSAmbientSound *, int32_t);
extern int (*CNWSArea__AIUpdate)(CNWSArea *);
extern int (*CNWSArea__AddObjectToArea)(CNWSArea *, uint32_t, int32_t);
extern int (*CNWSArea__AddSubArea)(CNWSArea *, CGameObject *);
extern int (*CNWSArea__ApplyEffect)(CNWSArea *, CGameEffect *, Vector, Vector);
extern int (*CNWSArea__AsNWSArea)(CNWSArea *);
extern int (*CNWSArea__BudgeCreatures)(CNWSArea *, Vector const *, Vector const *, Vector const *, uint32_t, int32_t);
extern int (*CNWSArea__ClearLineOfSight)(CNWSArea *, Vector, Vector, Vector *, uint32_t *, uint32_t, uint32_t, int32_t);
extern int (*CNWSArea__ComputeAwayVector)(CNWSArea *, Vector, Vector, float, CPathfindInformation *);
extern int (*CNWSArea__ComputeBestCorner)(CNWSArea *, float, float, float, float, float, float, float, float, float *, float *, float *, float *);
extern float (*CNWSArea__ComputeHeight)(CNWSArea *, Vector);
extern int (*CNWSArea__ComputeNonVisibleLocation)(CNWSArea *, Vector, CPathfindInformation *, int32_t, Vector *, float);
extern int (*CNWSArea__ComputePathDistance)(CNWSArea *, int32_t, float *);
extern int (*CNWSArea__ComputeSafeLocation)(CNWSArea *, Vector, float, CPathfindInformation *, int32_t, Vector *);
extern int (*CNWSArea__ComputeSafeLocationInDirection)(CNWSArea *, Vector, Vector, float, CPathfindInformation *, int32_t, Vector *);
extern int (*CNWSArea__CountAreaTransitionTriggers)(CNWSArea *, uint32_t *, int32_t, uint32_t *);
extern int (*CNWSArea__CountVisibleToPlayers)(CNWSArea *, Vector, int32_t);
extern int (*CNWSArea__DecreaseAILevelPriority)(CNWSArea *);
extern int (*CNWSArea__DecrementPlayersInArea)(CNWSArea *);
extern int (*CNWSArea__EvaluateOverlappingTargets)(CNWSArea *, CPathfindInformation *, Vector, uint32_t, float, float, float, int32_t, int32_t, uint32_t *);
extern int (*CNWSArea__EventHandler)(CNWSArea *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSArea__ExploreArea)(CNWSArea *, CNWSCreature *, int32_t, int32_t, int32_t);
extern int (*CNWSArea__GenerateInterTilePath)(CNWSArea *, int32_t *, int32_t, int32_t, int32_t);
extern int (*CNWSArea__GetAmbientSound)(CNWSArea *);
extern int (*CNWSArea__GetAreaListenCheckModifier)(CNWSArea *);
extern int (*CNWSArea__GetAreaName)(CNWSArea *);
extern int (*CNWSArea__GetAreaSpotCheckModifier)(CNWSArea *);
extern int (*CNWSArea__GetCurrentWeather)(CNWSArea *);
extern int (*CNWSArea__GetCustomScriptEventId)(CNWSArea *);
extern int (*CNWSArea__GetDoorCrossed)(CNWSArea *, Vector, Vector);
extern int (*CNWSArea__GetFirstObjectInArea)(CNWSArea *, uint32_t *);
extern int (*CNWSArea__GetFirstObjectIndiceByX)(CNWSArea *, int32_t *, float);
extern int (*CNWSArea__GetGameObjectsArray)(CNWSArea *);
extern int (*CNWSArea__GetInterAreaDFSVisited)(CNWSArea *);
extern int (*CNWSArea__GetIsIDInExcludeList)(CNWSArea *, uint32_t, CExoArrayList_ptr *);
extern int (*CNWSArea__GetLastEntered)(CNWSArea *);
extern int (*CNWSArea__GetLastLeft)(CNWSArea *);
extern int (*CNWSArea__GetLoadScreenID)(CNWSArea *);
extern int (*CNWSArea__GetMapSize)(CNWSArea *);
extern int (*CNWSArea__GetNextObjectInArea)(CNWSArea *, uint32_t *);
extern int (*CNWSArea__GetNumPlayersInArea)(CNWSArea *);
extern int (*CNWSArea__GetObjectByNameIndex)(CNWSArea *);
extern int (*CNWSArea__GetObjectsArrayPosition)(CNWSArea *);
extern int (*CNWSArea__GetOverrideWeather)(CNWSArea *);
extern int (*CNWSArea__GetPVPSetting)(CNWSArea *);
extern int (*CNWSArea__GetScriptName)(CNWSArea *, int32_t);
extern int (*CNWSArea__GetScriptVarTable)(CNWSArea *);
extern int (*CNWSArea__GetSoundPathInformation)(CNWSArea *);
extern int (*CNWSArea__GetSurfaceMaterial)(CNWSArea *, Vector);
extern int (*CNWSArea__GetTag)(CNWSArea *);
extern int (*CNWSArea__GetTile_1)(CNWSArea *, Vector);
extern int (*CNWSArea__GetTile_2)(CNWSArea *, int32_t, int32_t);
extern int (*CNWSArea__GetTileSetResRef)(CNWSArea *);
extern int (*CNWSArea__GetTrapList)(CNWSArea *);
extern int (*CNWSArea__GoalMoveDenied)(CNWSArea *, int32_t, int32_t, int32_t);
extern int (*CNWSArea__GridDFSGenerateSuccessors)(CNWSArea *, int32_t, int32_t, int32_t, int32_t, int32_t, CNWSAreaGridSuccessors **);
extern int (*CNWSArea__GridDFSTransTableGet)(CNWSArea *, int32_t, int32_t, int32_t *, int32_t *);
extern int (*CNWSArea__GridDFSTransTableHash)(CNWSArea *, int32_t, int32_t);
extern int (*CNWSArea__GridDFSTransTableInitialize)(CNWSArea *);
extern int (*CNWSArea__GridDFSTransTablePut)(CNWSArea *, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSArea__GridDFSearch)(CNWSArea *, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSArea__HandleTransparentDoors)(CNWSArea *, float, float, float, float, float, float, float, uint32_t, uint32_t *, int32_t, CExoArrayList_ptr *, int32_t);
extern int (*CNWSArea__InSubAreas)(CNWSArea *, Vector, CExoArrayList_uint32 *);
extern int (*CNWSArea__IncreaseAILevelPriority)(CNWSArea *);
extern int (*CNWSArea__IncrementPlayersInArea)(CNWSArea *);
extern int (*CNWSArea__InterTileDFS)(CNWSArea *, int32_t, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSArea__InterTileDFSExploreArea)(CNWSArea *, unsigned char *, int32_t, int32_t, int32_t, float, float);
extern int (*CNWSArea__InterTileDFSGenerateSuccessors)(CNWSArea *, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSArea__InterTileDFSSoundPath)(CNWSArea *, unsigned char *, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSArea__IntersectingLineSegment)(CNWSArea *, Vector, Vector, CExoArrayList_uint32 *);
extern int (*CNWSArea__LoadArea)(CNWSArea *, int32_t);
extern int (*CNWSArea__LoadAreaEffects)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__LoadAreaHeader)(CNWSArea *, CResStruct *);
extern int (*CNWSArea__LoadCreatures)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__LoadDoors)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__LoadEncounters)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__LoadGIT)(CNWSArea *, int32_t);
extern int (*CNWSArea__LoadItems)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__LoadPlaceables)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__LoadPlayers)(CNWSArea *, CResGFF *, CResStruct *);
extern int (*CNWSArea__LoadProperties)(CNWSArea *, CResGFF *, CResStruct *);
extern int (*CNWSArea__LoadSounds)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__LoadStores)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__LoadTileSetInfo)(CNWSArea *, CResStruct *);
extern int (*CNWSArea__LoadTriggers)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__LoadWaypoints)(CNWSArea *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSArea__NWAreaAsNWSArea)(CNWSArea *);
extern int (*CNWSArea__NoCreaturesOnLine)(CNWSArea *, float, float, float, float, CPathfindInformation *, int32_t, int32_t, uint32_t *, int32_t);
extern int (*CNWSArea__NoNoneWalkPolysInStaticObject)(CNWSArea *, uint32_t, float, float, float, float, float, float, float, uint32_t, int32_t);
extern int (*CNWSArea__PackAreaIntoMessage)(CNWSArea *, int32_t, int32_t, int32_t, CNWSPlayer *);
extern int (*CNWSArea__PlayVisualEffect)(CNWSArea *, uint16_t, Vector);
extern int (*CNWSArea__PlotGridPath)(CNWSArea *, CPathfindInformation *, uint64_t);
extern int (*CNWSArea__PlotPath)(CNWSArea *, CPathfindInformation *, uint64_t);
extern int (*CNWSArea__PlotSoundPath)(CNWSArea *, CPathfindInformation *);
extern int (*CNWSArea__PositionWalkable)(CNWSArea *, Vector);
extern int (*CNWSArea__RemoveInterTileExit)(CNWSArea *, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSArea__RemoveObjectFromArea)(CNWSArea *, uint32_t);
extern int (*CNWSArea__RemoveSubArea)(CNWSArea *, CGameObject *);
extern int (*CNWSArea__SaveArea)(CNWSArea *, CERFFile *, CExoString *);
extern int (*CNWSArea__SaveAreaEffects)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SaveCreatures)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SaveDoors)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SaveEncounters)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SaveGIT)(CNWSArea *, CERFFile *, CExoString *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SaveItems)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SavePlaceables)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SaveProperties)(CNWSArea *, CResGFF *, CResStruct *);
extern int (*CNWSArea__SaveSounds)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SaveStores)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SaveTriggers)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SaveWaypoints)(CNWSArea *, CResGFF *, CResStruct *, CExoArrayList_uint32 *);
extern int (*CNWSArea__SetCurrentWeather)(CNWSArea *, uint8_t, int32_t);
extern int (*CNWSArea__SetCustomScriptEventId)(CNWSArea *, int32_t);
extern int (*CNWSArea__SetInterAreaDFSVisited)(CNWSArea *, int32_t);
extern int (*CNWSArea__SetLastEntered)(CNWSArea *, uint32_t);
extern int (*CNWSArea__SetLastLeft)(CNWSArea *, uint32_t);
extern int (*CNWSArea__SetMapSize)(CNWSArea *, uint8_t);
extern int (*CNWSArea__SetObjectByNameIndex)(CNWSArea *, int32_t);
extern int (*CNWSArea__SetObjectsArrayPosition)(CNWSArea *, int32_t);
extern int (*CNWSArea__SetOverrideWeather)(CNWSArea *, uint8_t);
extern int (*CNWSArea__SetPVPSetting)(CNWSArea *, uint8_t);
extern int (*CNWSArea__SetScriptName)(CNWSArea *, int32_t, CExoString);
extern int (*CNWSArea__SetSearchInfo)(CNWSArea *, CPathfindInformation *);
extern int (*CNWSArea__SetTag)(CNWSArea *, CExoString);
extern int (*CNWSArea__SmoothCornerOptimize)(CNWSArea *, int32_t, float *, int32_t *, float **);
extern int (*CNWSArea__SmoothPointsOnPath)(CNWSArea *);
extern int (*CNWSArea__SmoothSelectNodes)(CNWSArea *, int32_t, float *, int32_t *, float **, int32_t, int32_t);
extern int (*CNWSArea__SmoothSelection)(CNWSArea *, int32_t, float *, int32_t *, float **);
extern int (*CNWSArea__TestDirectLine)(CNWSArea *, float, float, float, float, float, float, int32_t);
extern int (*CNWSArea__TestLineWalkable)(CNWSArea *, float, float, float, float, float);
extern int (*CNWSArea__TestSafeLocationPoint)(CNWSArea *, Vector, CPathfindInformation *);
extern int (*CNWSArea__UnloadArea)(CNWSArea *);
extern int (*CNWSArea__UpdatePlayerAutomaps)(CNWSArea *);
extern int (*CNWSArea__UpdatePositionInObjectsArray)(CNWSArea *, CGameObject *);
extern int (*CNWSAreaOfEffectObject__AIUpdate)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__AddToArea)(CNWSAreaOfEffectObject *, CNWSArea *, float, float, float, int32_t);
extern int (*CNWSAreaOfEffectObject__AsNWSAreaOfEffectObject)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__EventHandler)(CNWSAreaOfEffectObject *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSAreaOfEffectObject__GetAreaEffectId)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetCreator)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetEffectSpellId)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetLastEntered)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetLastLeft)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetObjectArrayIndex)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetPosition)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetRadius)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetScriptName)(CNWSAreaOfEffectObject *, int32_t);
extern int (*CNWSAreaOfEffectObject__GetShape)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetSpellLevel)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetSpellSaveDC)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__GetTargetObjID)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__InAreaOfEffect)(CNWSAreaOfEffectObject *, Vector);
extern int (*CNWSAreaOfEffectObject__JumpToPoint)(CNWSAreaOfEffectObject *, CNWSArea *, Vector const *);
extern int (*CNWSAreaOfEffectObject__LineSegmentIntersectAreaOfEffect)(CNWSAreaOfEffectObject *, Vector, Vector);
extern int (*CNWSAreaOfEffectObject__LoadAreaEffect)(CNWSAreaOfEffectObject *, int32_t);
extern int (*CNWSAreaOfEffectObject__LoadEffect)(CNWSAreaOfEffectObject *, CResGFF *, CResStruct *);
extern int (*CNWSAreaOfEffectObject__RemoveFromArea)(CNWSAreaOfEffectObject *);
extern int (*CNWSAreaOfEffectObject__RemoveFromSubAreas)(CNWSAreaOfEffectObject *, int32_t);
extern int (*CNWSAreaOfEffectObject__SaveEffect)(CNWSAreaOfEffectObject *, CResGFF *, CResStruct *);
extern int (*CNWSAreaOfEffectObject__SetCreator)(CNWSAreaOfEffectObject *, uint32_t);
extern int (*CNWSAreaOfEffectObject__SetDuration)(CNWSAreaOfEffectObject *, uint8_t, float);
extern int (*CNWSAreaOfEffectObject__SetEffectSpellId)(CNWSAreaOfEffectObject *, uint32_t);
extern int (*CNWSAreaOfEffectObject__SetLastEntered)(CNWSAreaOfEffectObject *, uint32_t);
extern int (*CNWSAreaOfEffectObject__SetLastLeft)(CNWSAreaOfEffectObject *, uint32_t);
extern int (*CNWSAreaOfEffectObject__SetObjectArrayIndex)(CNWSAreaOfEffectObject *, uint16_t);
extern int (*CNWSAreaOfEffectObject__SetScriptName)(CNWSAreaOfEffectObject *, int32_t, CExoString);
extern int (*CNWSAreaOfEffectObject__SetShape)(CNWSAreaOfEffectObject *, uint8_t, float, float);
extern int (*CNWSAreaOfEffectObject__SetTargetObjID)(CNWSAreaOfEffectObject *, uint32_t);
extern int (*CNWSAreaOfEffectObject__UpdateSubAreas)(CNWSAreaOfEffectObject *, Vector *);
extern int (*CNWSBarter__AddItem)(CNWSBarter *, uint32_t, unsigned char *, unsigned char *);
extern int (*CNWSBarter__CleanUp)(CNWSBarter *);
extern int (*CNWSBarter__GetState)(CNWSBarter *);
extern int (*CNWSBarter__MoveItem)(CNWSBarter *, uint32_t, unsigned char *, unsigned char *);
extern int (*CNWSBarter__PullItemOut)(CNWSBarter *, uint32_t);
extern int (*CNWSBarter__RemoveItem)(CNWSBarter *, uint32_t, unsigned char *, unsigned char *);
extern int (*CNWSBarter__Reset)(CNWSBarter *, uint32_t, int32_t);
extern int (*CNWSBarter__SetListAccepted)(CNWSBarter *, int32_t);
extern int (*CNWSBarter__SetListLocked)(CNWSBarter *, int32_t);
extern int (*CNWSClient__AsNWSDungeonMaster)(CNWSClient *);
extern int (*CNWSClient__AsNWSPlayer)(CNWSClient *);
extern int (*CNWSClient__GetLanguage)(CNWSClient *);
extern int (*CNWSClient__GetPlayerId)(CNWSClient *);
extern int (*CNWSClient__SetLanguage)(CNWSClient *, int32_t);
extern int (*CNWSCombatAttackData__AddDamage)(CNWSCombatAttackData *, uint16_t, int32_t);
extern int (*CNWSCombatAttackData__ClearAttackData)(CNWSCombatAttackData *);
extern int (*CNWSCombatAttackData__Copy)(CNWSCombatAttackData *, CNWSCombatAttackData *, int32_t);
extern int (*CNWSCombatAttackData__GetDamage)(CNWSCombatAttackData *, uint16_t);
extern int (*CNWSCombatAttackData__GetTotalDamage)(CNWSCombatAttackData *, int32_t);
extern int (*CNWSCombatAttackData__LoadData)(CNWSCombatAttackData *, CResGFF *, CResStruct *);
extern int (*CNWSCombatAttackData__SaveData)(CNWSCombatAttackData *, CResGFF *, CResStruct *);
extern int (*CNWSCombatAttackData__SetBaseDamage)(CNWSCombatAttackData *, int32_t);
extern int (*CNWSCombatAttackData__SetDamage)(CNWSCombatAttackData *, uint16_t, int32_t);
extern int (*CNWSCombatRound__AddAction)(CNWSCombatRound *, CNWSCombatRoundAction *);
extern int (*CNWSCombatRound__AddAttackOfOpportunity)(CNWSCombatRound *, uint32_t);
extern int (*CNWSCombatRound__AddCircleKickAttack)(CNWSCombatRound *, uint32_t);
extern int (*CNWSCombatRound__AddCleaveAttack)(CNWSCombatRound *, uint32_t, int32_t);
extern int (*CNWSCombatRound__AddCombatStepAction)(CNWSCombatRound *, uint32_t, uint32_t);
extern int (*CNWSCombatRound__AddEquipAction)(CNWSCombatRound *, uint32_t, uint32_t);
extern int (*CNWSCombatRound__AddParryAttack)(CNWSCombatRound *, uint32_t);
extern int (*CNWSCombatRound__AddParryIndex)(CNWSCombatRound *);
extern int (*CNWSCombatRound__AddReaction)(CNWSCombatRound *, int32_t, int32_t);
extern int (*CNWSCombatRound__AddSpecialAttack)(CNWSCombatRound *, uint16_t);
extern int (*CNWSCombatRound__AddSpellAction)(CNWSCombatRound *);
extern int (*CNWSCombatRound__AddUnequipAction)(CNWSCombatRound *, uint32_t, uint32_t, uint8_t, uint8_t);
extern int (*CNWSCombatRound__AddWhirlwindAttack)(CNWSCombatRound *, uint32_t, int32_t);
extern int (*CNWSCombatRound__CalculateOffHandAttacks)(CNWSCombatRound *);
extern int (*CNWSCombatRound__CheckActionLength)(CNWSCombatRound *, uint32_t, int32_t);
extern int (*CNWSCombatRound__CheckActionLengthAtTime)(CNWSCombatRound *, uint32_t, int32_t, int32_t);
extern int (*CNWSCombatRound__ClearAllAttacks)(CNWSCombatRound *);
extern int (*CNWSCombatRound__ClearAllSpecialAttacks)(CNWSCombatRound *);
extern int (*CNWSCombatRound__DecrementPauseTimer)(CNWSCombatRound *, int32_t);
extern int (*CNWSCombatRound__DecrementRoundLength)(CNWSCombatRound *, int32_t, int32_t);
extern int (*CNWSCombatRound__EndCombatRound)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetAction)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetActionPending)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetAttack)(CNWSCombatRound *, int32_t);
extern int (*CNWSCombatRound__GetAttackActionPending)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetCombatStepRequired)(CNWSCombatRound *, uint32_t);
extern CNWSItem *(*CNWSCombatRound__GetCurrentAttackWeapon)(CNWSCombatRound *, int32_t);
extern int (*CNWSCombatRound__GetExtraAttack)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetNewAttackID)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetNumSpecialAttacks)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetOffHandAttack)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetSpecialAttack)(CNWSCombatRound *, int32_t);
extern int (*CNWSCombatRound__GetSpecialAttackID)(CNWSCombatRound *, int32_t);
extern int (*CNWSCombatRound__GetSpellActionPending)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetTotalAttacks)(CNWSCombatRound *);
extern int (*CNWSCombatRound__GetWeaponAttackType)(CNWSCombatRound *);
extern int (*CNWSCombatRound__HasCreatureWeapons)(CNWSCombatRound *);
extern int (*CNWSCombatRound__IncrementTimer)(CNWSCombatRound *, int32_t);
extern int (*CNWSCombatRound__InitializeAttackActions)(CNWSCombatRound *, uint32_t);
extern int (*CNWSCombatRound__InitializeCombatModes)(CNWSCombatRound *);
extern int (*CNWSCombatRound__InitializeNumberOfAttacks)(CNWSCombatRound *);
extern int (*CNWSCombatRound__InsertSpecialAttack)(CNWSCombatRound *, uint16_t, int32_t);
extern int (*CNWSCombatRound__LoadCombatRound)(CNWSCombatRound *, CResGFF *, CResStruct *);
extern int (*CNWSCombatRound__RecomputeRound)(CNWSCombatRound *);
extern int (*CNWSCombatRound__RemoveAllActions)(CNWSCombatRound *);
extern int (*CNWSCombatRound__RemoveSpecialAttack)(CNWSCombatRound *, int32_t);
extern int (*CNWSCombatRound__RemoveSpellAction)(CNWSCombatRound *);
extern int (*CNWSCombatRound__SaveCombatRound)(CNWSCombatRound *, CResGFF *, CResStruct *);
extern int (*CNWSCombatRound__SetCurrentAttack)(CNWSCombatRound *, uint8_t);
extern int (*CNWSCombatRound__SetDeflectArrow)(CNWSCombatRound *, int32_t);
extern int (*CNWSCombatRound__SetPauseTimer)(CNWSCombatRound *, int32_t, int32_t);
extern int (*CNWSCombatRound__SetRoundPaused)(CNWSCombatRound *, int32_t, uint32_t);
extern int (*CNWSCombatRound__SignalCombatRoundStarted)(CNWSCombatRound *);
extern int (*CNWSCombatRound__StartCombatRound)(CNWSCombatRound *, uint32_t);
extern int (*CNWSCombatRound__StartCombatRoundCast)(CNWSCombatRound *, uint32_t);
extern int (*CNWSCombatRound__UpdateAttackTargetForAllActions)(CNWSCombatRound *, uint32_t);
extern int (*CNWSCombatRoundAction__LoadData)(CNWSCombatRoundAction *, CResGFF *, CResStruct *);
extern int (*CNWSCombatRoundAction__SaveData)(CNWSCombatRoundAction *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__AIActionAnimalEmpathy)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionAppear)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionAreaWait)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionAttackObject)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionBarter)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCastSpell)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionChangeFacingObject)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionChangeFacingPoint)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCheckForceFollowObject)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCheckInterAreaPathfinding)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCheckMoveAwayFromLocation)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCheckMoveAwayFromObject)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCheckMoveToObject)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCheckMoveToObjectRadius)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCheckMoveToPoint)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCheckMoveToPointRadius)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionCounterSpell)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionDisappear)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionDisarmTrap)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionDrive)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionDropItem)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionEncounterCreatureDestroySelf)(CNWSCreature *);
extern int (*CNWSCreature__AIActionEquipItem)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionExamine)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionExamineTrap)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionFlagTrap)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionForceFollowObject)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionHeal)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionItemCastSpell)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionJumpToObject)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionJumpToPoint)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionMoveToPoint)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionOrientCamera)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionPickPocket)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionPickUpItem)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionRandomWalk)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionRecoverTrap)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionRepositoryMove)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionRest)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionSetTrap)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionSit)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionTaunt)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionUnequipItem)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIActionWaitForEndOfRound)(CNWSCreature *, CNWSAction *);
extern int (*CNWSCreature__AIUpdate)(CNWSCreature *);
extern int (*CNWSCreature__AcquireItem)(CNWSCreature *, CNWSItem **, uint32_t, uint32_t, uint8_t, uint8_t, int32_t, int32_t);
extern int (*CNWSCreature__ActionManager)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__ActivityManager)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddAnimalEmpathyAction)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddAppearActions)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__AddAreaOfEffect)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddAssociate)(CNWSCreature *, uint32_t, uint16_t);
extern int (*CNWSCreature__AddAttackActions)(CNWSCreature *, uint32_t, int32_t, int32_t, int32_t);
extern int (*CNWSCreature__AddCastSpellActions)(CNWSCreature *, uint32_t, int32_t, int32_t, int32_t, int32_t, Vector, uint32_t, int32_t, int32_t, int32_t, uint8_t, int32_t, int32_t, int32_t, uint8_t);
extern int (*CNWSCreature__AddCounterSpellActions)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddDisappearActions)(CNWSCreature *, int32_t, int32_t);
extern int (*CNWSCreature__AddDriveAction)(CNWSCreature *, uint16_t, Vector const *, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSCreature__AddDropItemActions)(CNWSCreature *, uint32_t, Vector, int32_t);
extern int (*CNWSCreature__AddEquipItemActions)(CNWSCreature *, CNWSItem *, uint32_t, int32_t, int32_t, uint32_t);
extern int (*CNWSCreature__AddGold)(CNWSCreature *, int32_t, int32_t);
extern int (*CNWSCreature__AddHealActions)(CNWSCreature *, uint32_t, uint32_t, int32_t);
extern int (*CNWSCreature__AddItemCastSpellActions)(CNWSCreature *, uint32_t, int32_t, int32_t, Vector, uint32_t, int32_t);
extern int (*CNWSCreature__AddMoveToPointAction)(CNWSCreature *, uint16_t, Vector, uint32_t, uint32_t, int32_t, float, float, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSCreature__AddMoveToPointActionToFront)(CNWSCreature *, uint16_t, Vector, uint32_t, uint32_t, int32_t, float, float, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSCreature__AddPathfindingWaitActionToFront)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__AddPickPocketActions)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddPickUpItemActions)(CNWSCreature *, uint32_t, uint32_t, uint8_t, uint8_t);
extern int (*CNWSCreature__AddRepositoryMoveActions)(CNWSCreature *, CNWSItem *, uint32_t, uint8_t, uint8_t);
extern int (*CNWSCreature__AddSitActions)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddTauntActions)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddToArea)(CNWSCreature *, CNWSArea *, float, float, float, int32_t);
extern int (*CNWSCreature__AddToAssociateList)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddToInvitationsIgnored)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddToInvitationsOffered)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddToPVPList)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__AddToPersonalReputationList)(CNWSCreature *, uint32_t, int32_t, int32_t, float);
extern int (*CNWSCreature__AddToVisibleList)(CNWSCreature *, uint32_t, int32_t, int32_t, uint8_t, int32_t);
extern int (*CNWSCreature__AddTrapActions)(CNWSCreature *, uint32_t, uint8_t, uint32_t, Vector, uint32_t);
extern int (*CNWSCreature__AddUnequipActions)(CNWSCreature *, CNWSItem *, uint32_t, uint8_t, uint8_t, int32_t, int32_t, uint32_t);
extern int (*CNWSCreature__AddUseTalentAtLocationActions)(CNWSCreature *, int32_t, int32_t, Vector, uint8_t, uint32_t, int32_t, uint8_t, uint8_t);
extern int (*CNWSCreature__AddUseTalentOnObjectActions)(CNWSCreature *, int32_t, int32_t, uint32_t, uint8_t, uint32_t, int32_t, uint8_t, uint8_t);
extern int (*CNWSCreature__AdjustReputation)(CNWSCreature *, int32_t, int32_t);
extern int (*CNWSCreature__ApplyDeathExperience)(CNWSCreature *);
extern int (*CNWSCreature__ApplyDiseasePayload)(CNWSCreature *, CGameEffect *, uint32_t, uint32_t);
extern int (*CNWSCreature__ApplyOnHitAbilityDamage)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitBlindness)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitCastSpell)(CNWSCreature *, CNWSObject *, CNWItemProperty *, CNWSItem *);
extern int (*CNWSCreature__ApplyOnHitConfusion)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitDaze)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitDeafness)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitDeathAttack)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitDisease)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitDispelMagic_1)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitDispelMagic_2)(CNWSCreature *, CNWSObject *, uint32_t);
extern int (*CNWSCreature__ApplyOnHitDominate)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitDoom)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitFear)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitGreaterDispel)(CNWSCreature *, CNWSObject *, uint32_t);
extern int (*CNWSCreature__ApplyOnHitHold)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitKnock)(CNWSCreature *, CNWSObject *, uint32_t);
extern int (*CNWSCreature__ApplyOnHitLesserDispel)(CNWSCreature *, CNWSObject *, uint32_t);
extern int (*CNWSCreature__ApplyOnHitLevelDrain)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitMordysDisjunction)(CNWSCreature *, CNWSObject *, uint32_t);
extern int (*CNWSCreature__ApplyOnHitPoison)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitSilence)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitSlayAlignment)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitSlayAlignmentGroup)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitSlayRacialGroup)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitSleep)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitSlow)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitStun)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ApplyOnHitVampiricRegeneration)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitVorpal)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyOnHitWounding)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__ApplyPoisonPayload)(CNWSCreature *, CGameEffect *, uint32_t, uint32_t);
extern int (*CNWSCreature__ApplyWounding)(CNWSCreature *, CGameEffect *);
extern int (*CNWSCreature__AsNWSCreature)(CNWSCreature *);
extern int (*CNWSCreature__AutoCloseGUIPanels)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__BringAssociatesToNewFaction)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__BroadcastAssociateCommand)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__BroadcastAttackDataToParty)(CNWSCreature *, CNWCCMessageData *, CNWSCombatAttackData *, CNWSCreature *);
extern int (*CNWSCreature__BroadcastAttackOfOpportunity)(CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSCreature__BroadcastBattleCry)(CNWSCreature *);
extern int (*CNWSCreature__BroadcastCombatStateToParty)(CNWSCreature *);
extern int (*CNWSCreature__BroadcastDamageDataToParty)(CNWSCreature *, CNWCCMessageData *, CNWSCreature *);
extern int (*CNWSCreature__BroadcastDeathDataToParty)(CNWSCreature *, CNWCCMessageData *, CNWSCreature *);
extern int (*CNWSCreature__BroadcastFloatyData)(CNWSCreature *, CNWCCMessageData *);
extern int (*CNWSCreature__BroadcastSavingThrowData)(CNWSCreature *, CNWCCMessageData *);
extern int (*CNWSCreature__BroadcastSkillData)(CNWSCreature *, CNWCCMessageData *);
extern int (*CNWSCreature__BroadcastSpellCast)(CNWSCreature *, uint32_t, uint8_t, uint16_t);
extern int (*CNWSCreature__BroadcastVoiceChat)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__BroadcastWhirlwindAttack)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__BumpFriends)(CNWSCreature *, CNWSCreature *, Vector const *, Vector const *);
extern int (*CNWSCreature__CalculateDamagePower)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__CalculateDeathExperience)(CNWSCreature *, int32_t, int32_t);
extern int (*CNWSCreature__CalculateMaxElementalDamage)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__CalculatePersonalReputationAdjustment)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__CalculateProjectileTimeToTarget)(CNWSCreature *, Vector, int32_t);
extern int (*CNWSCreature__CalculateSpellSaveDC)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__CanEquipItem)(CNWSCreature *, CNWSItem *, uint32_t *, int32_t, int32_t, int32_t, CNWSPlayer *);
extern int (*CNWSCreature__CanEquipMiscellaneous)(CNWSCreature *, CNWSItem *, uint32_t *, int32_t, int32_t);
extern int (*CNWSCreature__CanEquipShield)(CNWSCreature *, CNWSItem *, int32_t, int32_t);
extern int (*CNWSCreature__CanEquipWeapon)(CNWSCreature *, CNWSItem *, uint32_t *, int32_t, int32_t, CNWSPlayer *);
extern int (*CNWSCreature__CanUnEquipWeapon)(CNWSCreature *, CNWSItem *);
extern int (*CNWSCreature__CanUseItem)(CNWSCreature *, CNWSItem *, int32_t);
extern int (*CNWSCreature__CancelAction)(CNWSCreature *, uint16_t, uint16_t);
extern int (*CNWSCreature__CancelGoldTransfer)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__CancelRest)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__CheckInventoryForPlotItems)(CNWSCreature *);
extern int (*CNWSCreature__CheckItemAlignmentRestrictions)(CNWSCreature *, CNWSItem *);
extern int (*CNWSCreature__CheckItemClassRestrictions)(CNWSCreature *, CNWSItem *);
extern int (*CNWSCreature__CheckItemRaceRestrictions)(CNWSCreature *, CNWSItem *);
extern int (*CNWSCreature__CheckMasterIsValid)(CNWSCreature *, uint32_t, uint32_t);
extern int (*CNWSCreature__CheckProficiencies)(CNWSCreature *, CNWSItem *, uint32_t);
extern int (*CNWSCreature__CheckUseMagicDeviceSkill)(CNWSCreature *, CNWSItem *, int32_t);
extern int (*CNWSCreature__CheckVisibleList)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__CleanInvitationLists)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__CleanOutPersonalReputationList)(CNWSCreature *);
extern int (*CNWSCreature__ClearAction)(CNWSCreature *, CNWSAction *, int32_t);
extern int (*CNWSCreature__ClearActivities)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__ClearAutoMapData)(CNWSCreature *);
extern int (*CNWSCreature__ClearHostileActionsVersus)(CNWSCreature *, CNWSCreature *);
extern int (*CNWSCreature__ClearPersonalReputation)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__ClearVisibleList)(CNWSCreature *);
extern int (*CNWSCreature__ComputeAIState)(CNWSCreature *);
extern int (*CNWSCreature__ComputeAIStateOnAction)(CNWSCreature *, int32_t, uint32_t);
extern int (*CNWSCreature__ComputeArmourClass)(CNWSCreature *, CNWSItem *, int32_t, int32_t);
extern int (*CNWSCreature__ComputeModifiedMovementRate)(CNWSCreature *);
extern int (*CNWSCreature__ComputeSpellRange)(CNWSCreature *, CExoString, uint32_t);
extern int (*CNWSCreature__ComputeTotalEquippedWeight)(CNWSCreature *);
extern int (*CNWSCreature__ComputeTotalWalkDistance)(CNWSCreature *);
extern int (*CNWSCreature__ComputeTotalWeightCarried)(CNWSCreature *);
extern int (*CNWSCreature__ConvertModeToggleQuickButton)(CNWSCreature *, CNWSQuickbarButton *);
extern int (*CNWSCreature__CopyQuickButtonsFromDM)(CNWSCreature *, CNWSPlayer *);
extern int (*CNWSCreature__CreateDefaultQuickButtons)(CNWSCreature *);
extern int (*CNWSCreature__CreateDefaultQuickButtonsDM)(CNWSCreature *);
extern int (*CNWSCreature__CreateDefaultQuickButtons_AddFeat)(CNWSCreature *, unsigned char *, uint16_t, int32_t);
extern int (*CNWSCreature__CreateDefaultQuickButtons_CheckItem)(CNWSCreature *, CNWSItem *, uint32_t *, uint32_t *, uint32_t *, uint32_t *);
extern int (*CNWSCreature__CutWaypointPath)(CNWSCreature *);
extern int (*CNWSCreature__DMClearScripts)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__DMResetClearedScripts)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__DecrementSpellReadyCount)(CNWSCreature *, uint32_t, uint8_t, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreature__DesiredAttackRange)(CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSCreature__DestroyEquippedItems)(CNWSCreature *);
extern int (*CNWSCreature__DisplayFloatyDataToSelf)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__DoCombatStep)(CNWSCreature *, uint8_t, int32_t, uint32_t);
extern int (*CNWSCreature__DoDamage)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__DoListenDetection)(CNWSCreature *, CNWSCreature *, int32_t);
extern int (*CNWSCreature__DoPerceptionUpdateOnCreature)(CNWSCreature *, CNWSCreature *, int32_t);
extern int (*CNWSCreature__DoSpotDetection)(CNWSCreature *, CNWSCreature *, int32_t);
extern int (*CNWSCreature__DoStealthDetection)(CNWSCreature *, CNWSCreature *, int32_t, int32_t *, int32_t *, int32_t);
extern int (*CNWSCreature__DriveUpdateLocation)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__DumpToLog)(CNWSCreature *);
extern int (*CNWSCreature__EquipItem)(CNWSCreature *, uint32_t, CNWSItem *, int32_t, int32_t);
extern int (*CNWSCreature__EquipMostDamagingAmmunition)(CNWSCreature *, uint32_t, CNWSItem *);
extern int (*CNWSCreature__EquipMostDamagingMeleeWeapon)(CNWSCreature *, uint32_t, int32_t, int32_t);
extern int (*CNWSCreature__EquipMostDamagingRangedWeapon)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__EquipMostEffectiveArmor)(CNWSCreature *);
extern int (*CNWSCreature__EvaluateLock)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__EventHandler)(CNWSCreature *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSCreature__ExternalResolveAttack)(CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSCreature__FailedOpenInformAssociates)(CNWSCreature *);
extern int (*CNWSCreature__ForceMoveToPoint)(CNWSCreature *, CNWSForcedAction *);
extern int (*CNWSCreature__GetAIState)(CNWSCreature *);
extern int (*CNWSCreature__GetAIStateActee)(CNWSCreature *);
extern int (*CNWSCreature__GetAIStateAction)(CNWSCreature *);
extern int (*CNWSCreature__GetAIStateActivities)(CNWSCreature *);
extern int (*CNWSCreature__GetActionQueueList)(CNWSCreature *);
extern int (*CNWSCreature__GetActivity)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__GetActivityLocked)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__GetAlreadyRemovedFromEncounter)(CNWSCreature *);
extern int (*CNWSCreature__GetAmbientAnimationState)(CNWSCreature *);
extern int (*CNWSCreature__GetAmmunitionAvailable)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__GetAnimalCompanionCreatureType)(CNWSCreature *);
extern int (*CNWSCreature__GetAnimalCompanionId)(CNWSCreature *);
extern int (*CNWSCreature__GetAnimalCompanionName)(CNWSCreature *);
extern int (*CNWSCreature__GetAppearance)(CNWSCreature *);
extern int (*CNWSCreature__GetAreaOfEffectObjects)(CNWSCreature *);
extern int (*CNWSCreature__GetArmorClass)(CNWSCreature *);
extern int (*CNWSCreature__GetAssociateId)(CNWSCreature *, uint16_t, int32_t);
extern int (*CNWSCreature__GetAssociateList)(CNWSCreature *);
extern int (*CNWSCreature__GetAssociateType)(CNWSCreature *);
extern int (*CNWSCreature__GetAttackResultHit)(CNWSCreature *, CNWSCombatAttackData *);
extern int (*CNWSCreature__GetAttackTarget)(CNWSCreature *);
extern int (*CNWSCreature__GetAttemptedAttackTarget)(CNWSCreature *);
extern int (*CNWSCreature__GetAttemptedSpellTarget)(CNWSCreature *);
extern int (*CNWSCreature__GetAutoMapAreaList)(CNWSCreature *);
extern int (*CNWSCreature__GetAutoMapTileData)(CNWSCreature *);
extern int (*CNWSCreature__GetBarterInfo)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__GetBlind)(CNWSCreature *);
extern int (*CNWSCreature__GetBlindsightDistance)(CNWSCreature *);
extern int (*CNWSCreature__GetBodyBag)(CNWSCreature *);
extern int (*CNWSCreature__GetBodyBagAppearance)(CNWSCreature *);
extern int (*CNWSCreature__GetBodyBagId)(CNWSCreature *);
extern int (*CNWSCreature__GetBroadcastedAOOTo)(CNWSCreature *);
extern int (*CNWSCreature__GetCalculateNPCWeight)(CNWSCreature *);
extern int (*CNWSCreature__GetCanSlayAlignment)(CNWSCreature *, CNWSObject *, CNWItemProperty *);
extern int (*CNWSCreature__GetCombatMode)(CNWSCreature *);
extern int (*CNWSCreature__GetCombatRound)(CNWSCreature *);
extern int (*CNWSCreature__GetCombatState)(CNWSCreature *);
extern int (*CNWSCreature__GetCombatStateTimer)(CNWSCreature *);
extern int (*CNWSCreature__GetCounterSpellTarget)(CNWSCreature *);
extern int (*CNWSCreature__GetCreatureReputation)(CNWSCreature *, uint32_t, int32_t, int32_t);
extern int (*CNWSCreature__GetCreatureSize)(CNWSCreature *);
extern int (*CNWSCreature__GetCreatureState)(CNWSCreature *);
extern int (*CNWSCreature__GetCurrentItemContainer)(CNWSCreature *);
extern int (*CNWSCreature__GetCutsceneCameraMode)(CNWSCreature *);
extern int (*CNWSCreature__GetCutsceneCameraMovementRateFactor)(CNWSCreature *);
extern int (*CNWSCreature__GetCutsceneGhost)(CNWSCreature *);
extern int (*CNWSCreature__GetDMCharacter)(CNWSCreature *);
extern int (*CNWSCreature__GetDamageFlags)(CNWSCreature *);
extern int (*CNWSCreature__GetDecayTime)(CNWSCreature *);
extern int (*CNWSCreature__GetDefensiveCastingMode)(CNWSCreature *);
extern int (*CNWSCreature__GetDesiredAreaId)(CNWSCreature *);
extern int (*CNWSCreature__GetDesiredAreaLocation)(CNWSCreature *);
extern int (*CNWSCreature__GetDesiredAreaUpdateComplete)(CNWSCreature *);
extern int (*CNWSCreature__GetDesiredCombatMode)(CNWSCreature *);
extern int (*CNWSCreature__GetDetectMode)(CNWSCreature *);
extern int (*CNWSCreature__GetDialogInterruptable)(CNWSCreature *);
extern int (*CNWSCreature__GetDialogResref)(CNWSCreature *);
extern int (*CNWSCreature__GetDisarmable)(CNWSCreature *);
extern int (*CNWSCreature__GetDisplayName)(CNWSCreature *);
extern int (*CNWSCreature__GetDominatedCreatureId)(CNWSCreature *);
extern int (*CNWSCreature__GetDriveMode)(CNWSCreature *);
extern int (*CNWSCreature__GetDriveModeMoveFactor)(CNWSCreature *);
extern int (*CNWSCreature__GetDropItemAnimationPlayed)(CNWSCreature *);
extern int (*CNWSCreature__GetEffectIcons)(CNWSCreature *);
extern int (*CNWSCreature__GetEffectSpellId)(CNWSCreature *);
extern int (*CNWSCreature__GetEncounterId)(CNWSCreature *);
extern int (*CNWSCreature__GetEncumbranceState)(CNWSCreature *);
extern int (*CNWSCreature__GetEquipArrayIndex)(CNWSCreature *);
extern int (*CNWSCreature__GetEquippedWeight)(CNWSCreature *);
extern int (*CNWSCreature__GetExternalCombatModeEnabled)(CNWSCreature *);
extern int (*CNWSCreature__GetFacingAndAnimationDone)(CNWSCreature *);
extern int (*CNWSCreature__GetFaction)(CNWSCreature *);
extern int (*CNWSCreature__GetFactionId)(CNWSCreature *);
extern int (*CNWSCreature__GetFamiliarCreatureType)(CNWSCreature *);
extern int (*CNWSCreature__GetFamiliarId)(CNWSCreature *);
extern int (*CNWSCreature__GetFamiliarName)(CNWSCreature *);
extern int (*CNWSCreature__GetFilteredEffectList)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__GetFirstName)(CNWSCreature *);
extern int (*CNWSCreature__GetFlanked)(CNWSCreature *, CNWSCreature *);
extern int (*CNWSCreature__GetFlatFooted)(CNWSCreature *);
extern int (*CNWSCreature__GetFootstepType)(CNWSCreature *);
extern int (*CNWSCreature__GetForcedWalk)(CNWSCreature *);
extern int (*CNWSCreature__GetFreeWill)(CNWSCreature *);
extern int (*CNWSCreature__GetGender)(CNWSCreature *);
extern int (*CNWSCreature__GetGoingToBeAttackedBy)(CNWSCreature *);
extern int (*CNWSCreature__GetGold)(CNWSCreature *);
extern int (*CNWSCreature__GetHasArms)(CNWSCreature *);
extern int (*CNWSCreature__GetHasInvisbilityEffectApplied)(CNWSCreature *);
extern int (*CNWSCreature__GetHasLegs)(CNWSCreature *);
extern int (*CNWSCreature__GetHasted)(CNWSCreature *);
extern int (*CNWSCreature__GetHealAnimationPlayed)(CNWSCreature *);
extern int (*CNWSCreature__GetHenchmanId)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__GetHenchmanIndex)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__GetInSubAreasArray)(CNWSCreature *);
extern int (*CNWSCreature__GetInTransit)(CNWSCreature *);
extern int (*CNWSCreature__GetInitiativeExpired)(CNWSCreature *);
extern int (*CNWSCreature__GetInitiativeRoll)(CNWSCreature *);
extern int (*CNWSCreature__GetInventory)(CNWSCreature *);
extern int (*CNWSCreature__GetInvisible)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__GetInvitedToParty)(CNWSCreature *);
extern int (*CNWSCreature__GetInvitedToPartyBy)(CNWSCreature *);
extern int (*CNWSCreature__GetIsAbleToPossessFamiliar)(CNWSCreature *);
extern int (*CNWSCreature__GetIsCreatureBumpable)(CNWSCreature *, CNWSCreature *);
extern int (*CNWSCreature__GetIsDiseased)(CNWSCreature *);
extern int (*CNWSCreature__GetIsExcited)(CNWSCreature *);
extern int (*CNWSCreature__GetIsImmortal)(CNWSCreature *);
extern int (*CNWSCreature__GetIsInInvitationsIgnored)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__GetIsInInvitationsOffered)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__GetIsInMelee)(CNWSCreature *);
extern int (*CNWSCreature__GetIsInUseRange)(CNWSCreature *, uint32_t, float, int32_t);
extern int (*CNWSCreature__GetIsPoisoned)(CNWSCreature *);
extern int (*CNWSCreature__GetIsPolymorphLocked)(CNWSCreature *);
extern int (*CNWSCreature__GetIsPolymorphed)(CNWSCreature *);
extern int (*CNWSCreature__GetIsPolymorphing)(CNWSCreature *);
extern int (*CNWSCreature__GetIsPossessedFamiliar)(CNWSCreature *);
extern int (*CNWSCreature__GetIsWeaponEffective)(CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSCreature__GetItemCastSpellBroadcastAOO)(CNWSCreature *);
extern int (*CNWSCreature__GetItemContainerArrayIndex)(CNWSCreature *);
extern int (*CNWSCreature__GetItemCount)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__GetItemRepository)(CNWSCreature *);
extern int (*CNWSCreature__GetJournal)(CNWSCreature *);
extern int (*CNWSCreature__GetJumpedRecently)(CNWSCreature *);
extern int (*CNWSCreature__GetLastAmmunitionWarning)(CNWSCreature *);
extern int (*CNWSCreature__GetLastAssociateCommand)(CNWSCreature *);
extern int (*CNWSCreature__GetLastBlockingDoor)(CNWSCreature *);
extern int (*CNWSCreature__GetLastCounterDomainLevel)(CNWSCreature *);
extern int (*CNWSCreature__GetLastCounterMetaType)(CNWSCreature *);
extern int (*CNWSCreature__GetLastCounterSpellClass)(CNWSCreature *);
extern int (*CNWSCreature__GetLastCounterSpellID)(CNWSCreature *);
extern int (*CNWSCreature__GetLastHideRoll)(CNWSCreature *);
extern int (*CNWSCreature__GetLastItemCastSpell)(CNWSCreature *);
extern int (*CNWSCreature__GetLastItemCastSpellLevel)(CNWSCreature *);
extern int (*CNWSCreature__GetLastListenRoll)(CNWSCreature *);
extern int (*CNWSCreature__GetLastMoveSilentlyRoll)(CNWSCreature *);
extern int (*CNWSCreature__GetLastName)(CNWSCreature *);
extern int (*CNWSCreature__GetLastPerceived)(CNWSCreature *);
extern int (*CNWSCreature__GetLastPerceptionHeard)(CNWSCreature *);
extern int (*CNWSCreature__GetLastPerceptionInaudible)(CNWSCreature *);
extern int (*CNWSCreature__GetLastPerceptionSeen)(CNWSCreature *);
extern int (*CNWSCreature__GetLastPerceptionVanished)(CNWSCreature *);
extern int (*CNWSCreature__GetLastPickupFailed)(CNWSCreature *);
extern int (*CNWSCreature__GetLastSpellCastItem)(CNWSCreature *);
extern int (*CNWSCreature__GetLastSpellProjectileTime)(CNWSCreature *);
extern int (*CNWSCreature__GetLastSpellUnReadied)(CNWSCreature *);
extern int (*CNWSCreature__GetLastSpotRoll)(CNWSCreature *);
extern int (*CNWSCreature__GetLastTrapDetected)(CNWSCreature *);
extern int (*CNWSCreature__GetListenCheckDistance)(CNWSCreature *);
extern int (*CNWSCreature__GetLockAnimationPlayed)(CNWSCreature *);
extern int (*CNWSCreature__GetLockOrientationToObject)(CNWSCreature *);
extern int (*CNWSCreature__GetLootable)(CNWSCreature *);
extern int (*CNWSCreature__GetMagicalArrowsEquipped)(CNWSCreature *);
extern int (*CNWSCreature__GetMagicalBoltsEquipped)(CNWSCreature *);
extern int (*CNWSCreature__GetMagicalBulletsEquipped)(CNWSCreature *);
extern int (*CNWSCreature__GetMasterId)(CNWSCreature *);
extern int (*CNWSCreature__GetMaxHitPoints)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__GetMode)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__GetModelType)(CNWSCreature *);
extern int (*CNWSCreature__GetMovementRateFactor)(CNWSCreature *);
extern int (*CNWSCreature__GetNearestEnemy)(CNWSCreature *, float, uint32_t, int32_t, int32_t);
extern int (*CNWSCreature__GetNoPermDeath)(CNWSCreature *);
extern int (*CNWSCreature__GetNonPolymorphCONBase)(CNWSCreature *);
extern int (*CNWSCreature__GetNonPolymorphDEXBase)(CNWSCreature *);
extern int (*CNWSCreature__GetNonPolymorphSTRBase)(CNWSCreature *);
extern int (*CNWSCreature__GetNumAreas)(CNWSCreature *);
extern int (*CNWSCreature__GetNumAssociatesOfType)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__GetNumCharSheetViewers)(CNWSCreature *);
extern int (*CNWSCreature__GetNumCounterSpellingCreatures)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__GetNumInvited)(CNWSCreature *);
extern int (*CNWSCreature__GetOnCreationScriptExecuted)(CNWSCreature *);
extern int (*CNWSCreature__GetOriginalFactionId)(CNWSCreature *);
extern int (*CNWSCreature__GetPVPList)(CNWSCreature *);
extern int (*CNWSCreature__GetPVPPlayerLikesMe)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__GetPVPReputation)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__GetPassiveAttackBehaviour)(CNWSCreature *);
extern int (*CNWSCreature__GetPathfindInformation)(CNWSCreature *);
extern int (*CNWSCreature__GetPendingRealization)(CNWSCreature *);
extern int (*CNWSCreature__GetPersonalReputationList)(CNWSCreature *);
extern int (*CNWSCreature__GetPickUpItemAnimationPlayed)(CNWSCreature *);
extern int (*CNWSCreature__GetPlayerCharacter)(CNWSCreature *);
extern int (*CNWSCreature__GetPolymorphSpellId1)(CNWSCreature *);
extern int (*CNWSCreature__GetPolymorphSpellId2)(CNWSCreature *);
extern int (*CNWSCreature__GetPolymorphSpellId3)(CNWSCreature *);
extern int (*CNWSCreature__GetPonyRide)(CNWSCreature *);
extern int (*CNWSCreature__GetPortrait)(CNWSCreature *);
extern int (*CNWSCreature__GetPreDominationFactionId)(CNWSCreature *);
extern int (*CNWSCreature__GetPrePolymorphCON)(CNWSCreature *);
extern int (*CNWSCreature__GetPrePolymorphDEX)(CNWSCreature *);
extern int (*CNWSCreature__GetPrePolymorphSTR)(CNWSCreature *);
extern int (*CNWSCreature__GetPreferredAttackDistance)(CNWSCreature *);
extern int (*CNWSCreature__GetQuickbarButton)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__GetQuickbarInitialized)(CNWSCreature *);
extern int (*CNWSCreature__GetRangeWeaponEquipped)(CNWSCreature *);
extern int (*CNWSCreature__GetRelativeWeaponSize)(CNWSCreature *, CNWSItem *);
extern int (*CNWSCreature__GetRepositoryArrayIndex)(CNWSCreature *);
extern int (*CNWSCreature__GetReputationList)(CNWSCreature *);
extern int (*CNWSCreature__GetRunRate)(CNWSCreature *);
extern int (*CNWSCreature__GetScriptName)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__GetSilent)(CNWSCreature *);
extern int (*CNWSCreature__GetSittingObject)(CNWSCreature *);
extern int (*CNWSCreature__GetSlowed)(CNWSCreature *);
extern int (*CNWSCreature__GetSoundSet)(CNWSCreature *);
extern int (*CNWSCreature__GetSpellIdentifiedList)(CNWSCreature *);
extern int (*CNWSCreature__GetSpellOrHealActionQueued)(CNWSCreature *);
extern int (*CNWSCreature__GetSpellTarget)(CNWSCreature *);
extern int (*CNWSCreature__GetSpotCheckDistance)(CNWSCreature *);
extern int (*CNWSCreature__GetStandardFactionReputation)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__GetStats)(CNWSCreature *);
extern int (*CNWSCreature__GetStealAnimationPlayed)(CNWSCreature *);
extern int (*CNWSCreature__GetStealAttemptDetected)(CNWSCreature *);
extern int (*CNWSCreature__GetStealthMode)(CNWSCreature *);
extern int (*CNWSCreature__GetSummonedAnimalCompanion)(CNWSCreature *);
extern int (*CNWSCreature__GetSummonedCreatureId)(CNWSCreature *);
extern int (*CNWSCreature__GetSummonedFamiliar)(CNWSCreature *);
extern int (*CNWSCreature__GetTaunt)(CNWSCreature *);
extern int (*CNWSCreature__GetTauntAnimationPlayed)(CNWSCreature *);
extern int (*CNWSCreature__GetTileExplored)(CNWSCreature *, uint32_t, int32_t, int32_t);
extern int (*CNWSCreature__GetTotalEffectBonus)(CNWSCreature *, uint8_t, CNWSObject *, int32_t, int32_t, uint8_t, uint8_t, uint8_t, uint8_t, int32_t);
extern int (*CNWSCreature__GetTotalWeightCarried)(CNWSCreature *);
extern int (*CNWSCreature__GetTrapAnimationPlayed)(CNWSCreature *);
extern int (*CNWSCreature__GetTurnResistanceHD)(CNWSCreature *);
extern int (*CNWSCreature__GetUnarmed)(CNWSCreature *);
extern int (*CNWSCreature__GetUnlockAnimationPlayed)(CNWSCreature *);
extern int (*CNWSCreature__GetUpdateCombatInformation)(CNWSCreature *);
extern int (*CNWSCreature__GetUpdateDisplayName)(CNWSCreature *);
extern int (*CNWSCreature__GetUseMonkAbilities)(CNWSCreature *);
extern int (*CNWSCreature__GetUseRange)(CNWSCreature *, uint32_t, Vector *, float *);
extern int (*CNWSCreature__GetVisibilityList)(CNWSCreature *);
extern int (*CNWSCreature__GetVisibleListElement)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__GetVisionType)(CNWSCreature *);
extern int (*CNWSCreature__GetWalkAnimation)(CNWSCreature *);
extern int (*CNWSCreature__GetWalkRate)(CNWSCreature *);
extern int (*CNWSCreature__GetWeaponPower)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__GetWeaponScale)(CNWSCreature *);
extern int (*CNWSCreature__HandleSubAreaStateChanges)(CNWSCreature *, CExoArrayList_uint32 *, CExoArrayList_uint32 *, int32_t);
extern int (*CNWSCreature__InitialisePVPList)(CNWSCreature *);
extern int (*CNWSCreature__InitializeQuickbar)(CNWSCreature *);
extern int (*CNWSCreature__IsAIState)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__IsHelpless)(CNWSCreature *);
extern int (*CNWSCreature__LearnScroll)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__LoadAssociateList)(CNWSCreature *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__LoadAutoMapData)(CNWSCreature *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__LoadCreature)(CNWSCreature *, CResGFF *, CResStruct *, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSCreature__LoadFromTemplate)(CNWSCreature *, CResRef, CExoString *);
extern int (*CNWSCreature__LoadPersonalReputationList)(CNWSCreature *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__LoadPolymorphData)(CNWSCreature *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSCreature__LoadQuickBarHack)(CNWSCreature *, CExoString);
extern int (*CNWSCreature__LoadQuickButtons)(CNWSCreature *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__MaxAttackRange)(CNWSCreature *, uint32_t, int32_t, int32_t);
extern int (*CNWSCreature__MergeItem)(CNWSCreature *, CNWSItem *, CNWSItem *);
extern int (*CNWSCreature__NotifyAssociateActionToggle)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__PacifyCreature_1)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__PacifyCreature_2)(CNWSCreature *);
extern int (*CNWSCreature__PayToIdentifyItem)(CNWSCreature *, uint32_t, uint32_t);
extern int (*CNWSCreature__Polymorph)(CNWSCreature *, int32_t, CGameEffect *, int32_t);
extern int (*CNWSCreature__PossessCreature)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__PossessCreatureDM)(CNWSCreature *, uint32_t, uint8_t);
extern int (*CNWSCreature__PossessFamiliar)(CNWSCreature *);
extern int (*CNWSCreature__PostProcess)(CNWSCreature *);
extern int (*CNWSCreature__ProcessMasterDeathForAssociates)(CNWSCreature *);
extern int (*CNWSCreature__ProcessPendingCombatActions)(CNWSCreature *);
extern int (*CNWSCreature__QuickbarButton_RemoveItem)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__QuickbarButton_RemoveSpell)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__ReadItemsFromGff)(CNWSCreature *, CResGFF *, CResStruct *, int32_t, int32_t);
extern int (*CNWSCreature__ReadScriptsFromGff)(CNWSCreature *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__RealizeAssociateList)(CNWSCreature *);
extern int (*CNWSCreature__ReceiveAssociateCommand)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__RecomputeAmbientAnimationState)(CNWSCreature *);
extern int (*CNWSCreature__RelayQuickChatCommandToAssociates)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__RemoveAllAssociates)(CNWSCreature *);
extern int (*CNWSCreature__RemoveAreaOfEffect)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__RemoveAssociate)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__RemoveBadEffects)(CNWSCreature *);
extern int (*CNWSCreature__RemoveCharmEffectsByFactionID)(CNWSCreature *, int32_t, int32_t);
extern int (*CNWSCreature__RemoveCharmEffectsByOBJECTID)(CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSCreature__RemoveCombatInvisibilityEffects)(CNWSCreature *);
extern int (*CNWSCreature__RemoveDomination)(CNWSCreature *);
extern int (*CNWSCreature__RemoveDominationEffect)(CNWSCreature *);
extern int (*CNWSCreature__RemoveFromArea)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__RemoveFromAssociateList)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__RemoveFromInvitationsOffered)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__RemoveFromPVPList)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__RemoveFromVisibleList)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__RemoveGold)(CNWSCreature *, int32_t, int32_t);
extern int (*CNWSCreature__RemoveItem)(CNWSCreature *, CNWSItem *, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSCreature__RemoveItemFromRepository)(CNWSCreature *, CNWSItem *, int32_t);
extern int (*CNWSCreature__RemoveSleepEffects)(CNWSCreature *);
extern int (*CNWSCreature__RemoveSpellActionFromRound)(CNWSCreature *);
extern int (*CNWSCreature__RemoveWoundingEffects)(CNWSCreature *);
extern int (*CNWSCreature__ReplyToInvitation)(CNWSCreature *, int32_t, uint32_t);
extern int (*CNWSCreature__ReprocessAssociateList)(CNWSCreature *);
extern int (*CNWSCreature__RequestBuy)(CNWSCreature *, uint32_t, uint32_t, uint32_t);
extern int (*CNWSCreature__RequestSell)(CNWSCreature *, uint32_t, uint32_t);
extern int (*CNWSCreature__ResetItemPossessor)(CNWSCreature *);
extern int (*CNWSCreature__ResetPCDominatedScripts)(CNWSCreature *);
extern int (*CNWSCreature__ResetUpdateTimes)(CNWSCreature *, uint32_t, uint32_t);
extern int (*CNWSCreature__ResolveAmmunition)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__ResolveAttack)(CNWSCreature *, uint32_t, int32_t, int32_t);
extern int (*CNWSCreature__ResolveAttackRoll)(CNWSCreature *, CNWSObject *);
extern int (*CNWSCreature__ResolveCachedSpecialAttacks)(CNWSCreature *);
extern int (*CNWSCreature__ResolveDamage)(CNWSCreature *, CNWSObject *);
extern int (*CNWSCreature__ResolveDamageShields)(CNWSCreature *, CNWSCreature *);
extern int (*CNWSCreature__ResolveDeathAttack)(CNWSCreature *, CNWSCreature *);
extern int (*CNWSCreature__ResolveDefensiveEffects)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ResolveElementalDamage)(CNWSCreature *, CNWSObject *);
extern int (*CNWSCreature__ResolveInitiative)(CNWSCreature *);
extern int (*CNWSCreature__ResolveItemCastSpell)(CNWSCreature *, CNWSObject *);
extern int (*CNWSCreature__ResolveMeleeAnimations)(CNWSCreature *, int32_t, int32_t, CNWSObject *, int32_t);
extern int (*CNWSCreature__ResolveMeleeAttack)(CNWSCreature *, CNWSObject *, int32_t, int32_t);
extern int (*CNWSCreature__ResolveMeleeSpecialAttack)(CNWSCreature *, int32_t, int32_t, CNWSObject *, int32_t);
extern int (*CNWSCreature__ResolveOnHitEffect)(CNWSCreature *, CNWSObject *, int32_t, int32_t);
extern int (*CNWSCreature__ResolveOnHitVisuals)(CNWSCreature *, CNWSObject *);
extern int (*CNWSCreature__ResolvePostMeleeDamage)(CNWSCreature *, CNWSObject *);
extern int (*CNWSCreature__ResolvePostRangedDamage)(CNWSCreature *, CNWSObject *);
extern int (*CNWSCreature__ResolveRangedAnimations)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ResolveRangedAttack)(CNWSCreature *, CNWSObject *, int32_t, int32_t);
extern int (*CNWSCreature__ResolveRangedMiss)(CNWSCreature *, CNWSObject *);
extern int (*CNWSCreature__ResolveRangedSpecialAttack)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__ResolveSafeProjectile)(CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSCreature__ResolveSituationalModifiers)(CNWSCreature *, CNWSObject *);
extern int (*CNWSCreature__ResolveSneakAttack)(CNWSCreature *, CNWSCreature *);
extern int (*CNWSCreature__Rest)(CNWSCreature *, int32_t, int32_t);
extern int (*CNWSCreature__RestoreCutsceneVars)(CNWSCreature *);
extern int (*CNWSCreature__RestoreItemProperties)(CNWSCreature *);
extern int (*CNWSCreature__RestoreItemPropertiesInRepository)(CNWSCreature *, CItemRepository *);
extern int (*CNWSCreature__RunEquip)(CNWSCreature *, uint32_t, uint32_t, uint32_t);
extern int (*CNWSCreature__RunUnequip)(CNWSCreature *, uint32_t, uint32_t, uint8_t, uint8_t, int32_t, uint32_t);
extern int (*CNWSCreature__SaveAssociateList)(CNWSCreature *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__SaveAutoMapData)(CNWSCreature *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__SaveCreature)(CNWSCreature *, CResGFF *, CResStruct *, int32_t, int32_t, int32_t);
extern int (*CNWSCreature__SavePersonalReputationList)(CNWSCreature *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__SaveQuickBarHack)(CNWSCreature *, CExoString);
extern int (*CNWSCreature__SaveQuickButtons)(CNWSCreature *, CResGFF *, CResStruct *);
extern int (*CNWSCreature__SavingThrowRoll)(CNWSCreature *, uint8_t, uint16_t, uint8_t, uint32_t, int32_t, uint16_t, int32_t);
extern int (*CNWSCreature__SawTrapInformAssociates)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SendFeedbackMessage)(CNWSCreature *, uint16_t, CNWCCMessageData *, CNWSPlayer *);
extern int (*CNWSCreature__SendFeedbackString)(CNWSCreature *, CExoString, CNWSPlayer *);
extern int (*CNWSCreature__SetAIState)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__SetAIStateFlag)(CNWSCreature *, uint16_t, int32_t);
extern int (*CNWSCreature__SetActivity)(CNWSCreature *, int32_t, int32_t);
extern int (*CNWSCreature__SetActivityLocked)(CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSCreature__SetAlive)(CNWSCreature *);
extern int (*CNWSCreature__SetAllTilesExplored)(CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSCreature__SetAlreadyRemovedFromEncounter)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetAmbientAnimationState)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetAnimalCompanionCreatureType)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetAnimalCompanionName)(CNWSCreature *, CExoString);
extern int (*CNWSCreature__SetAnimation)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetAssociateListenPatterns)(CNWSCreature *);
extern int (*CNWSCreature__SetAssociateType)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__SetAssociatesToForgetAggression)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetAttackTarget)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetAttemptedAttackTarget)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetAttemptedSpellTarget)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetAutoMapData)(CNWSCreature *, int32_t, uint32_t *, unsigned char **);
extern int (*CNWSCreature__SetBlindsightDistance)(CNWSCreature *, float);
extern int (*CNWSCreature__SetBodyBag)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetBodyBagId)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetBroadcastedAOOTo)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetCalculateNPCWeight)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetCombatMode)(CNWSCreature *, uint8_t, int32_t);
extern int (*CNWSCreature__SetCombatState)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetCounterSpellTarget)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetCreatureSize)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetCreatureState)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetCurrentItemContainer)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetCutsceneCameraMode)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetCutsceneCameraMovementRateFactor)(CNWSCreature *, float);
extern int (*CNWSCreature__SetCutsceneGhost)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetDMCharacter)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetDead)(CNWSCreature *);
extern int (*CNWSCreature__SetDecayTime)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetDefensiveCastingMode)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetDesiredAreaId)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetDesiredAreaLocation)(CNWSCreature *, Vector);
extern int (*CNWSCreature__SetDesiredAreaUpdateComplete)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetDesiredCombatMode)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetDetectMode)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetDisarmable)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetDisplayName)(CNWSCreature *, CExoString);
extern int (*CNWSCreature__SetDriveMode)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetDriveModeMoveFactor)(CNWSCreature *, float);
extern int (*CNWSCreature__SetDropItemAnimationPlayed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetEffectSpellId)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetEncounterId)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetEncumbranceState)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetEquipArrayIndex)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__SetEquippedWeight)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetExcitedState)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetExternalCombatModeEnabled)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetFacingAndAnimationDone)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetFactionId)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetFamiliarCreatureType)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetFamiliarName)(CNWSCreature *, CExoString);
extern int (*CNWSCreature__SetFootstepType)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetForcedWalk)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetGoingToBeAttackedBy)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetGold)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetHasArms)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetHasLegs)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetHasted)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetHealAnimationPlayed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetId)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetInTransit)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetInitiativeExpired)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetInitiativeRoll)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetInvitedToParty)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetInvitedToPartyBy)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetIsDiseased)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetIsImmortal)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetIsPoisoned)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetIsPolymorphed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetItemCastSpellBroadcastAOO)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetItemContainerArrayIndex)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__SetJumpedRecently)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastAmmunitionWarning)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastAssociateCommand)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastBlockingDoor)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetLastCounterDomainLevel)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetLastCounterMetaType)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetLastCounterSpellClass)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetLastCounterSpellID)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastHearbeatTime)(CNWSCreature *, uint32_t, uint32_t);
extern int (*CNWSCreature__SetLastHideRoll)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetLastItemCastSpell)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastItemCastSpellLevel)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastListenRoll)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetLastMoveSilentlyRoll)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetLastPerceived)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetLastPerceptionHeard)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastPerceptionInaudible)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastPerceptionSeen)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastPerceptionVanished)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastPickupFailed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastSpellCastItem)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetLastSpellUnReadied)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLastSpotRoll)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetLastTrapDetected)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetListenCheckDistance)(CNWSCreature *, float);
extern int (*CNWSCreature__SetLockAnimationPlayed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetLockOrientationToObject)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetLootable)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetMagicalArrowsEquipped)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetMagicalBoltsEquipped)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetMagicalBulletsEquipped)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetMasterId)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetMaxListenCheckDistance)(CNWSCreature *, float);
extern int (*CNWSCreature__SetMaxSpotCheckDistance)(CNWSCreature *, float);
extern int (*CNWSCreature__SetMode)(CNWSCreature *, uint8_t, int32_t);
extern int (*CNWSCreature__SetModelType)(CNWSCreature *, CExoString);
extern int (*CNWSCreature__SetMovementRateFactor)(CNWSCreature *, float);
extern int (*CNWSCreature__SetNoPermDeath)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetNumAreas)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetNumCharSheetViewers)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetOnCreationScriptExecuted)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetOriginalFactionId)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPCDominatedScripts)(CNWSCreature *);
extern int (*CNWSCreature__SetPVPPlayerLikesMe)(CNWSCreature *, uint32_t, int32_t, int32_t);
extern int (*CNWSCreature__SetPassiveAttackBehaviour)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPendingRealization)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPersonalReputation)(CNWSCreature *, CExoArrayList_ptr *);
extern int (*CNWSCreature__SetPickUpItemAnimationPlayed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPlayerCharacter)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPolymorphLocked)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPonyRide)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPortrait)(CNWSCreature *, CResRef);
extern int (*CNWSCreature__SetPortraitId)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__SetPreDominationFactionId)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPrePolymorphCON)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPrePolymorphDEX)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPrePolymorphSTR)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetPreferredAttackDistance)(CNWSCreature *, float);
extern int (*CNWSCreature__SetQuickbarButton_AssociateCommand)(CNWSCreature *, uint8_t, int32_t, uint16_t, uint32_t);
extern int (*CNWSCreature__SetQuickbarButton_CommandLine)(CNWSCreature *, uint8_t, CExoString const *, CExoString const *);
extern int (*CNWSCreature__SetQuickbarButton_DM_General_ResRefParam)(CNWSCreature *, uint8_t, uint8_t, CResRef const *);
extern int (*CNWSCreature__SetQuickbarButton_DungeonMaster_CreateCreature)(CNWSCreature *, uint8_t, CResRef const *, CExoString const *);
extern int (*CNWSCreature__SetQuickbarButton_DungeonMaster_CreateEncounter)(CNWSCreature *, uint8_t, CResRef const *, CExoString const *);
extern int (*CNWSCreature__SetQuickbarButton_DungeonMaster_CreateItem)(CNWSCreature *, uint8_t, CResRef const *, CExoString const *);
extern int (*CNWSCreature__SetQuickbarButton_DungeonMaster_CreatePlaceable)(CNWSCreature *, uint8_t, CResRef const *, CExoString const *);
extern int (*CNWSCreature__SetQuickbarButton_DungeonMaster_CreatePortal)(CNWSCreature *, uint8_t, CResRef const *, CExoString const *);
extern int (*CNWSCreature__SetQuickbarButton_DungeonMaster_CreateTrigger)(CNWSCreature *, uint8_t, CResRef const *, CExoString const *);
extern int (*CNWSCreature__SetQuickbarButton_DungeonMaster_CreateWaypoint)(CNWSCreature *, uint8_t, CResRef const *, CExoString const *);
extern int (*CNWSCreature__SetQuickbarButton_GeneralINTParam)(CNWSCreature *, uint8_t, uint8_t, int32_t);
extern int (*CNWSCreature__SetQuickbarButton_GeneralNoParam)(CNWSCreature *, uint8_t, uint8_t);
extern int (*CNWSCreature__SetQuickbarButton_Item)(CNWSCreature *, uint8_t, uint32_t, int32_t, uint32_t);
extern int (*CNWSCreature__SetQuickbarButton_Spell)(CNWSCreature *, uint8_t, uint8_t, uint32_t, uint8_t, uint8_t);
extern int (*CNWSCreature__SetQuickbarButton_SpellLikeAbility)(CNWSCreature *, uint8_t, uint32_t, uint8_t);
extern int (*CNWSCreature__SetRepositoryArrayIndex)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__SetReputation)(CNWSCreature *, CExoArrayList_int32 *);
extern int (*CNWSCreature__SetScriptName)(CNWSCreature *, int32_t, CExoString);
extern int (*CNWSCreature__SetSilent)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetSittingObject)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetSlowed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetSoundSet)(CNWSCreature *, uint16_t);
extern int (*CNWSCreature__SetSpellTarget)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__SetSpotCheckDistance)(CNWSCreature *, float);
extern int (*CNWSCreature__SetStandardFactionReputation)(CNWSCreature *, int32_t, int32_t);
extern int (*CNWSCreature__SetStealAnimationPlayed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetStealAttemptDetected)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetStealthMode)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetSummonedAnimalCompanion)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetSummonedFamiliar)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetTaunt)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetTauntAnimationPlayed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetTileExplored)(CNWSCreature *, uint32_t, int32_t, int32_t);
extern int (*CNWSCreature__SetTrapAnimationPlayed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetUnlockAnimationPlayed)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetUpdateCombatInformation)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetUpdateDisplayName)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SetVisionType)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetWalkAnimation)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__SetWeaponScale)(CNWSCreature *, float);
extern int (*CNWSCreature__SignalMeleeDamage)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__SignalRangedDamage)(CNWSCreature *, CNWSObject *, int32_t);
extern int (*CNWSCreature__SpawnInHeartbeatPerception)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__SplitItem)(CNWSCreature *, CNWSItem *, int32_t);
extern int (*CNWSCreature__StartBarter)(CNWSCreature *, uint32_t, uint32_t, int32_t);
extern int (*CNWSCreature__StartGuiTimingBar)(CNWSCreature *, uint32_t, uint8_t);
extern int (*CNWSCreature__StopGuiTimingBar)(CNWSCreature *);
extern int (*CNWSCreature__StoreCutsceneVars)(CNWSCreature *);
extern int (*CNWSCreature__SummonAnimalCompanion)(CNWSCreature *);
extern int (*CNWSCreature__SummonAssociate)(CNWSCreature *, CResRef, CExoString, uint16_t);
extern int (*CNWSCreature__SummonFamiliar)(CNWSCreature *);
extern int (*CNWSCreature__TerminateClientSidePath)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__TestAIStateAsMode)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__ToggleMode)(CNWSCreature *, uint8_t);
extern int (*CNWSCreature__TransferGold)(CNWSCreature *, uint32_t, Vector, uint32_t, int32_t, uint8_t, uint8_t);
extern int (*CNWSCreature__TranslateAddress)(CNWSCreature *, uint32_t, int32_t, int32_t, int32_t *, int32_t *);
extern int (*CNWSCreature__UnPolymorph)(CNWSCreature *, CGameEffect *);
extern int (*CNWSCreature__UnequipItem)(CNWSCreature *, CNWSItem *, int32_t);
extern int (*CNWSCreature__UnpossessCreature)(CNWSCreature *);
extern int (*CNWSCreature__UnpossessCreatureDM)(CNWSCreature *);
extern int (*CNWSCreature__UnpossessFamiliar)(CNWSCreature *);
extern int (*CNWSCreature__UnsummonMyself)(CNWSCreature *);
extern int (*CNWSCreature__UpdateActionQueue)(CNWSCreature *);
extern int (*CNWSCreature__UpdateAppearanceDependantInfo)(CNWSCreature *);
extern int (*CNWSCreature__UpdateAppearanceForEquippedItems)(CNWSCreature *);
extern int (*CNWSCreature__UpdateAttributesOnEffect)(CNWSCreature *, CGameEffect *, int32_t);
extern int (*CNWSCreature__UpdateAutoMap)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__UpdateCombatRoundTimer)(CNWSCreature *);
extern int (*CNWSCreature__UpdateEffectPtrs)(CNWSCreature *);
extern int (*CNWSCreature__UpdateEncumbranceState)(CNWSCreature *, int32_t);
extern int (*CNWSCreature__UpdateExcitedStateTimer)(CNWSCreature *);
extern int (*CNWSCreature__UpdatePersonalSpace)(CNWSCreature *);
extern int (*CNWSCreature__UpdateSpecialAttacks)(CNWSCreature *);
extern int (*CNWSCreature__UpdateSubareasOnJumpPosition)(CNWSCreature *, Vector, uint32_t);
extern int (*CNWSCreature__UpdateSubareasOnMoveTo)(CNWSCreature *, Vector, Vector, int32_t, CExoArrayList_uint32 *, int32_t);
extern int (*CNWSCreature__UpdateTrapCheck)(CNWSCreature *);
extern int (*CNWSCreature__UpdateTrapCheckDM)(CNWSCreature *);
extern int (*CNWSCreature__UpdateVisibleList)(CNWSCreature *);
extern int (*CNWSCreature__UseFeat)(CNWSCreature *, uint16_t, uint16_t, uint32_t, uint32_t, Vector *);
extern int (*CNWSCreature__UseItem)(CNWSCreature *, uint32_t, uint8_t, uint8_t, uint32_t, Vector, uint32_t);
extern int (*CNWSCreature__UseLoreOnItem)(CNWSCreature *, uint32_t);
extern int (*CNWSCreature__UseSkill)(CNWSCreature *, uint8_t, uint8_t, uint32_t, Vector, uint32_t, uint32_t, int32_t);
extern int (*CNWSCreature__ValidateCounterSpellData)(CNWSCreature *, uint32_t, uint8_t, uint8_t);
extern int (*CNWSCreature__WalkUpdateLocation)(CNWSCreature *);
extern int (*CNWSCreature__WalkUpdateLocationDistance)(CNWSCreature *, float, Vector *, Vector *, CExoArrayList_uint32 *);
extern int (*CNWSCreature__WalkUpdateLocationTestDistance)(CNWSCreature *, Vector, Vector);
extern int (*CNWSCreatureStats__AddExperience)(CNWSCreatureStats *, uint32_t);
extern int (*CNWSCreatureStats__AddFeat)(CNWSCreatureStats *, uint16_t);
extern int (*CNWSCreatureStats__AddKnownSpell)(CNWSCreatureStats *, uint8_t, uint32_t);
extern int (*CNWSCreatureStats__AddSpellLikeAbilityToList)(CNWSCreatureStats *, uint32_t, int32_t, uint8_t);
extern int (*CNWSCreatureStats__AdjustAlignment)(CNWSCreatureStats *, uint8_t, int16_t, uint32_t);
extern int (*CNWSCreatureStats__AdjustSpellUsesPerDay)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__AutoMemorizeSpells)(CNWSCreatureStats *, int32_t);
extern int (*CNWSCreatureStats__CalcLevelUpNumberFeats)(CNWSCreatureStats *, uint8_t, uint8_t, unsigned char *, unsigned char *);
extern int (*CNWSCreatureStats__CalcStatModifier)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__CanChooseFeat)(CNWSCreatureStats *, uint16_t, uint8_t, uint8_t, CExoArrayList_uint16 *);
extern int (*CNWSCreatureStats__CanLevelUp)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__CheckSpellSuitability)(CNWSCreatureStats *, int32_t, CNWSpell *, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, unsigned char *, int32_t);
extern int (*CNWSCreatureStats__ClearFeats)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__ClearMemorizedSpellSlot)(CNWSCreatureStats *, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__ComputeFeatBonuses)(CNWSCreatureStats *, CExoArrayList_uint16 *, int32_t, int32_t);
extern int (*CNWSCreatureStats__ComputeNumberKnownSpellsLeft)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__ConfirmDomainSpell)(CNWSCreatureStats *, uint8_t, uint8_t, uint32_t);
extern int (*CNWSCreatureStats__DecrementFeatRemainingUses)(CNWSCreatureStats *, uint16_t);
extern int (*CNWSCreatureStats__DecrementSpellsPerDayLeft)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__FeatAcquired)(CNWSCreatureStats *, uint16_t, CExoArrayList_uint16 *, int32_t);
extern int (*CNWSCreatureStats__FeatRequirementsMet)(CNWSCreatureStats *, uint16_t, CExoArrayList_uint16 *);
extern int (*CNWSCreatureStats__FeatRequirementsMetAfterLevelUp)(CNWSCreatureStats *, uint16_t, CNWSStats_Level *, uint8_t);
extern int (*CNWSCreatureStats__GetACNaturalBase)(CNWSCreatureStats *, int32_t);
extern int (*CNWSCreatureStats__GetAlignmentString)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetArmorClassVersus)(CNWSCreatureStats *, CNWSCreature *, int32_t);
extern int (*CNWSCreatureStats__GetAttackModifierVersus)(CNWSCreatureStats *, CNWSCreature *);
extern int (*CNWSCreatureStats__GetAttacksPerRound)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetBaseAttackBonus)(CNWSCreatureStats *, int32_t);
extern int (*CNWSCreatureStats__GetBaseFortSavingThrow)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetBaseReflexSavingThrow)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetBaseWillSavingThrow)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetBonusFeat)(CNWSCreatureStats *, uint16_t);
extern uint8_t (*CNWSCreatureStats__GetCHAStat)(CNWSCreatureStats *);
extern uint8_t (*CNWSCreatureStats__GetCONStat)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetCanUseRelatedCategory)(CNWSCreatureStats *, int32_t, int32_t);
extern int (*CNWSCreatureStats__GetCanUseSkill)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetCanUseSkillAfterLevelUp)(CNWSCreatureStats *, uint16_t, CNWSStats_Level *);
extern int (*CNWSCreatureStats__GetCasterLevel)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetClass)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetClassInfo)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetClassLevel)(CNWSCreatureStats *, uint8_t, int32_t);
extern int (*CNWSCreatureStats__GetClassNegativeLevels)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetClassString)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetCreatureDamageDice)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetCreatureDamageDie)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetCreatureHasTalent)(CNWSCreatureStats *, int32_t, int32_t, uint8_t);
extern int (*CNWSCreatureStats__GetCreatureTalentRandom)(CNWSCreatureStats *, int32_t, int32_t, int32_t *, int32_t *, unsigned char *, uint32_t *, int32_t *, unsigned char *, unsigned char *);
extern int (*CNWSCreatureStats__GetCreatureTalentRandomFeat)(CNWSCreatureStats *, int32_t, int32_t, int32_t *, int32_t *, unsigned char *);
extern int (*CNWSCreatureStats__GetCreatureTalentRandomKnownSpell)(CNWSCreatureStats *, int32_t, int32_t, int32_t *, int32_t *, unsigned char *, int32_t);
extern int (*CNWSCreatureStats__GetCreatureTalentRandomMemorisedSpell)(CNWSCreatureStats *, int32_t, int32_t, int32_t *, int32_t *, unsigned char *, int32_t, unsigned char *);
extern int (*CNWSCreatureStats__GetCreatureTalentRandomSkill)(CNWSCreatureStats *, int32_t, int32_t, int32_t *, int32_t *, unsigned char *);
extern int (*CNWSCreatureStats__GetCreatureTalentRandomSpell)(CNWSCreatureStats *, int32_t, int32_t, int32_t *, int32_t *, unsigned char *, unsigned char *);
extern int (*CNWSCreatureStats__GetCreatureTalentRandomSpellFromItem)(CNWSCreatureStats *, int32_t, int32_t, int32_t *, int32_t *, unsigned char *, uint32_t *, int32_t *);
extern int (*CNWSCreatureStats__GetCreatureTalentRandomSpellLikeAbility)(CNWSCreatureStats *, int32_t, int32_t, int32_t *, int32_t *, unsigned char *, unsigned char *);
extern int (*CNWSCreatureStats__GetCriticalHitMultiplier)(CNWSCreatureStats *, int32_t);
extern int (*CNWSCreatureStats__GetCriticalHitRoll)(CNWSCreatureStats *, int32_t);
extern int8_t (*CNWSCreatureStats__GetDEXMod)(CNWSCreatureStats *, int32_t);
extern uint8_t (*CNWSCreatureStats__GetDEXStat)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetDamageBonus)(CNWSCreatureStats *, CNWSCreature *, int32_t);
extern int (*CNWSCreatureStats__GetDamageRoll)(CNWSCreatureStats *, CNWSObject *, int32_t, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSCreatureStats__GetDomain1)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetDomain2)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetEffectImmunity)(CNWSCreatureStats *, uint8_t, CNWSCreature *);
extern int (*CNWSCreatureStats__GetEffectiveCRForPotentialLevel)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetEpicWeaponDevastatingCritical)(CNWSCreatureStats *, CNWSItem *);
extern int (*CNWSCreatureStats__GetEpicWeaponFocus)(CNWSCreatureStats *, CNWSItem *);
extern int (*CNWSCreatureStats__GetEpicWeaponOverwhelmingCritical)(CNWSCreatureStats *, CNWSItem *);
extern int (*CNWSCreatureStats__GetEpicWeaponSpecialization)(CNWSCreatureStats *, CNWSItem *);
extern int (*CNWSCreatureStats__GetExpNeededForLevelUp)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetFavoredEnemyBonus)(CNWSCreatureStats *, CNWSCreature *);
extern int (*CNWSCreatureStats__GetFeat)(CNWSCreatureStats *, uint16_t);
extern int8_t (*CNWSCreatureStats__GetFeatRemainingUses)(CNWSCreatureStats *, uint16_t);
extern int (*CNWSCreatureStats__GetFeatSourceClass)(CNWSCreatureStats *, uint16_t);
extern int (*CNWSCreatureStats__GetFeatTotalUses)(CNWSCreatureStats *, uint16_t);
extern int (*CNWSCreatureStats__GetFortSavingThrow)(CNWSCreatureStats *, int32_t);
extern int (*CNWSCreatureStats__GetFullName)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetHasLostClassAbilities)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetHasSilencedSpell)(CNWSCreatureStats *, uint32_t);
extern int (*CNWSCreatureStats__GetHasStilledSpell)(CNWSCreatureStats *, uint32_t);
extern int (*CNWSCreatureStats__GetHighestLevelKnown)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetHighestLevelOfFeat)(CNWSCreatureStats *, uint16_t);
extern int (*CNWSCreatureStats__GetHitDie)(CNWSCreatureStats *, uint8_t, uint8_t);
extern uint8_t (*CNWSCreatureStats__GetINTStat)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetIsClass)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetIsClassAvailable)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetIsDomainSpell)(CNWSCreatureStats *, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetIsEpitomeOfAlignment)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetIsInKnownSpellList)(CNWSCreatureStats *, uint8_t, uint32_t);
extern int (*CNWSCreatureStats__GetIsInSpellLikeAbilityList)(CNWSCreatureStats *, uint32_t);
extern int (*CNWSCreatureStats__GetIsWeaponOfChoice)(CNWSCreatureStats *, uint32_t);
extern int (*CNWSCreatureStats__GetKnownSpell)(CNWSCreatureStats *, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetLargePortrait)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetLevel)(CNWSCreatureStats *, int32_t);
extern int (*CNWSCreatureStats__GetLevelStats)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetMeetsPrestigeClassRequirements)(CNWSCreatureStats *, CNWClass *);
extern int (*CNWSCreatureStats__GetMeleeAttackBonus)(CNWSCreatureStats *, int32_t, int32_t, int32_t);
extern int (*CNWSCreatureStats__GetMeleeDamageBonus)(CNWSCreatureStats *, int32_t, uint8_t);
extern int (*CNWSCreatureStats__GetMemorizedSpellInSlot)(CNWSCreatureStats *, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetMemorizedSpellInSlotMetaType)(CNWSCreatureStats *, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetMemorizedSpellInSlotReady)(CNWSCreatureStats *, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetMemorizedSpellReadyCount_1)(CNWSCreatureStats *, uint8_t, uint32_t, unsigned char *, unsigned char *);
extern int (*CNWSCreatureStats__GetMemorizedSpellReadyCount_2)(CNWSCreatureStats *, uint8_t, uint32_t, uint8_t);
extern int (*CNWSCreatureStats__GetMemorizedSpellReadyCount_3)(CNWSCreatureStats *, uint32_t);
extern int (*CNWSCreatureStats__GetNumLevelsOfClass_1)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetNumLevelsOfClass_2)(CNWSCreatureStats *, uint8_t, int32_t);
extern int (*CNWSCreatureStats__GetNumberKnownSpells)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetNumberMemorizedSpellSlots)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetPotentialLevel)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetPrimaryMod)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetRaceString)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetRangedAttackBonus)(CNWSCreatureStats *, int32_t, int32_t);
extern int (*CNWSCreatureStats__GetRangedDamageBonus)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetReflexSavingThrow)(CNWSCreatureStats *, int32_t);
extern uint8_t (*CNWSCreatureStats__GetSTRStat)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetSchool)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetSimpleAlignmentGoodEvil)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetSimpleAlignmentLawChaos)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetSkillRank)(CNWSCreatureStats *, uint8_t, CNWSObject *, int32_t);
extern int (*CNWSCreatureStats__GetSmallPortrait)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetSpellFailure)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__GetSpellGainWithBonus)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetSpellGainWithBonusAfterLevelUp)(CNWSCreatureStats *, uint8_t, uint8_t, CNWSStats_Level *, uint8_t, int32_t);
extern int (*CNWSCreatureStats__GetSpellLikeAbilityCasterLevel)(CNWSCreatureStats *, uint32_t);
extern int (*CNWSCreatureStats__GetSpellMinAbilityMet)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetSpellResistance)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetSpellUsesLeft)(CNWSCreatureStats *, uint32_t, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetSpellsOfLevelReady)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetSpellsPerDayLeft)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__GetStatBonusesFromFeats)(CNWSCreatureStats *, CExoArrayList_uint16 *, int32_t *, uint8_t);
extern int (*CNWSCreatureStats__GetStatById)(CNWSCreatureStats *, int32_t);
extern int (*CNWSCreatureStats__GetTag)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetTotalACSkillMod)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetTotalCHABonus)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetTotalCONBonus)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetTotalDEXBonus)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetTotalINTBonus)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetTotalNegativeLevels)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetTotalSTRBonus)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetTotalWISBonus)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetUnarmedDamageDice)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetUnarmedDamageDie)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetUnarmedDamageRoll)(CNWSCreatureStats *, CNWSObject *);
extern int (*CNWSCreatureStats__GetUseMonkAttackTables)(CNWSCreatureStats *, int32_t);
extern uint8_t (*CNWSCreatureStats__GetWISStat)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__GetWeaponFinesse)(CNWSCreatureStats *, CNWSItem *);
extern int (*CNWSCreatureStats__GetWeaponFocus)(CNWSCreatureStats *, CNWSItem *);
extern int (*CNWSCreatureStats__GetWeaponImprovedCritical)(CNWSCreatureStats *, CNWSItem *);
extern int (*CNWSCreatureStats__GetWeaponSpecialization)(CNWSCreatureStats *, CNWSItem *);
extern int (*CNWSCreatureStats__GetWillSavingThrow)(CNWSCreatureStats *, int32_t);
extern int (*CNWSCreatureStats__HasFeat)(CNWSCreatureStats *, uint16_t);
extern int (*CNWSCreatureStats__IncrementFeatRemainingUses)(CNWSCreatureStats *, uint16_t);
extern int (*CNWSCreatureStats__IncrementSpellsPerDayLeft)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__LevelDown)(CNWSCreatureStats *, CNWSStats_Level *);
extern int (*CNWSCreatureStats__LevelUp)(CNWSCreatureStats *, CNWSStats_Level *, uint8_t, uint8_t, uint8_t, int32_t);
extern int (*CNWSCreatureStats__LevelUpAutomatic)(CNWSCreatureStats *, uint8_t, int32_t, uint8_t);
extern int (*CNWSCreatureStats__ModifyAlignment)(CNWSCreatureStats *, int16_t, int16_t);
extern int (*CNWSCreatureStats__ReadSpellsFromGff)(CNWSCreatureStats *, CResGFF *, CResStruct *);
extern int (*CNWSCreatureStats__ReadStatsFromGff)(CNWSCreatureStats *, CResGFF *, CResStruct *, CNWSCreatureAppearanceInfo *, int32_t, int32_t, int32_t);
extern int (*CNWSCreatureStats__ReadySpellLevel)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__RemoveFeat)(CNWSCreatureStats *, uint16_t);
extern int (*CNWSCreatureStats__RemoveKnownSpell)(CNWSCreatureStats *, uint8_t, uint32_t);
extern int (*CNWSCreatureStats__ResetFeatRemainingUses)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__ResetSpellLikeAbilities)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__ResetSpellsPerDayLeft)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__ResolveSpecialAttackAttackBonus)(CNWSCreatureStats *, CNWSCreature *);
extern int (*CNWSCreatureStats__ResolveSpecialAttackDamageBonus)(CNWSCreatureStats *, CNWSCreature *);
extern int (*CNWSCreatureStats__SaveClassInfo)(CNWSCreatureStats *, CResGFF *, CResStruct *);
extern int (*CNWSCreatureStats__SaveStats)(CNWSCreatureStats *, CResGFF *, CResStruct *);
extern int (*CNWSCreatureStats__SetArcaneSpellFailure)(CNWSCreatureStats *, int8_t);
extern int (*CNWSCreatureStats__SetCHABase)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__SetCONBase)(CNWSCreatureStats *, uint8_t, int32_t);
extern int (*CNWSCreatureStats__SetClass)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__SetClassLevel)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__SetClassNegativeLevels)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__SetDEXBase)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__SetDomain1)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__SetDomain2)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__SetExperience)(CNWSCreatureStats *, uint32_t, int32_t);
extern int (*CNWSCreatureStats__SetFeatRemainingUses)(CNWSCreatureStats *, uint16_t, uint8_t);
extern int (*CNWSCreatureStats__SetHasLostClassAbilities)(CNWSCreatureStats *, uint8_t, int32_t);
extern int (*CNWSCreatureStats__SetINTBase)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__SetMemorizedSpellInSlotReady)(CNWSCreatureStats *, uint8_t, uint8_t, uint8_t, int32_t);
extern int (*CNWSCreatureStats__SetMemorizedSpellSlot)(CNWSCreatureStats *, uint8_t, uint8_t, uint32_t, uint8_t, uint8_t, int32_t);
extern int (*CNWSCreatureStats__SetMovementRate)(CNWSCreatureStats *, int32_t);
extern int (*CNWSCreatureStats__SetNormalBonusFlags)(CNWSCreatureStats *, uint16_t, int32_t *, int32_t *);
extern int (*CNWSCreatureStats__SetNumberBonusSpells)(CNWSCreatureStats *, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__SetNumberMemorizedSpellSlots)(CNWSCreatureStats *, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__SetSTRBase)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__SetSchool)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__SetSkillRank)(CNWSCreatureStats *, uint8_t, int8_t);
extern int (*CNWSCreatureStats__SetSpellFailure)(CNWSCreatureStats *, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__SetSpellLikeAbilityReady)(CNWSCreatureStats *, uint32_t, int32_t, uint8_t);
extern int (*CNWSCreatureStats__SetSpellResistance)(CNWSCreatureStats *, int8_t);
extern int (*CNWSCreatureStats__SetSpellResistancePenalty)(CNWSCreatureStats *, int8_t);
extern int (*CNWSCreatureStats__SetStatById)(CNWSCreatureStats *, int32_t, float);
extern int (*CNWSCreatureStats__SetTag)(CNWSCreatureStats *, CExoString const *);
extern int (*CNWSCreatureStats__SetWISBase)(CNWSCreatureStats *, uint8_t);
extern int (*CNWSCreatureStats__UnReadySpell)(CNWSCreatureStats *, uint32_t, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureStats__UpdateCombatInformation)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__UpdateLastStatsObject)(CNWSCreatureStats *, uint64_t, CNWCreatureStatsUpdate *);
extern int (*CNWSCreatureStats__UpdateNumberMemorizedSpellSlots)(CNWSCreatureStats *);
extern int (*CNWSCreatureStats__ValidateLevelUp)(CNWSCreatureStats *, CNWSStats_Level *, uint8_t, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__AddKnownSpell)(CNWSCreatureClass *, uint8_t, uint32_t);
extern int (*CNWSCreatureClass__ClearMemorizedKnownSpells)(CNWSCreatureClass *, uint32_t);
extern int (*CNWSCreatureClass__ClearMemorizedSpellSlot)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__ConfirmDomainSpell)(CNWSCreatureClass *, uint8_t, uint32_t);
extern int (*CNWSCreatureClass__DecrementSpellsPerDayLeft)(CNWSCreatureClass *, uint8_t);
extern int (*CNWSCreatureClass__GetIsDomainSpell)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__GetKnownSpell)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__GetMaxSpellsPerDayLeft)(CNWSCreatureClass *, uint8_t);
extern int (*CNWSCreatureClass__GetMemorizedSpellInSlot)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__GetMemorizedSpellInSlotDetails)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__GetMemorizedSpellInSlotMetaType)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__GetMemorizedSpellInSlotReady)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__GetMemorizedSpellReadyCount_1)(CNWSCreatureClass *, uint32_t, unsigned char *, unsigned char *, uint8_t);
extern int (*CNWSCreatureClass__GetMemorizedSpellReadyCount_2)(CNWSCreatureClass *, uint32_t, uint8_t);
extern int (*CNWSCreatureClass__GetNumberBonusSpells)(CNWSCreatureClass *, uint8_t);
extern int (*CNWSCreatureClass__GetNumberKnownSpells)(CNWSCreatureClass *, uint8_t);
extern int (*CNWSCreatureClass__GetNumberMemorizedSpellSlots)(CNWSCreatureClass *, uint8_t);
extern int (*CNWSCreatureClass__GetSpellsPerDayLeft)(CNWSCreatureClass *, uint8_t);
extern int (*CNWSCreatureClass__IncrementSpellsPerDayLeft)(CNWSCreatureClass *, uint8_t);
extern int (*CNWSCreatureClass__RemoveKnownSpell)(CNWSCreatureClass *, uint8_t, uint32_t);
extern int (*CNWSCreatureClass__ResetSpellsPerDayLeft)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__SetMaxSpellsPerDayLeft)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__SetMemorizedSpellInSlotReady)(CNWSCreatureClass *, uint8_t, uint8_t, int32_t);
extern int (*CNWSCreatureClass__SetMemorizedSpellSlot)(CNWSCreatureClass *, uint8_t, uint8_t, uint32_t, int32_t, uint8_t);
extern int (*CNWSCreatureClass__SetNumberBonusSpells)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__SetNumberMemorizedSpellSlots)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSCreatureClass__SetSpellsPerDayLeft)(CNWSCreatureClass *, uint8_t, uint8_t);
extern int (*CNWSDialog__AddJournalEntry)(CNWSDialog *, CExoString const *, uint32_t, uint32_t);
extern int (*CNWSDialog__CheckScript)(CNWSDialog *, CNWSObject *, CResRef const *);
extern int (*CNWSDialog__Cleanup)(CNWSDialog *);
extern int (*CNWSDialog__ClearDialogOwnerInObject)(CNWSDialog *, uint32_t);
extern int (*CNWSDialog__GetSpeaker)(CNWSDialog *, CNWSObject *, CExoString const *);
extern int (*CNWSDialog__GetStartEntry)(CNWSDialog *, CNWSObject *);
extern int (*CNWSDialog__GetStartEntryOneLiner)(CNWSDialog *, CNWSObject *, CExoLocString *, CResRef *, CResRef *);
extern int (*CNWSDialog__HandleReply)(CNWSDialog *, uint32_t, CNWSObject *, uint32_t, int32_t, uint32_t);
extern int (*CNWSDialog__IsPlayerInDialog)(CNWSDialog *, uint32_t);
extern int (*CNWSDialog__LoadDialog)(CNWSDialog *, CResGFF *, int32_t);
extern int (*CNWSDialog__RemovePlayer)(CNWSDialog *, uint32_t);
extern int (*CNWSDialog__RunScript)(CNWSDialog *, CNWSObject *, CResRef const *);
extern int (*CNWSDialog__SendDialogEntry)(CNWSDialog *, CNWSObject *, uint32_t, uint32_t, int32_t);
extern int (*CNWSDialog__SendDialogReplies)(CNWSDialog *, CNWSObject *, uint32_t);
extern int (*CNWSDialog__SetDialogDelay)(CNWSDialog *, CNWSObject *, CExoLocString, uint32_t, int32_t);
extern int (*CNWSDoor__AIUpdate)(CNWSDoor *);
extern int (*CNWSDoor__AddToArea)(CNWSDoor *, CNWSArea *, float, float, float, int32_t);
extern int (*CNWSDoor__AsNWSDoor)(CNWSDoor *);
extern int (*CNWSDoor__DoDamage)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__EventHandler)(CNWSDoor *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSDoor__GetActionPoint)(CNWSDoor *, int32_t, uint8_t);
extern int (*CNWSDoor__GetActive)(CNWSDoor *);
extern int (*CNWSDoor__GetAppearanceType)(CNWSDoor *);
extern int (*CNWSDoor__GetAutoRemoveKey)(CNWSDoor *);
extern int (*CNWSDoor__GetBaseType)(CNWSDoor *);
extern int (*CNWSDoor__GetBearing)(CNWSDoor *);
extern int (*CNWSDoor__GetCreatureList)(CNWSDoor *);
extern int (*CNWSDoor__GetDescription)(CNWSDoor *);
extern int (*CNWSDoor__GetDescriptionOverride)(CNWSDoor *);
extern int (*CNWSDoor__GetDetectDC)(CNWSDoor *);
extern int (*CNWSDoor__GetDetectable)(CNWSDoor *);
extern int (*CNWSDoor__GetDialogResref)(CNWSDoor *);
extern int (*CNWSDoor__GetDisarmDC)(CNWSDoor *);
extern int (*CNWSDoor__GetDisarmable)(CNWSDoor *);
extern int (*CNWSDoor__GetDisplayName)(CNWSDoor *);
extern int (*CNWSDoor__GetFactionId)(CNWSDoor *);
extern int (*CNWSDoor__GetFirstName)(CNWSDoor *);
extern int (*CNWSDoor__GetFlagged)(CNWSDoor *);
extern int (*CNWSDoor__GetFortitudeSave)(CNWSDoor *);
extern int (*CNWSDoor__GetGenericType)(CNWSDoor *);
extern int (*CNWSDoor__GetHardness)(CNWSDoor *);
extern int (*CNWSDoor__GetIsLinked)(CNWSDoor *);
extern int (*CNWSDoor__GetKeyName)(CNWSDoor *);
extern int (*CNWSDoor__GetKeyRequired)(CNWSDoor *);
extern int (*CNWSDoor__GetKeyRequiredFeedbackMessage)(CNWSDoor *);
extern int (*CNWSDoor__GetLastClosed)(CNWSDoor *);
extern int (*CNWSDoor__GetLastDisarmed)(CNWSDoor *);
extern int (*CNWSDoor__GetLastLocked)(CNWSDoor *);
extern int (*CNWSDoor__GetLastOpened)(CNWSDoor *);
extern int (*CNWSDoor__GetLastTriggered)(CNWSDoor *);
extern int (*CNWSDoor__GetLastUnlocked)(CNWSDoor *);
extern int (*CNWSDoor__GetLinkedObject)(CNWSDoor *);
extern int (*CNWSDoor__GetLinkedToTag)(CNWSDoor *);
extern int (*CNWSDoor__GetLoadScreenID)(CNWSDoor *);
extern int (*CNWSDoor__GetLockDC)(CNWSDoor *);
extern int (*CNWSDoor__GetLockable)(CNWSDoor *);
extern int (*CNWSDoor__GetLocked)(CNWSDoor *);
extern int (*CNWSDoor__GetNearestActionPoint)(CNWSDoor *, Vector const *, int32_t);
extern int (*CNWSDoor__GetOneShot)(CNWSDoor *);
extern int (*CNWSDoor__GetOpenLockDC)(CNWSDoor *);
extern int (*CNWSDoor__GetOpenState)(CNWSDoor *);
extern int (*CNWSDoor__GetRecoverable)(CNWSDoor *);
extern int (*CNWSDoor__GetReflexSave)(CNWSDoor *);
extern int (*CNWSDoor__GetScriptName)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__GetSecretDoorDC)(CNWSDoor *);
extern int (*CNWSDoor__GetTrapCreator)(CNWSDoor *);
extern int (*CNWSDoor__GetTrapFactionId)(CNWSDoor *);
extern int (*CNWSDoor__GetTrapped)(CNWSDoor *);
extern int (*CNWSDoor__GetUpdateDisplayName)(CNWSDoor *);
extern int (*CNWSDoor__GetVisibleModel)(CNWSDoor *);
extern int (*CNWSDoor__GetWillSave)(CNWSDoor *);
extern int (*CNWSDoor__LoadDoor)(CNWSDoor *, CResGFF *, CResStruct *);
extern int (*CNWSDoor__NoNonWalkPolysInDoor)(CNWSDoor *, float, float, float, float, float, float, float);
extern int (*CNWSDoor__PostProcess)(CNWSDoor *);
extern int (*CNWSDoor__RemoveFromArea)(CNWSDoor *);
extern int (*CNWSDoor__SaveDoor)(CNWSDoor *, CResGFF *, CResStruct *);
extern int (*CNWSDoor__SetActive)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetAppearanceType)(CNWSDoor *, uint32_t);
extern int (*CNWSDoor__SetAutoRemoveKey)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetBaseType)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetBearing)(CNWSDoor *, float);
extern int (*CNWSDoor__SetDescription)(CNWSDoor *, CExoLocString);
extern int (*CNWSDoor__SetDescriptionOverride)(CNWSDoor *, CExoString);
extern int (*CNWSDoor__SetDetectDC)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetDetectable)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetDialogResref)(CNWSDoor *, CResRef);
extern int (*CNWSDoor__SetDisarmDC)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetDisarmable)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetDisplayName)(CNWSDoor *, CExoString);
extern int (*CNWSDoor__SetFactionId)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetFirstName)(CNWSDoor *, CExoLocString);
extern int (*CNWSDoor__SetFlagged)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetFortitudeSave)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetGenericType)(CNWSDoor *, uint32_t);
extern int (*CNWSDoor__SetHardness)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetKeyName)(CNWSDoor *, CExoString const *);
extern int (*CNWSDoor__SetKeyRequired)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetKeyRequiredFeedbackMessage)(CNWSDoor *, CExoString);
extern int (*CNWSDoor__SetLastClosed)(CNWSDoor *, uint32_t);
extern int (*CNWSDoor__SetLastDisarmed)(CNWSDoor *, uint32_t);
extern int (*CNWSDoor__SetLastLocked)(CNWSDoor *, uint32_t);
extern int (*CNWSDoor__SetLastOpened)(CNWSDoor *, uint32_t);
extern int (*CNWSDoor__SetLastTriggered)(CNWSDoor *, uint32_t);
extern int (*CNWSDoor__SetLastUnlocked)(CNWSDoor *, uint32_t);
extern int (*CNWSDoor__SetLinkedFlags)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetLinkedToTag)(CNWSDoor *, CExoString);
extern int (*CNWSDoor__SetLockDC)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetLockable)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetLocked)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetOneShot)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetOpenLockDC)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetOpenState)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetRecoverable)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetReflexSave)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetScriptName)(CNWSDoor *, int32_t, CExoString);
extern int (*CNWSDoor__SetSecretDoorDC)(CNWSDoor *, uint8_t);
extern int (*CNWSDoor__SetTrapCreator)(CNWSDoor *, uint32_t);
extern int (*CNWSDoor__SetTrapFactionId)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetTrapped)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetUpdateDisplayName)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetVisibleModel)(CNWSDoor *, int32_t);
extern int (*CNWSDoor__SetWillSave)(CNWSDoor *, uint8_t);
extern int (*CNWSEffectListHandler__InitializeEffects)(CNWSEffectListHandler *);
extern int (*CNWSEffectListHandler__OnApplyACDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyACIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyAbilityDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyAbilityIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyAppear)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyArcaneSpellFailure)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyAreaOfEffect)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyAttackDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyAttackIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyBeam)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyBlindness)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyBlindnessInactive)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyBonusFeat)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyBonusSpellOfLevel)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyConcealment)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyCurse)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyCutsceneGhost)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyCutsceneImmobile)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDamage)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDamageDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDamageImmunityDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDamageImmunityIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDamageIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDamageReduction)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDamageResistance)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDamageShield)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDarkness)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDeaf)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDeath)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDefensiveStance)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDisappear)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDisappearAppear)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDisarm)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDisease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDispelAllMagic)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyDispelBestMagic)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyEffectIcon)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyEffectImmunity)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyEnemyAttackBonus)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyEntangled)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyHasteInternal)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyHasteOrSlow)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyHeal)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyHitPointChangeWhenDying)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyInvisibility)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyItemProperty)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyKnockdown)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyLight)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyLimitMovementSpeed)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyLink)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyMissChance)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyModifyNumAttacks)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyMovementSpeedDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyMovementSpeedIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyNegativeLevel)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyPetrify)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyPoison)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyPolymorph)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyRacialType)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyRegenerate)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyResurrection)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySanctuary)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySavingThrowDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySavingThrowIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySeeInvisible)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySetAIState)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySetState)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySetStateInternal)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySilence)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySkillDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySkillIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySlowInternal)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySpecialWalkAnimation)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySpellFailure)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySpellImmunity)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySpellLevelAbsorption)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySpellResistanceDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySpellResistanceIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyStore)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnApplySummonCreature)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplySwarm)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyTaunt)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyTemporaryHitpoints)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyTimestop)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyTrueSeeing)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyTurnResistance)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyUltraVision)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyVampiricRegeneration)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyVision)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyVisualEffect)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnApplyWounding)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnEffectApplied)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSEffectListHandler__OnEffectRemoved)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveACDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveACIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveAbilityDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveAbilityIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveArcaneSpellFailure)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveAreaOfEffect)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveAttackDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveAttackIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveBeam)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveBlindness)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveBonusFeat)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveBonusSpellOfLevel)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveConcealment)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveCurse)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveCutsceneGhost)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveDamageDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveDamageImmunityDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveDamageImmunityIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveDamageIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveDamageShield)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveDarkness)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveDisappearAppear)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveDisarm)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveEffectIcon)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveEffectImmunity)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveEnemyAttackBonus)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveEntangled)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveHasteInternal)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveHasteOrSlow)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveHitPointChangeWhenDying)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveInvisibility)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveItemProperty)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveKnockdown)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveLight)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveLimitMovementSpeed)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveMissChance)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveModifyNumAttacks)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveMovementSpeedDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveMovementSpeedIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveNegativeLevel)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemovePetrify)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemovePolymorph)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveRacialType)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSanctuary)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSavingThrowDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSavingThrowIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSeeInvisible)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSetAIState)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSetState)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSetStateInternal)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSilence)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSkillDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSkillIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSlowInternal)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSpecialWalkAnimation)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSpellFailure)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSpellImmunity)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSpellLevelAbsorption)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSpellResistanceDecrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSpellResistanceIncrease)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSummonCreature)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveSwarm)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveTaunt)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveTemporaryHitpoints)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveTimestop)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveTrueSeeing)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveTurnResistance)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveUltraVision)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveVision)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveVisualEffect)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__OnRemoveWounding)(CNWSEffectListHandler *, CNWSObject *, CGameEffect *);
extern int (*CNWSEffectListHandler__SendFloatyEffect)(CNWSEffectListHandler *, uint32_t, uint32_t);
extern int (*CNWSEncounter__AIUpdate)(CNWSEncounter *);
extern int (*CNWSEncounter__AddCreaturesToSpawnList)(CNWSEncounter *, CEncounterListEntry *, int32_t *, int32_t, CEncounterListEntry);
extern int (*CNWSEncounter__AddToActivateAreaList)(CNWSEncounter *, uint32_t);
extern int (*CNWSEncounter__AddToArea)(CNWSEncounter *, CNWSArea *, float, float, float, int32_t);
extern int (*CNWSEncounter__AsNWSEncounter)(CNWSEncounter *);
extern int (*CNWSEncounter__CalculatePointsFromCR)(CNWSEncounter *, float);
extern int (*CNWSEncounter__CalculateSpawnPool)(CNWSEncounter *, float);
extern int (*CNWSEncounter__EventHandler)(CNWSEncounter *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSEncounter__GetActivateObjectArrayIndex)(CNWSEncounter *);
extern int (*CNWSEncounter__GetActive)(CNWSEncounter *);
extern int (*CNWSEncounter__GetCustomScriptEventId)(CNWSEncounter *);
extern int (*CNWSEncounter__GetDifficulty)(CNWSEncounter *);
extern int (*CNWSEncounter__GetDifficultyIndex)(CNWSEncounter *);
extern int (*CNWSEncounter__GetEncounterCanReset)(CNWSEncounter *);
extern int (*CNWSEncounter__GetEncounterExhausted)(CNWSEncounter *);
extern int (*CNWSEncounter__GetEncounterStarted)(CNWSEncounter *);
extern int (*CNWSEncounter__GetFactionId)(CNWSEncounter *);
extern int (*CNWSEncounter__GetFirstName)(CNWSEncounter *);
extern int (*CNWSEncounter__GetInActivateArea)(CNWSEncounter *, Vector);
extern int (*CNWSEncounter__GetInActivateAreaList)(CNWSEncounter *, uint32_t);
extern int (*CNWSEncounter__GetLastEntered)(CNWSEncounter *);
extern int (*CNWSEncounter__GetLastLeft)(CNWSEncounter *);
extern int (*CNWSEncounter__GetMaxActivateX)(CNWSEncounter *);
extern int (*CNWSEncounter__GetMaxActivateY)(CNWSEncounter *);
extern int (*CNWSEncounter__GetMinActivateX)(CNWSEncounter *);
extern int (*CNWSEncounter__GetMinActivateY)(CNWSEncounter *);
extern int (*CNWSEncounter__GetNewEntry)(CNWSEncounter *);
extern int (*CNWSEncounter__GetPlayerTriggeredOnly)(CNWSEncounter *);
extern int (*CNWSEncounter__GetPosition)(CNWSEncounter *);
extern int (*CNWSEncounter__GetRespawnsCurrent)(CNWSEncounter *);
extern int (*CNWSEncounter__GetRespawnsMax)(CNWSEncounter *);
extern int (*CNWSEncounter__GetScriptName)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__GetSpawnMode)(CNWSEncounter *);
extern int (*CNWSEncounter__LineSegmentIntersectActivateArea)(CNWSEncounter *, Vector, Vector);
extern int (*CNWSEncounter__LoadEncounter)(CNWSEncounter *, CResGFF *, CResStruct *);
extern int (*CNWSEncounter__LoadFractionalCRData)(CNWSEncounter *);
extern int (*CNWSEncounter__LoadFromTemplate)(CNWSEncounter *, CResRef, int32_t, Vector *);
extern int (*CNWSEncounter__MakeSpawnList)(CNWSEncounter *, CEncounterListEntry *, int32_t *);
extern int (*CNWSEncounter__PadOutCreatureCount)(CNWSEncounter *, CEncounterListEntry *, int32_t *);
extern int (*CNWSEncounter__ReadEncounterFromGff)(CNWSEncounter *, CResGFF *, CResStruct *, int32_t, Vector *);
extern int (*CNWSEncounter__ReadEncounterScriptsFromGff)(CNWSEncounter *, CResGFF *, CResStruct *);
extern int (*CNWSEncounter__RemoveFromActivateAreaList)(CNWSEncounter *, uint32_t);
extern int (*CNWSEncounter__RemoveFromActiveCreatureCount)(CNWSEncounter *, float, int32_t);
extern int (*CNWSEncounter__RemoveFromArea)(CNWSEncounter *);
extern int (*CNWSEncounter__SaveEncounter)(CNWSEncounter *, CResGFF *, CResStruct *);
extern int (*CNWSEncounter__SetActivateObjectArrayIndex)(CNWSEncounter *, uint16_t);
extern int (*CNWSEncounter__SetActive)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetCustomScriptEventId)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetDifficulty)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetEncounterCanReset)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetEncounterExhausted)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetEncounterStarted)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetLastEntered)(CNWSEncounter *, uint32_t);
extern int (*CNWSEncounter__SetLastLeft)(CNWSEncounter *, uint32_t);
extern int (*CNWSEncounter__SetNewEntry)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetPlayerTriggeredOnly)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetRespawnsCurrent)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetRespawnsMax)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SetScriptName)(CNWSEncounter *, int32_t, CExoString);
extern int (*CNWSEncounter__SetSpawnMode)(CNWSEncounter *, int32_t);
extern int (*CNWSEncounter__SpawnEncounterCreatures)(CNWSEncounter *);
extern int (*CNWSEncounter__SpawnIfAppropriate)(CNWSEncounter *, uint32_t, float);
extern int (*CNWSEncounter__TallyEnemyRadiusPoints)(CNWSEncounter *);
extern int (*CNWSEncounter__UpdateActivateAreaList)(CNWSEncounter *, uint32_t);
extern int (*CNWSFaction__AddMember)(CNWSFaction *, uint32_t, int32_t);
extern int (*CNWSFaction__AttemptJoin)(CNWSFaction *, uint32_t);
extern int (*CNWSFaction__AttemptRemove)(CNWSFaction *, uint32_t, uint32_t);
extern int (*CNWSFaction__ChangeMemberId)(CNWSFaction *, uint32_t, uint32_t);
extern int (*CNWSFaction__ClearAllReputationsTowards)(CNWSFaction *, uint32_t);
extern int (*CNWSFaction__GetAverageGoodEvilAlignment)(CNWSFaction *);
extern int (*CNWSFaction__GetAverageLawChaosAlignment)(CNWSFaction *);
extern int (*CNWSFaction__GetAverageLevel)(CNWSFaction *);
extern int (*CNWSFaction__GetAverageReputation)(CNWSFaction *, uint32_t);
extern int (*CNWSFaction__GetAverageXP)(CNWSFaction *);
extern int (*CNWSFaction__GetBestAC)(CNWSFaction *, uint32_t, int32_t);
extern int (*CNWSFaction__GetCreatureInParty)(CNWSFaction *, uint32_t);
extern int (*CNWSFaction__GetFactionManager)(CNWSFaction *);
extern int (*CNWSFaction__GetFactionMember)(CNWSFaction *, int32_t, int32_t);
extern int (*CNWSFaction__GetGold)(CNWSFaction *);
extern int (*CNWSFaction__GetIsInvited)(CNWSFaction *, uint32_t);
extern int (*CNWSFaction__GetLeader)(CNWSFaction *);
extern int (*CNWSFaction__GetLeastDamagedMember)(CNWSFaction *, uint32_t, int32_t);
extern int (*CNWSFaction__GetMemberList)(CNWSFaction *, uint32_t **);
extern int (*CNWSFaction__GetMostDamagedMember)(CNWSFaction *, uint32_t, int32_t);
extern int (*CNWSFaction__GetMostFrequentClass)(CNWSFaction *);
extern int (*CNWSFaction__GetSingletonParty)(CNWSFaction *);
extern int (*CNWSFaction__GetStrongestMember)(CNWSFaction *, uint32_t, int32_t);
extern int (*CNWSFaction__GetWeakestMember)(CNWSFaction *, uint32_t, int32_t);
extern int (*CNWSFaction__GetWorstAC)(CNWSFaction *, uint32_t, int32_t);
extern int (*CNWSFaction__Initialise)(CNWSFaction *);
extern int (*CNWSFaction__InviteMember)(CNWSFaction *, uint32_t, uint32_t);
extern int (*CNWSFaction__RemoveMember)(CNWSFaction *, uint32_t);
extern int (*CNWSFaction__SendChatMessage)(CNWSFaction *, uint32_t, CExoString);
extern int (*CNWSFaction__SendFactionUpdateAdd)(CNWSFaction *, uint32_t);
extern int (*CNWSFaction__SendFactionUpdateList)(CNWSFaction *);
extern int (*CNWSFaction__SendFactionUpdateRemove)(CNWSFaction *, uint32_t);
extern int (*CNWSFaction__TransferLeadership)(CNWSFaction *, uint32_t, uint32_t);
extern int (*CNWSInventory__GetArraySlotFromSlotFlag)(CNWSInventory *, uint32_t);
extern int (*CNWSInventory__GetItemInInventory)(CNWSInventory *, CNWSItem *);
extern CNWSItem *(*CNWSInventory__GetItemInSlot)(CNWSInventory *, uint32_t);
extern int (*CNWSInventory__GetSlotFromItem)(CNWSInventory *, CNWSItem *);
extern int (*CNWSInventory__PutItemInSlot)(CNWSInventory *, uint32_t, CNWSItem *);
extern int (*CNWSInventory__RemoveItem)(CNWSInventory *, CNWSItem *);
extern int (*CNWSItem__AIUpdate)(CNWSItem *);
extern int (*CNWSItem__AcquireItem)(CNWSItem *, CNWSItem **, uint32_t, uint8_t, uint8_t, int32_t);
extern int (*CNWSItem__ActiveProperty)(CNWSItem *, uint16_t);
extern int (*CNWSItem__AddActiveProperty)(CNWSItem *, CNWItemProperty);
extern int (*CNWSItem__AddPassiveProperty)(CNWSItem *, CNWItemProperty);
extern int (*CNWSItem__AddToArea)(CNWSItem *, CNWSArea *, float, float, float, int32_t);
extern int (*CNWSItem__ApplyItemProperties)(CNWSItem *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItem__AsNWSItem)(CNWSItem *);
extern int (*CNWSItem__CalculateBaseCosts)(CNWSItem *);
extern int (*CNWSItem__CalculatePassiveCost)(CNWSItem *, CNWItemProperty *);
extern int (*CNWSItem__CloseInventory)(CNWSItem *, uint32_t, int32_t);
extern int (*CNWSItem__CloseItemForAllPlayers)(CNWSItem *);
extern int (*CNWSItem__CompareItem)(CNWSItem *, CNWSItem *);
extern int (*CNWSItem__ComputeArmorClass)(CNWSItem *);
extern int (*CNWSItem__ComputeWeight)(CNWSItem *);
extern int (*CNWSItem__CopyItem)(CNWSItem *, CNWSItem *, int32_t);
extern int (*CNWSItem__EventHandler)(CNWSItem *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSItem__GetActivePropertiesList)(CNWSItem *);
extern CNWItemProperty *(*CNWSItem__GetActiveProperty)(CNWSItem *, int32_t);
extern int (*CNWSItem__GetArmorModelPart)(CNWSItem *, uint8_t);
extern int (*CNWSItem__GetArmorValue)(CNWSItem *);
extern int (*CNWSItem__GetCost)(CNWSItem *, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSItem__GetDamageFlags)(CNWSItem *);
extern int (*CNWSItem__GetDescription)(CNWSItem *, int32_t);
extern int (*CNWSItem__GetDescriptionOverride)(CNWSItem *, int32_t);
extern int (*CNWSItem__GetDisplayName)(CNWSItem *);
extern int (*CNWSItem__GetFirstName)(CNWSItem *);
extern int (*CNWSItem__GetIdentified)(CNWSItem *);
extern int (*CNWSItem__GetInfinite)(CNWSItem *);
extern int (*CNWSItem__GetIsCursed)(CNWSItem *);
extern int (*CNWSItem__GetIsDroppable)(CNWSItem *);
extern int (*CNWSItem__GetIsPickPocketable)(CNWSItem *);
extern int (*CNWSItem__GetLastUsedActiveProperties)(CNWSItem *);
extern int (*CNWSItem__GetLastUsedActivePropertyUsesLeft)(CNWSItem *, uint8_t);
extern int (*CNWSItem__GetMinEquipLevel)(CNWSItem *);
extern int (*CNWSItem__GetModelPart)(CNWSItem *, uint8_t);
extern int (*CNWSItem__GetName)(CNWSItem *);
extern int (*CNWSItem__GetNumActiveProperties)(CNWSItem *);
extern int (*CNWSItem__GetNumCharges)(CNWSItem *);
extern int (*CNWSItem__GetNumPassiveProperties)(CNWSItem *);
extern int (*CNWSItem__GetPassivePropertiesList)(CNWSItem *);
extern CNWItemProperty *(*CNWSItem__GetPassiveProperty)(CNWSItem *, int32_t);
extern int (*CNWSItem__GetPossessor)(CNWSItem *);
extern int (*CNWSItem__GetPropertyByType)(CNWSItem *, CNWItemProperty **, uint16_t, uint16_t);
extern int (*CNWSItem__GetPropertyByTypeExists)(CNWSItem *, uint16_t, uint16_t);
extern int (*CNWSItem__GetRepositoryArrayIndex)(CNWSItem *);
extern int (*CNWSItem__GetRepositoryPosition)(CNWSItem *, unsigned char *, unsigned char *);
extern int (*CNWSItem__GetRepositoryPtr)(CNWSItem *);
extern int (*CNWSItem__GetStackSize)(CNWSItem *);
extern int (*CNWSItem__GetStolen)(CNWSItem *);
extern int (*CNWSItem__GetUnalteredArmorModelPart)(CNWSItem *, uint8_t);
extern int (*CNWSItem__GetUpdateDisplayName)(CNWSItem *);
extern int (*CNWSItem__GetUsedActivePropertyUsesLeft)(CNWSItem *, uint8_t);
extern int (*CNWSItem__GetVisualEffect)(CNWSItem *);
extern int (*CNWSItem__GetWeight)(CNWSItem *);
extern int (*CNWSItem__InitRepository)(CNWSItem *, uint32_t);
extern int (*CNWSItem__LoadDataFromGff)(CNWSItem *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSItem__LoadFromTemplate)(CNWSItem *, CResRef, CExoString *);
extern int (*CNWSItem__LoadItem)(CNWSItem *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSItem__MergeItem)(CNWSItem *, CNWSItem *);
extern int (*CNWSItem__OpenInventory)(CNWSItem *, uint32_t);
extern int (*CNWSItem__ReadContainerItemsFromGff)(CNWSItem *, CResGFF *, CResStruct *);
extern int (*CNWSItem__RemoveActiveProperty)(CNWSItem *, int32_t);
extern int (*CNWSItem__RemoveFromArea)(CNWSItem *);
extern int (*CNWSItem__RemoveItemProperties)(CNWSItem *, CNWSCreature *, uint32_t);
extern int (*CNWSItem__RemovePassiveProperty)(CNWSItem *, int32_t);
extern int (*CNWSItem__RestoreUsedActiveProperties)(CNWSItem *, int32_t);
extern int (*CNWSItem__RestoreUsedActiveProperty)(CNWSItem *, CNWItemProperty *, int32_t);
extern int (*CNWSItem__SaveContainerItems)(CNWSItem *, CResGFF *, CResStruct *);
extern int (*CNWSItem__SaveItem)(CNWSItem *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSItem__SaveItemProperties)(CNWSItem *, CResGFF *, CResStruct *);
extern int (*CNWSItem__SetArmorModelPart)(CNWSItem *, uint8_t, uint8_t);
extern int (*CNWSItem__SetArmorValue)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetBarterOwner)(CNWSItem *, uint32_t);
extern int (*CNWSItem__SetDisplayName)(CNWSItem *, CExoString);
extern int (*CNWSItem__SetFirstName)(CNWSItem *, uint32_t);
extern int (*CNWSItem__SetIdentified)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetIdentifiedDescription)(CNWSItem *, CExoLocString);
extern int (*CNWSItem__SetIdentifiedDescriptionOverride)(CNWSItem *, CExoString);
extern int (*CNWSItem__SetInfinite)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetIsCursed)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetIsDroppable)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetIsPickPocketable)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetModelPart)(CNWSItem *, uint8_t, uint8_t);
extern int (*CNWSItem__SetName)(CNWSItem *, CExoLocString);
extern int (*CNWSItem__SetNumCharges)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetPossessor)(CNWSItem *, uint32_t, int32_t, int32_t, int32_t);
extern int (*CNWSItem__SetRecalculateCostFlag)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetRepositoryArrayIndex)(CNWSItem *, uint16_t);
extern int (*CNWSItem__SetRepositoryPosition)(CNWSItem *, uint8_t, uint8_t);
extern int (*CNWSItem__SetStackSize)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetStolen)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetUnalteredArmorModelPart)(CNWSItem *, uint8_t, uint8_t);
extern int (*CNWSItem__SetUnidentifiedDescription)(CNWSItem *, CExoLocString);
extern int (*CNWSItem__SetUnidentifiedDescriptionOverride)(CNWSItem *, CExoString);
extern int (*CNWSItem__SetUpdateDisplayName)(CNWSItem *, int32_t);
extern int (*CNWSItem__SetWeight)(CNWSItem *, int32_t);
extern int (*CNWSItem__SplitItem)(CNWSItem *, int32_t);
extern int (*CNWSItem__UpdateUsedActiveProperties)(CNWSItem *, int32_t);
extern int (*CNWSItem__UpdateVisualEffect)(CNWSItem *);
extern int (*CNWSItemPropertyHandler__ApplyACBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyAbilityBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyArcaneSpellFailure)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyAttackBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyAttackPenalty)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyBonusFeat)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyBonusSpellOfLevel)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyChangedSavingThrow)(CNWSItemPropertyHandler *, CNWSItem *, int32_t, CNWItemProperty *, CNWSCreature *, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyChangedSavingThrowVsX)(CNWSItemPropertyHandler *, CNWSItem *, int32_t, CNWItemProperty *, CNWSCreature *, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDamageBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDamageImmunity)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDamagePenalty)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDamageReduction)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDamageResistance)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDamageVulnerability)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDarkVision)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDecreaseAC)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDecreaseAbility)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyDecreaseSkill)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyEnhancementBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyEnhancementPenalty)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyFreeAction)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyHaste)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyHolyAvenger)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyImmunity)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyImprovedEvasion)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyImprovedSavingThrow)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyImprovedSavingThrowVsX)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyImprovedSpellResistance)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyLight)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyReducedSavingThrow)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyReducedSavingThrowVsX)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyRegeneration)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplySkillBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplySpecialWalk)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplySpellImmunityLevel)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplySpellImmunitySchool)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplySpellImmunitySpecific)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyTrueSeeing)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyTurnResistance)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__ApplyUnlimitedAmmo)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__InitializeItemProperties)(CNWSItemPropertyHandler *);
extern int (*CNWSItemPropertyHandler__OnItemPropertyApplied)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CNWSItemPropertyHandler__OnItemPropertyRemoved)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveACBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveAbilityBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveArcaneSpellFailure)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveAttackBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveAttackPenalty)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveBonusFeat)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveBonusSpellOfLevel)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveChangedSavingThrow)(CNWSItemPropertyHandler *, int32_t, CNWSItem *, CNWItemProperty *, CNWSCreature *);
extern int (*CNWSItemPropertyHandler__RemoveChangedSavingThrowVsX)(CNWSItemPropertyHandler *, int32_t, CNWSItem *, CNWItemProperty *, CNWSCreature *);
extern int (*CNWSItemPropertyHandler__RemoveDamageBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveDamageImmunity)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveDamagePenalty)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveDamageReduction)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveDamageResistance)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveDamageVulnerability)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveDarkVision)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveDecreaseAC)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveDecreaseAbility)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveDecreaseSkill)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveEnhancementBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveEnhancementPenalty)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveFreeAction)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveHaste)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveHolyAvenger)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveImmunity)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveImprovedEvasion)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveImprovedSavingThrow)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveImprovedSavingThrowVsX)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveImprovedSpellResistance)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveLight)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveReducedSavingThrow)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveReducedSavingThrowVsX)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveRegeneration)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveSkillBonus)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveSpecialWalk)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveSpellImmunityLevel)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveSpellImmunitySchool)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveSpellImmunitySpecific)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveTrueSeeing)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveTurnResistance)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSItemPropertyHandler__RemoveUnlimitedAmmo)(CNWSItemPropertyHandler *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CNWSJournal__Destroy)(CNWSJournal *, CExoString);
extern int (*CNWSJournal__SetDate)(CNWSJournal *, CExoString, uint32_t, int32_t);
extern int (*CNWSJournal__SetPicture)(CNWSJournal *, CExoString, int32_t, int32_t);
extern int (*CNWSJournal__SetState)(CNWSJournal *, CExoString, uint32_t, int32_t);
extern int (*CNWSJournal__SetTime)(CNWSJournal *, CExoString, uint32_t, int32_t);
extern int (*CNWSMessage__AddActiveItemPropertiesToMessage)(CNWSMessage *, CNWSItem *, CNWSCreature *);
extern int (*CNWSMessage__AddAreaOfEffectObjectToMessage)(CNWSMessage *, CNWSAreaOfEffectObject *);
extern int (*CNWSMessage__AddDoorAppearanceToMessage)(CNWSMessage *, CNWSDoor *);
extern int (*CNWSMessage__AddItemAppearanceToMessage)(CNWSMessage *, CNWSItem *);
extern int (*CNWSMessage__AddPlaceableAppearanceToMessage)(CNWSMessage *, CNWSPlaceable *);
extern int (*CNWSMessage__AddTriggerGeometryToMessage)(CNWSMessage *, CNWSTrigger *);
extern int (*CNWSMessage__AssignCreatureLists)(CNWSMessage *, CExoArrayList_uint32 *, CExoArrayList_uint32 *);
extern int (*CNWSMessage__AssignVisualEffectLists)(CNWSMessage *, CExoArrayList_ptr *, CExoArrayList_ptr *);
extern int (*CNWSMessage__CompareCreatureLists)(CNWSMessage *, CExoArrayList_uint32 *, CExoArrayList_uint32 *);
extern int (*CNWSMessage__CompareVisualEffectLists)(CNWSMessage *, CExoArrayList_ptr *, CExoArrayList_ptr *);
extern int (*CNWSMessage__ComputeAppearanceUpdateRequired)(CNWSMessage *, CNWSObject *, CLastUpdateObject *);
extern int (*CNWSMessage__ComputeGameObjectUpdateForCategory)(CNWSMessage *, uint32_t, uint32_t, CNWSPlayer *, CNWSObject *, CGameObjectArray *, CNWSPlayerLUOSortedObjectList *, int32_t);
extern int (*CNWSMessage__ComputeGameObjectUpdateForObject)(CNWSMessage *, CNWSPlayer *, CNWSObject *, CGameObjectArray *, uint32_t);
extern int (*CNWSMessage__ComputeGameObjectUpdateForYourself)(CNWSMessage *, CNWSPlayer *, CNWSObject *, CGameObjectArray *, uint32_t);
extern int (*CNWSMessage__ComputeGameObjectUpdateForYourselfToo)(CNWSMessage *, CNWSPlayer *, CNWSObject *, CGameObjectArray *, uint32_t);
extern int (*CNWSMessage__ComputeInventoryUpdateRequired)(CNWSMessage *, CNWSPlayer *, uint32_t, CNWSPlayerInventoryGUI *);
extern int (*CNWSMessage__ComputeLastUpdate_ActionQueue)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeLastUpdate_AssociateState)(CNWSMessage *, CNWSCreature *);
extern int (*CNWSMessage__ComputeLastUpdate_AutoMap)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeLastUpdate_CompareSpellLikeAbility)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeLastUpdate_GuiEffectIcons)(CNWSMessage *, CNWSCreature *, CExoArrayList_ptr *, int32_t);
extern int (*CNWSMessage__ComputeLastUpdate_GuiFeats)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeLastUpdate_GuiKnownSpellUses)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeLastUpdate_GuiKnownSpells)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeLastUpdate_GuiMemorizedSpells)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeLastUpdate_GuiNumberMemorizedSpells)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeLastUpdate_GuiSkills)(CNWSMessage *, CNWSCreature *);
extern int (*CNWSMessage__ComputeLastUpdate_PlayerState)(CNWSMessage *, CNWSCreature *);
extern int (*CNWSMessage__ComputeLastUpdate_StoreUpdateSpellLikeAbility)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeLastUpdate_WriteSpellLikeAbility)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__ComputeNumAutoMapUpdatesRequired)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *, uint32_t *);
extern int (*CNWSMessage__ComputeQuickbarItemUseCountUpdateRequired)(CNWSMessage *, CNWSObject *, CLastUpdateObject *);
extern int (*CNWSMessage__ComputeRepositoryUpdateRequired)(CNWSMessage *, CNWSPlayer *, CExoLinkedListNode *, CExoLinkedListNode *);
extern int (*CNWSMessage__ComputeUpdateRequired)(CNWSMessage *, CNWSPlayer *, CNWSObject *, CLastUpdateObject *, int32_t);
extern int (*CNWSMessage__ComputeVisibilityLists)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__CreateNewLastUpdateObject)(CNWSMessage *, CNWSPlayer *, CNWSObject *, uint32_t *, uint32_t *);
extern int (*CNWSMessage__DeleteLastUpdateObjectsForObject)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__DeleteLastUpdateObjectsInOtherAreas)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__GetLocStringServer)(CNWSMessage *, uint32_t, CExoLocString, CExoLocString, CExoString *, float *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerAreaMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerBarter)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerBarter_AcceptTrade)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerBarter_AddItem)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerBarter_CloseBarter)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerBarter_LockList)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerBarter_MoveItem)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerBarter_RemoveItem)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerBarter_StartBarter)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerBarter_Window)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerCharListMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerCharacterDownload)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerCharacterSheetMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerChatMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerCheatMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerCutscene)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerDialogMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerDungeonMasterMessage)(CNWSMessage *, CNWSPlayer *, uint8_t, int32_t);
extern int (*CNWSMessage__HandlePlayerToServerGameObjectUpdate)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerGoldMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerGroupInputMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerGroupInputWalkToWaypoint)(CNWSMessage *, CNWSPlayer *, CNWSCreature *, uint32_t, float, float, float, uint8_t, int32_t, int32_t, uint32_t);
extern int (*CNWSMessage__HandlePlayerToServerGuiContainerMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerGuiInventoryMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerGuiQuickbar)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerGuiQuickbar_SetButton)(CNWSMessage *, CNWSPlayer *, uint8_t, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerInputAbortDriveControl)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerInputCancelGuiTimingEvent)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerInputDriveControl)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerInputMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerInputWalkToWaypoint)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerInventoryMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerJournalMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerLevelUpMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerLoginMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerMapPinChangePin)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerMapPinDestroyMapPin)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerMapPinMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerMapPinSetMapPinAt)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerMessage)(CNWSMessage *, uint32_t, unsigned char *, uint32_t);
extern int (*CNWSMessage__HandlePlayerToServerModuleMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerPVPListOperations)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerParty)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerPlayModuleCharacterList)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerPlayModuleCharacterList_Start)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerPlayModuleCharacterList_Stop)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__HandlePlayerToServerPlayerDeath)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerPlayerList)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerPortal)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerQuickChatMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerServerChatMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerServerStatusMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerShutDownServer)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandlePlayerToServerStoreMessage)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__HandleServerAdminToServerMessage)(CNWSMessage *, uint32_t, unsigned char *, uint32_t);
extern int (*CNWSMessage__HasValidString)(CNWSMessage *, CExoLocString *, uint8_t);
extern int (*CNWSMessage__ParseGetBool)(CNWSMessage *, unsigned char *, uint32_t, int32_t *);
extern int (*CNWSMessage__ParseGetString)(CNWSMessage *, unsigned char *, uint32_t, CExoString *, uint32_t);
extern int (*CNWSMessage__ParseToken)(CNWSMessage *, char const *, unsigned char **, uint32_t *, int32_t);
extern int (*CNWSMessage__ReadOBJECTIDServer)(CNWSMessage *);
extern int (*CNWSMessage__SelectCategoryForGameObject)(CNWSMessage *, CGameObject *, CNWSObject *);
extern int (*CNWSMessage__SendPlayerToServerGuiInventory_Status)(CNWSMessage *, CNWSPlayer *, int32_t, uint32_t);
extern int (*CNWSMessage__SendServerPlayerItemUpdate_DestroyItem)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToAllPlayersCreatureUpdate_StripEquippedItems)(CNWSMessage *, uint32_t, int32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerAIActionPlaySound)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerActivatePortal)(CNWSMessage *, uint32_t, CExoString, CExoString, CExoString, int32_t);
extern int (*CNWSMessage__SendServerToPlayerAmbientBattleMusicChange)(CNWSMessage *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerAmbientBattleMusicPlay)(CNWSMessage *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerAmbientMusicChangeTrack)(CNWSMessage *, uint32_t, int32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerAmbientMusicPlay)(CNWSMessage *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerAmbientMusicSetDelay)(CNWSMessage *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerAmbientSoundLoopChange)(CNWSMessage *, uint32_t, int32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerAmbientSoundLoopPlay)(CNWSMessage *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerAmbientSoundVolumeChange)(CNWSMessage *, uint32_t, int32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerArea_ChangeDayNight)(CNWSMessage *, CNWSPlayer *, int32_t, float);
extern int (*CNWSMessage__SendServerToPlayerArea_ClientArea)(CNWSMessage *, CNWSPlayer *, CNWSArea *, float, float, float, Vector const *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerArea_RecomputeStaticLighting)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerArea_VisualEffect)(CNWSMessage *, CNWSPlayer *, uint16_t, Vector);
extern int (*CNWSMessage__SendServerToPlayerArea_Weather)(CNWSMessage *, CNWSPlayer *, uint8_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerBarterAcceptTrade)(CNWSMessage *, uint32_t, uint32_t, int32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerBarterCloseBarter)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerBarterLockList)(CNWSMessage *, uint32_t, uint32_t, int32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerBarterReject)(CNWSMessage *, uint32_t, uint8_t, uint8_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerBarterStartBarter)(CNWSMessage *, uint32_t, uint32_t, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerCCMessage)(CNWSMessage *, uint32_t, uint8_t, CNWCCMessageData *, CNWSCombatAttackData *);
extern int (*CNWSMessage__SendServerToPlayerCamera_ChangeLocation)(CNWSMessage *, CNWSPlayer *, int32_t, float, float, float, int32_t);
extern int (*CNWSMessage__SendServerToPlayerCamera_LockDistance)(CNWSMessage *, CNWSPlayer *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerCamera_LockPitch)(CNWSMessage *, CNWSPlayer *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerCamera_LockYaw)(CNWSMessage *, CNWSPlayer *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerCamera_Restore)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerCamera_SetHeight)(CNWSMessage *, CNWSPlayer *, float);
extern int (*CNWSMessage__SendServerToPlayerCamera_SetMode)(CNWSMessage *, CNWSPlayer *, uint8_t);
extern int (*CNWSMessage__SendServerToPlayerCamera_Store)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerCharList)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerCharacterDownloadFail)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerCharacterDownloadReply)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerChatMessage)(CNWSMessage *, uint8_t, uint32_t, CExoString, uint32_t, CExoString const *);
extern int (*CNWSMessage__SendServerToPlayerChatMultiLangMessage)(CNWSMessage *, uint8_t, uint32_t, CExoLocString, uint32_t, uint8_t, uint32_t *, uint32_t, int32_t, CResRef const *, int32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerChatMultiLang_Helper)(CNWSMessage *, uint32_t, uint8_t, uint32_t, CExoLocString, uint32_t, uint8_t, int32_t, CResRef const *, int32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerChatStrRefMessage)(CNWSMessage *, uint8_t, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerChatStrRefStatusMessage)(CNWSMessage *, uint8_t, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerChat_DM_Silent_Shout)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerChat_DM_Talk)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerChat_DM_Whisper)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerChat_Party)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerChat_ServerTell)(CNWSMessage *, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerChat_Shout)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerChat_Silent_Shout)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerChat_StrRef)(CNWSMessage *, uint32_t, uint32_t, uint8_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerChat_Talk)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerChat_Tell)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerChat_Whisper)(CNWSMessage *, uint32_t, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerCheatDebugMode)(CNWSMessage *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerCheatNasty)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerCheatPonyRide)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerCheatRainOfCows)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerCloseStoreInventory)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerCombatRoundStarted)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerCutscene_BlackScreen)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerCutscene_FadeFromBlack)(CNWSMessage *, CNWSPlayer *, float);
extern int (*CNWSMessage__SendServerToPlayerCutscene_FadeToBlack)(CNWSMessage *, CNWSPlayer *, float);
extern int (*CNWSMessage__SendServerToPlayerCutscene_HideGui)(CNWSMessage *, CNWSPlayer *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerCutscene_Status)(CNWSMessage *, CNWSPlayer *, int32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerCutscene_StopFade)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerDebugInfo_Area)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDebugInfo_Creature)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDebugInfo_Door)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDebugInfo_Item)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDebugInfo_Placeable)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDebugInfo_Trigger)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDestroyDeathGUI)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDialogClose)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDialogEntry)(CNWSMessage *, uint32_t, uint32_t, uint32_t, CExoLocString, uint32_t, uint8_t);
extern int (*CNWSMessage__SendServerToPlayerDialogReplies)(CNWSMessage *, uint32_t, CExoLocString *, uint32_t *, uint32_t, uint32_t, uint32_t, uint8_t, int32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerDialogReplyChosen)(CNWSMessage *, uint32_t, uint32_t, uint32_t, CExoLocString, uint32_t, uint8_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerDungeonMasterAreaList_1)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerDungeonMasterAreaList_2)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDungeonMasterCreatorLists)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerDungeonMasterObjectList)(CNWSMessage *, CNWSPlayer *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerDungeonMasterSearchByIdResult)(CNWSMessage *, CNWSPlayer *, uint32_t, int32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDungeonMasterSearchByTagResult)(CNWSMessage *, CNWSPlayer *, CExoString const *, int32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDungeonMasterUpdatePartyList_1)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerDungeonMasterUpdatePartyList_2)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerDungeonMastersDifficultyChange)(CNWSMessage *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerExamineGui_CreatureData)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerExamineGui_DoorData)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerExamineGui_ItemData)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerExamineGui_PlaceableData)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerExamineGui_TrapData)(CNWSMessage *, CNWSPlayer *, uint32_t, CNWSCreature *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerGUICharacterSheet_NotPermitted)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerGameObjUpdate_1)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerGameObjUpdate_2)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerGameObjUpdateFloatyText)(CNWSMessage *, CNWSPlayer *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerGameObjUpdateVisEffect)(CNWSMessage *, CNWSPlayer *, uint16_t, uint32_t, uint32_t, uint8_t, uint8_t, Vector, float);
extern int (*CNWSMessage__SendServerToPlayerGameObjUpdate_ObjControl)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerGuiContainerObject_Status)(CNWSMessage *, CNWSPlayer *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerGuiQuickbar_SetButton)(CNWSMessage *, CNWSPlayer *, uint8_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerGuiTimingEvent)(CNWSMessage *, CNWSPlayer *, int32_t, uint8_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_ConfirmDrop)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_Drop)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_DropCancel)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_Equip)(CNWSMessage *, uint32_t, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_EquipCancel)(CNWSMessage *, uint32_t, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_LearnScroll)(CNWSMessage *, uint32_t, uint32_t, uint8_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_Pickup)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_PickupCancel)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_RepositoryMove)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_RepositoryMoveCancel)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_SelectPage)(CNWSMessage *, uint32_t, uint8_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_SelectPanel)(CNWSMessage *, uint32_t, uint8_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_Unequip)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerInventory_UnequipCancel)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerJournalAddQuest)(CNWSMessage *, CNWSPlayer *, CExoString, int32_t, uint32_t, uint16_t, int32_t, uint32_t, uint32_t, CExoLocString, CExoLocString);
extern int (*CNWSMessage__SendServerToPlayerJournalAddWorld)(CNWSMessage *, CNWSPlayer *, int32_t, CExoString, CExoString, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerJournalAddWorldStrref)(CNWSMessage *, CNWSPlayer *, uint32_t, uint32_t, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerJournalDeleteWorld)(CNWSMessage *, CNWSPlayer *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerJournalDeleteWorldAll)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerJournalDeleteWorldStrref)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerJournalFullUpdate)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerJournalFullUpdateNotNeeded)(CNWSMessage *, CNWSPlayer *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerJournalRemoveQuest)(CNWSMessage *, CNWSPlayer *, CExoString);
extern int (*CNWSMessage__SendServerToPlayerJournalSetQuestPicture)(CNWSMessage *, CNWSPlayer *, CExoString, int32_t);
extern int (*CNWSMessage__SendServerToPlayerJournalUpdated)(CNWSMessage *, CNWSPlayer *, int32_t, int32_t, CExoLocString);
extern int (*CNWSMessage__SendServerToPlayerLevelUp_Begin)(CNWSMessage *, uint32_t, CNWSCreature *);
extern int (*CNWSMessage__SendServerToPlayerLevelUp_Confirmation)(CNWSMessage *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerLoadBar_EndStallEvent)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerLoadBar_StartStallEvent)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerLoadBar_UpdateStallEvent)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerLogin_CharacterQuery)(CNWSMessage *, CNWSPlayer *, unsigned char *, int32_t *, unsigned char *, uint32_t *);
extern int (*CNWSMessage__SendServerToPlayerLogin_Confirm)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerLogin_Fail)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerLogin_GetWaypoint)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerLogin_NeedCharacter)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerMapPinAdded)(CNWSMessage *, CNWSPlayer *, Vector, CExoString, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerMapPinCreated)(CNWSMessage *, CNWSPlayer *, uint32_t, Vector, CExoLocString, int32_t);
extern int (*CNWSMessage__SendServerToPlayerMapPinEnabled)(CNWSMessage *, CNWSPlayer *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerMessage)(CNWSMessage *, uint32_t, uint8_t, uint8_t, unsigned char *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerModuleUpdate_Time)(CNWSMessage *, CNWSPlayer *, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerModule_DumpPlayer)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerModule_EndGame)(CNWSMessage *, uint32_t, CExoString const *);
extern int (*CNWSMessage__SendServerToPlayerModule_EndStartNewModule)(CNWSMessage *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerModule_ExportReply)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerModule_Info)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerModule_Loading)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerModule_SaveGameStatus)(CNWSMessage *, uint8_t);
extern int (*CNWSMessage__SendServerToPlayerModule_SetPauseState)(CNWSMessage *, uint8_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerModule_StartStartNewModule)(CNWSMessage *);
extern int (*CNWSMessage__SendServerToPlayerOpenStoreInventory)(CNWSMessage *, CNWSPlayer *, uint32_t, uint8_t);
extern int (*CNWSMessage__SendServerToPlayerPVP_Attitude_Change)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerPartyBar_PanelButtonFlash)(CNWSMessage *, uint32_t, uint8_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerParty_Invite)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerParty_List)(CNWSMessage *, uint32_t, int32_t, uint32_t *, uint8_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerParty_TransferObjectControl)(CNWSMessage *, uint32_t, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerPlaceableUpdate_Useable)(CNWSMessage *, CNWSPlaceable *);
extern int (*CNWSMessage__SendServerToPlayerPlayModuleCharacterListResponse)(CNWSMessage *, uint32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerPlayerList_Add)(CNWSMessage *, uint32_t, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerPlayerList_All)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerPlayerList_Delete)(CNWSMessage *, uint32_t, CNWSPlayer *);
extern int (*CNWSMessage__SendServerToPlayerPlayerList_ReauthorizeCDKey)(CNWSMessage *, uint32_t, CExoString const *, CExoString const *);
extern int (*CNWSMessage__SendServerToPlayerPolymorph)(CNWSMessage *, CNWSPlayer *, uint32_t, int32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerPopUpGUIPanel)(CNWSMessage *, uint32_t, int32_t, int32_t, int32_t, int32_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerQuickChat)(CNWSMessage *, uint32_t, uint32_t, uint16_t);
extern int (*CNWSMessage__SendServerToPlayerQuickChatMessage)(CNWSMessage *, uint32_t, uint16_t);
extern int (*CNWSMessage__SendServerToPlayerSafeProjectile)(CNWSMessage *, CNWSPlayer *, uint32_t, uint32_t, Vector, Vector, uint32_t, uint8_t, uint32_t, uint8_t, uint8_t, uint8_t);
extern int (*CNWSMessage__SendServerToPlayerSaveLoad_Status)(CNWSMessage *, CNWSPlayer *, uint8_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerServerStatus_Status)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerSetCustomToken)(CNWSMessage *, uint32_t, int32_t, CExoString const *);
extern int (*CNWSMessage__SendServerToPlayerSetCustomTokenList)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerShutDownServer)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerSoundObject_ChangePosition)(CNWSMessage *, CNWSPlayer *, uint32_t, Vector);
extern int (*CNWSMessage__SendServerToPlayerSoundObject_ChangeVolume)(CNWSMessage *, CNWSPlayer *, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerSoundObject_Play)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerSoundObject_Stop)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerStoreConfirmTransaction)(CNWSMessage *, CNWSPlayer *, int32_t, uint32_t, int32_t);
extern int (*CNWSMessage__SendServerToPlayerStringMessage)(CNWSMessage *, uint32_t, uint8_t, CExoString);
extern int (*CNWSMessage__SendServerToPlayerUpdateActiveItemProperties)(CNWSMessage *, CNWSPlayer *, CNWSItem *);
extern int (*CNWSMessage__SendServerToPlayerUpdateActiveItemPropertiesUses)(CNWSMessage *, CNWSPlayer *, uint32_t, uint8_t, uint8_t, unsigned char *);
extern int (*CNWSMessage__SendServerToPlayerUpdateBlackoutEffect)(CNWSMessage *, CNWSPlayer *, int32_t);
extern int (*CNWSMessage__SendServerToPlayerUpdateCharResponse)(CNWSMessage *, CNWSPlayer *, uint8_t, CResRef);
extern int (*CNWSMessage__SendServerToPlayerUpdateFogAmount)(CNWSMessage *, uint8_t, uint8_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerUpdateFogColor)(CNWSMessage *, uint32_t, uint32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerUpdateItemName)(CNWSMessage *, CNWSPlayer *, CNWSItem *);
extern int (*CNWSMessage__SendServerToPlayerUpdateSkyBox)(CNWSMessage *, int32_t, uint32_t);
extern int (*CNWSMessage__SendServerToPlayerVoiceChat_Play)(CNWSMessage *, CNWSPlayer *, uint32_t, uint8_t);
extern int (*CNWSMessage__SendServerToPlayerWhirlwindAttack)(CNWSMessage *, CNWSPlayer *, CNWSCreature *);
extern int (*CNWSMessage__SendServerToPlayerWhirlwindAttackDamage)(CNWSMessage *, CNWSPlayer *, CNWSCreature *);
extern int (*CNWSMessage__SendServerToServerAdminBannedList)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToServerAdminMessage)(CNWSMessage *, uint32_t, CExoString);
extern int (*CNWSMessage__SendServerToServerAdminModuleList)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToServerAdminPlayerList)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToServerAdminPortalList)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToServerAdminSaveGameList)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToServerAdminSaveStatus)(CNWSMessage *, uint32_t, uint8_t);
extern int (*CNWSMessage__SendServerToServerAdminServerSettings)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SendServerToServerAdminServerStatus)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__SortObjectsForGameObjectUpdate)(CNWSMessage *, CNWSPlayer *, CNWSObject *, CGameObjectArray *, int32_t *);
extern int (*CNWSMessage__StoreValuesInLastPlayerUpdateObject)(CNWSMessage *, CNWSPlayer *, CNWSPlayerLastUpdateObject *, CLastUpdateObject *, uint16_t);
extern int (*CNWSMessage__StoreValuesInLastUpdateObject)(CNWSMessage *, CNWSPlayer *, CLastUpdateObject *, CNWSObject *, uint32_t, uint32_t);
extern int (*CNWSMessage__StoreValuesInLastUpdatePartyObject)(CNWSMessage *, CNWSCreature *, CLastUpdatePartyObject *, CNWSCreature *, uint32_t);
extern int (*CNWSMessage__TestObjectUpdateDifferences)(CNWSMessage *, CNWSPlayer *, CNWSObject *, CLastUpdateObject **, uint32_t *, uint32_t *);
extern int (*CNWSMessage__TestObjectVisible)(CNWSMessage *, CNWSObject *, CNWSObject *);
extern int (*CNWSMessage__TestPartyObjectUpdateDifferences)(CNWSMessage *, CNWSPlayer *, CNWSCreature *, CLastUpdatePartyObject **, uint32_t *);
extern int (*CNWSMessage__TestPlayerUpdateDifferences)(CNWSMessage *, CNWSPlayer *, CNWSPlayerLastUpdateObject *, CLastUpdateObject *, uint16_t *);
extern int (*CNWSMessage__UpdateLastUpdateActionQueue)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__UpdateLastUpdateAutoMap)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__UpdateLastUpdateInventory)(CNWSMessage *, CNWSPlayer *, uint32_t, CNWSPlayerInventoryGUI *);
extern int (*CNWSMessage__UpdateLastUpdateObject)(CNWSMessage *, CNWSPlayer *, CNWSObject *, CLastUpdateObject *, uint32_t);
extern int (*CNWSMessage__UpdateLastUpdateObjectAppearance)(CNWSMessage *, CNWSObject *, CLastUpdateObject *, uint32_t);
extern int (*CNWSMessage__UpdateLastUpdateVisibilityList)(CNWSMessage *, CNWSCreature *, CNWSPlayerLastUpdateObject *);
extern int (*CNWSMessage__UpdateLastUpdate_GuiEffectIcons)(CNWSMessage *, CNWSCreature *, CExoArrayList_ptr *, int32_t);
extern int (*CNWSMessage__WriteCExoLocStringServer)(CNWSMessage *, CExoLocString *, uint8_t);
extern int (*CNWSMessage__WriteGameObjUpdate_CharacterSheet)(CNWSMessage *, CNWSPlayer *, uint32_t);
extern int (*CNWSMessage__WriteGameObjUpdate_DungeonMasterAIState)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__WriteGameObjUpdate_MajorGUIPanels)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__WriteGameObjUpdate_MajorGUIPanels_HenchmanInventoryData)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__WriteGameObjUpdate_MajorGUIPanels_Inventory)(CNWSMessage *, CNWSPlayer *, CNWSPlayerInventoryGUI *);
extern int (*CNWSMessage__WriteGameObjUpdate_MinorGUIPanels)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__WriteGameObjUpdate_PartyAIState)(CNWSMessage *, CNWSPlayer *);
extern int (*CNWSMessage__WriteGameObjUpdate_PlayerUpdate)(CNWSMessage *, CNWSPlayer *, CNWSPlayerLastUpdateObject *, CLastUpdateObject *, uint16_t);
extern int (*CNWSMessage__WriteGameObjUpdate_UpdateAppearance)(CNWSMessage *, CNWSObject *, CLastUpdateObject *, uint32_t);
extern int (*CNWSMessage__WriteGameObjUpdate_UpdateObject)(CNWSMessage *, CNWSPlayer *, CNWSObject *, CLastUpdateObject *, uint32_t, uint32_t);
extern int (*CNWSMessage__WriteGameObjUpdate_UpdateQuickbarItemUseCount)(CNWSMessage *, CNWSObject *, CLastUpdateObject *);
extern int (*CNWSMessage__WriteGameObjUpdate_WorkRemaining)(CNWSMessage *, CNWSObject *, CNWSArea *, int32_t, int32_t);
extern int (*CNWSMessage__WriteGameObjUpdate_WriteInventorySlotAdd)(CNWSMessage *, CNWSCreature *, CNWSItem *, uint32_t);
extern int (*CNWSMessage__WriteGameObjUpdate_WriteInventorySlotDelete)(CNWSMessage *, CNWSCreature *, uint32_t);
extern int (*CNWSMessage__WriteGameObjUpdate_WriteInventorySlotUpdate)(CNWSMessage *, uint32_t, uint32_t);
extern int (*CNWSMessage__WriteGuiEffectIconsUpdate)(CNWSMessage *, CNWSCreature *, CExoArrayList_ptr *, int32_t);
extern int (*CNWSMessage__WriteOBJECTIDServer)(CNWSMessage *, uint32_t);
extern int (*CNWSMessage__WriteRepositoryUpdate)(CNWSMessage *, CNWSPlayer *, CNWSObject *, CItemRepository *, CNWSPlayerLUOInventory *, uint8_t, int8_t, uint8_t);
extern int (*CNWSMessage__WriteStoreInventoryUpdate)(CNWSMessage *, CNWSPlayer *, CNWSStore *);
extern int (*CNWSModule__AIUpdate)(CNWSModule *);
extern int (*CNWSModule__AddObjectToLimbo)(CNWSModule *, uint32_t);
extern int (*CNWSModule__AddObjectToLookupTable)(CNWSModule *, CExoString, uint32_t);
extern int (*CNWSModule__AddTURDsToWorld)(CNWSModule *);
extern int (*CNWSModule__AddToTURDList)(CNWSModule *, CNWSPlayerTURD *);
extern int (*CNWSModule__AddWorldJournalEntry)(CNWSModule *, int32_t, CExoString, CExoString, uint32_t, uint32_t);
extern int (*CNWSModule__AddWorldJournalEntryStrref)(CNWSModule *, uint32_t, uint32_t, uint32_t, uint32_t);
extern int (*CNWSModule__AsNWSModule)(CNWSModule *);
extern int (*CNWSModule__CleanUpLimboList)(CNWSModule *);
extern int (*CNWSModule__ClearAreaVisitedFlags)(CNWSModule *);
extern int (*CNWSModule__ComputeInterAreaPath)(CNWSModule *, CPathfindInformation *);
extern int (*CNWSModule__DeleteWorldJournalAllEntries)(CNWSModule *);
extern int (*CNWSModule__DeleteWorldJournalEntry)(CNWSModule *, int32_t);
extern int (*CNWSModule__DeleteWorldJournalEntryStrref)(CNWSModule *, uint32_t);
extern int (*CNWSModule__DoUpdate)(CNWSModule *);
extern int (*CNWSModule__EventHandler)(CNWSModule *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSModule__FindObjectByTagOrdinal)(CNWSModule *, CExoString const *, uint32_t);
extern int (*CNWSModule__FindObjectByTagTypeOrdinal)(CNWSModule *, CExoString const *, int32_t, uint32_t);
extern int (*CNWSModule__FindTagPositionInTable)(CNWSModule *, char *);
extern int (*CNWSModule__GenerateInterAreaDFSSuccessors)(CNWSModule *, int32_t, CPathfindInformation *, uint32_t **);
extern int (*CNWSModule__GetArea_1)(CNWSModule *, CResRef);
extern int (*CNWSModule__GetArea_2)(CNWSModule *, uint32_t);
extern CNWSArea *(*CNWSModule__GetAreaByName)(CNWSModule *, CExoString *);
extern CNWSArea *(*CNWSModule__GetAreaByTag)(CNWSModule *, CExoString *);
extern int (*CNWSModule__GetAreaList)(CNWSModule *);
extern int (*CNWSModule__GetCustomScriptEventId)(CNWSModule *);
extern int (*CNWSModule__GetDawnHour)(CNWSModule *);
extern int (*CNWSModule__GetDuskHour)(CNWSModule *);
extern int (*CNWSModule__GetEnableScriptDebugger)(CNWSModule *);
extern int (*CNWSModule__GetFullCipher)(CNWSModule *, CExoString);
extern int (*CNWSModule__GetInvisibleCreaturesList)(CNWSModule *);
extern int (*CNWSModule__GetIsDigitalDistributionDemo)(CNWSModule *);
extern int (*CNWSModule__GetIsNWMFile)(CNWSModule *);
extern int (*CNWSModule__GetIsSaveGame)(CNWSModule *);
extern int (*CNWSModule__GetLastEnter)(CNWSModule *);
extern int (*CNWSModule__GetLastExit)(CNWSModule *);
extern int (*CNWSModule__GetLastItemAcquired)(CNWSModule *);
extern int (*CNWSModule__GetLastItemAcquiredBy)(CNWSModule *);
extern int (*CNWSModule__GetLastItemAcquiredFrom)(CNWSModule *);
extern int (*CNWSModule__GetLastItemAcquiredStackSize)(CNWSModule *);
extern int (*CNWSModule__GetLastItemActivated)(CNWSModule *);
extern int (*CNWSModule__GetLastItemActivatedArea)(CNWSModule *);
extern int (*CNWSModule__GetLastItemActivatedPosition)(CNWSModule *);
extern int (*CNWSModule__GetLastItemActivatedTarget)(CNWSModule *);
extern int (*CNWSModule__GetLastItemActivator)(CNWSModule *);
extern int (*CNWSModule__GetLastItemLoser)(CNWSModule *);
extern int (*CNWSModule__GetLastItemLost)(CNWSModule *);
extern int (*CNWSModule__GetLastItemLostStackSize)(CNWSModule *);
extern int (*CNWSModule__GetLastPCCancelCutscene)(CNWSModule *);
extern int (*CNWSModule__GetLastPCLevellingUp)(CNWSModule *);
extern int (*CNWSModule__GetLastPlayerChatMessage)(CNWSModule *);
extern int (*CNWSModule__GetLastPlayerChatMessageType)(CNWSModule *);
extern int (*CNWSModule__GetLastPlayerChatObject)(CNWSModule *);
extern int (*CNWSModule__GetLastPlayerDied)(CNWSModule *);
extern int (*CNWSModule__GetLastPlayerDying)(CNWSModule *);
extern int (*CNWSModule__GetLastRespawnButtonPresser)(CNWSModule *);
extern int (*CNWSModule__GetLastRestEventType)(CNWSModule *);
extern int (*CNWSModule__GetLastRested)(CNWSModule *);
extern int (*CNWSModule__GetLimboArray)(CNWSModule *);
extern int (*CNWSModule__GetMaxHenchmen)(CNWSModule *);
extern int (*CNWSModule__GetMinutesPerHour)(CNWSModule *);
extern int (*CNWSModule__GetModuleDescription)(CNWSModule *);
extern int (*CNWSModule__GetModuleEntryInfo)(CNWSModule *);
extern int (*CNWSModule__GetModuleName)(CNWSModule *);
extern int (*CNWSModule__GetNWMResName)(CNWSModule *);
extern int (*CNWSModule__GetPCItemLastEquipped)(CNWSModule *);
extern int (*CNWSModule__GetPCItemLastEquippedBy)(CNWSModule *);
extern int (*CNWSModule__GetPCItemLastUnequipped)(CNWSModule *);
extern int (*CNWSModule__GetPCItemLastUnequippedBy)(CNWSModule *);
extern int (*CNWSModule__GetPlayerIndexInPlayerList)(CNWSModule *, CNWSPlayer *);
extern int (*CNWSModule__GetPlayerPathfindRule)(CNWSModule *);
extern int (*CNWSModule__GetPlayerTURDFromList)(CNWSModule *, CNWSPlayer *);
extern int (*CNWSModule__GetPrimaryPlayerIndex)(CNWSModule *);
extern int (*CNWSModule__GetScriptName)(CNWSModule *, int32_t);
extern int (*CNWSModule__GetScriptVarTable)(CNWSModule *);
extern int (*CNWSModule__GetStartMovie)(CNWSModule *);
extern int (*CNWSModule__GetTag)(CNWSModule *);
extern int (*CNWSModule__GetTime)(CNWSModule *, uint32_t *, uint32_t *, uint32_t *, uint32_t *, unsigned char *, uint32_t *);
extern int (*CNWSModule__GetTimeOfDayState)(CNWSModule *);
extern int (*CNWSModule__GetWaypoint)(CNWSModule *, CExoString const *);
extern int (*CNWSModule__GetWorldJournalIndexUnique)(CNWSModule *);
extern int (*CNWSModule__GetXPScale)(CNWSModule *);
extern int (*CNWSModule__InterAreaDFS)(CNWSModule *, int32_t, int32_t, CPathfindInformation *);
extern int (*CNWSModule__IsObjectInLimbo)(CNWSModule *, uint32_t);
extern int (*CNWSModule__IsOfficialCampaign)(CNWSModule *);
extern int (*CNWSModule__LoadLimboCreatures)(CNWSModule *, CResGFF *, CResStruct *, int32_t);
extern int (*CNWSModule__LoadModuleFinish)(CNWSModule *);
extern int (*CNWSModule__LoadModuleInProgress)(CNWSModule *, int32_t, int32_t);
extern int (*CNWSModule__LoadModuleStart)(CNWSModule *, CExoString, int32_t);
extern int (*CNWSModule__LoadTURDList)(CNWSModule *, CResGFF *, CResStruct *);
extern int (*CNWSModule__PackModuleIntoMessage)(CNWSModule *, uint32_t);
extern int (*CNWSModule__PackPlayerCharacterListIntoMessage)(CNWSModule *, CNWSPlayer *, CExoArrayList_ptr *);
extern int (*CNWSModule__PlotInterAreaPath)(CNWSModule *, CPathfindInformation *, uint32_t);
extern int (*CNWSModule__PlotPath)(CNWSModule *, CPathfindInformation *, uint32_t);
extern int (*CNWSModule__PlotPathInArea)(CNWSModule *, CPathfindInformation *, uint32_t);
extern int (*CNWSModule__PostProcess)(CNWSModule *);
extern int (*CNWSModule__RemoveFromTURDList)(CNWSModule *, CNWSPlayer *);
extern int (*CNWSModule__RemoveObjectFromLimbo)(CNWSModule *, uint32_t);
extern int (*CNWSModule__RemoveObjectFromLookupTable)(CNWSModule *, CExoString, uint32_t);
extern int (*CNWSModule__SaveLimboCreatures)(CNWSModule *, CResGFF *, CResStruct *);
extern int (*CNWSModule__SaveModuleFAC)(CNWSModule *, CERFFile *);
extern int (*CNWSModule__SaveModuleFinish)(CNWSModule *, CExoString *, CExoString *);
extern int (*CNWSModule__SaveModuleIFOFinish)(CNWSModule *, CResGFF *, CResStruct *, CERFFile *, CExoString *, CExoArrayList_uint32 *);
extern int (*CNWSModule__SaveModuleIFOStart)(CNWSModule *, CResGFF *, CResStruct *);
extern int (*CNWSModule__SaveModuleInProgress)(CNWSModule *);
extern int (*CNWSModule__SaveModuleStart)(CNWSModule *, CExoString *, CExoString *);
extern int (*CNWSModule__SavePlayers)(CNWSModule *, CResGFF *, CResStruct *, CExoString *, CExoArrayList_uint32 *);
extern int (*CNWSModule__SaveStatic)(CNWSModule *, CERFFile *, CExoString, uint16_t, int32_t);
extern int (*CNWSModule__SaveTURDList)(CNWSModule *, CResGFF *, CResStruct *);
extern int (*CNWSModule__SetCustomScriptEventId)(CNWSModule *, int32_t);
extern int (*CNWSModule__SetEnableScriptDebugger)(CNWSModule *, uint8_t);
extern int (*CNWSModule__SetIntraAreaGoal)(CNWSModule *, CPathfindInformation *);
extern int (*CNWSModule__SetIsNWMFile)(CNWSModule *, int32_t);
extern int (*CNWSModule__SetIsSaveGame)(CNWSModule *, int32_t);
extern int (*CNWSModule__SetLastEnter)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastExit)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemAcquired)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemAcquiredBy)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemAcquiredFrom)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemAcquiredStackSize)(CNWSModule *, int32_t);
extern int (*CNWSModule__SetLastItemActivated)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemActivatedArea)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemActivatedPosition)(CNWSModule *, Vector const *);
extern int (*CNWSModule__SetLastItemActivatedTarget)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemActivator)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemLoser)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemLost)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastItemLostStackSize)(CNWSModule *, int32_t);
extern int (*CNWSModule__SetLastPCCancelCutscene)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastPCLevellingUp)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastPlayerChatMessage)(CNWSModule *, CExoString const *);
extern int (*CNWSModule__SetLastPlayerChatMessageType)(CNWSModule *, uint8_t);
extern int (*CNWSModule__SetLastPlayerChatObject)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastPlayerDied)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastPlayerDying)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastRespawnButtonPresser)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetLastRestEventType)(CNWSModule *, uint8_t);
extern int (*CNWSModule__SetLastRested)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetMaxHenchmen)(CNWSModule *, int32_t);
extern int (*CNWSModule__SetNWMResName)(CNWSModule *, CExoString *);
extern int (*CNWSModule__SetPCItemLastEquipped)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetPCItemLastEquippedBy)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetPCItemLastUnequipped)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetPCItemLastUnequippedBy)(CNWSModule *, uint32_t);
extern int (*CNWSModule__SetPlayerPathfindRule)(CNWSModule *, uint8_t);
extern int (*CNWSModule__SetScriptName)(CNWSModule *, int32_t, CExoString);
extern int (*CNWSModule__SetXPScale)(CNWSModule *, uint8_t);
extern int (*CNWSModule__TimeStopSanityCheck)(CNWSModule *);
extern int (*CNWSModule__UnloadModule)(CNWSModule *);
extern int (*CNWSModule__UpdateTime)(CNWSModule *, uint32_t, uint32_t, uint32_t);
extern int (*CNWSObject__AIActionCloseDoor)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionDialogObject)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionDoCommand)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionGiveItem)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionLockObject)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionOpenDoor)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionPauseDialog)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionPlayAnimation)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionPlaySound)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionResumeDialog)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionSetCommandable)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionSpeak)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionSpeakStrRef)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionTakeItem)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionUnlockObject)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionUseObject)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AIActionWait)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__AddAction)(CNWSObject *, uint32_t, uint16_t, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *);
extern int (*CNWSObject__AddActionAfterFront)(CNWSObject *, uint32_t, uint16_t, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *);
extern int (*CNWSObject__AddActionNodeParameter)(CNWSObject *, CNWSAction *, uint32_t, uint32_t, void *);
extern int (*CNWSObject__AddActionToFront)(CNWSObject *, uint32_t, uint16_t, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *, uint32_t, void *);
extern int (*CNWSObject__AddCloseDoorAction)(CNWSObject *, uint32_t, int32_t);
extern int (*CNWSObject__AddDoCommandAction)(CNWSObject *, void *);
extern int (*CNWSObject__AddEffectTarget)(CNWSObject *, uint32_t);
extern int (*CNWSObject__AddGiveItemActions)(CNWSObject *, uint32_t, uint32_t, int32_t);
extern int (*CNWSObject__AddLockObjectAction)(CNWSObject *, uint32_t);
extern int (*CNWSObject__AddLoopingVisualEffect)(CNWSObject *, uint16_t, uint32_t, uint8_t);
extern int (*CNWSObject__AddMatchedExpressionString)(CNWSObject *, CExoString const *);
extern int (*CNWSObject__AddOpenDoorAction)(CNWSObject *, uint32_t, int32_t);
extern int (*CNWSObject__AddTakeItemActions)(CNWSObject *, uint32_t, uint32_t, int32_t);
extern int (*CNWSObject__AddUnlockObjectAction)(CNWSObject *, uint32_t, uint32_t, int32_t);
extern int (*CNWSObject__AddUseObjectAction)(CNWSObject *, uint32_t);
extern int (*CNWSObject__AnimationStationary)(CNWSObject *, uint16_t);
extern int (*CNWSObject__ApplyEffect)(CNWSObject *, CGameEffect *, int32_t, int32_t);
extern int (*CNWSObject__AsNWSObject)(CNWSObject *);
extern int (*CNWSObject__BroadcastCounterSpellData)(CNWSObject *, CNWSpell *, CNWCCMessageData *);
extern int (*CNWSObject__BroadcastDialog)(CNWSObject *, CExoString, float);
extern int (*CNWSObject__BroadcastFloatyData)(CNWSObject *, CNWCCMessageData *);
extern int (*CNWSObject__BroadcastFloatyDataSTRREF)(CNWSObject *, uint32_t);
extern int (*CNWSObject__BroadcastSafeProjectile)(CNWSObject *, uint32_t, uint32_t, Vector, Vector, uint32_t, uint8_t, uint32_t, uint8_t, uint8_t);
extern int (*CNWSObject__BroadcastSpellData)(CNWSObject *, CNWSpell *, CNWCCMessageData *);
extern int (*CNWSObject__CalculateLastSpellProjectileTime)(CNWSObject *, uint8_t);
extern int (*CNWSObject__CalculateSpellRangedMissTarget)(CNWSObject *, uint32_t, uint32_t);
extern int (*CNWSObject__ClearAction)(CNWSObject *, CNWSAction *, int32_t);
extern int (*CNWSObject__ClearAllActions)(CNWSObject *);
extern int (*CNWSObject__ClearAllPartyInvalidActions)(CNWSObject *);
extern int (*CNWSObject__ClearMatchedExpressionStrings)(CNWSObject *);
extern int (*CNWSObject__ClearSpellEffectsOnOthers)(CNWSObject *);
extern int (*CNWSObject__CopyScriptVars)(CNWSObject *, CNWSScriptVarTable *);
extern int (*CNWSObject__DeleteCurrentAIAction)(CNWSObject *);
extern int (*CNWSObject__DoDamage)(CNWSObject *, int32_t);
extern int (*CNWSObject__DoDamageImmunity)(CNWSObject *, CNWSCreature *, int32_t, uint16_t, int32_t, int32_t);
extern int (*CNWSObject__DoDamageReduction)(CNWSObject *, CNWSCreature *, int32_t, uint8_t, int32_t, int32_t);
extern int (*CNWSObject__DoDamageResistance)(CNWSObject *, CNWSCreature *, int32_t, uint16_t, int32_t, int32_t, int32_t);
extern int (*CNWSObject__DoSpellImmunity)(CNWSObject *, CNWSObject *);
extern int (*CNWSObject__DoSpellLevelAbsorption)(CNWSObject *, CNWSObject *);
extern int (*CNWSObject__GetAILevel)(CNWSObject *);
extern int (*CNWSObject__GetAILock)(CNWSObject *);
extern int (*CNWSObject__GetAIPosList)(CNWSObject *);
extern int (*CNWSObject__GetAIStateReaction)(CNWSObject *, uint32_t);
extern int (*CNWSObject__GetAQActionIDByID)(CNWSObject *, uint16_t, int32_t);
extern int (*CNWSObject__GetAcceptableAction)(CNWSObject *, uint32_t);
extern int (*CNWSObject__GetActionByGroupId)(CNWSObject *, uint16_t, CNWSAction **);
extern int (*CNWSObject__GetAnimation)(CNWSObject *);
extern int (*CNWSObject__GetAnimationSpeed)(CNWSObject *);
extern int (*CNWSObject__GetAppliedEffects)(CNWSObject *);
extern int (*CNWSObject__GetApplyingPostProcessEffects)(CNWSObject *);
extern int (*CNWSObject__GetArea)(CNWSObject *);
extern int (*CNWSObject__GetAreaId)(CNWSObject *);
extern int (*CNWSObject__GetBaseHitPoints)(CNWSObject *);
extern int (*CNWSObject__GetConversationPlayHello)(CNWSObject *);
extern int (*CNWSObject__GetCurrentHitPoints)(CNWSObject *, int32_t);
extern int (*CNWSObject__GetCustomScriptEventId)(CNWSObject *);
extern int (*CNWSObject__GetDamageImmunity)(CNWSObject *, uint8_t);
extern int8_t (*CNWSObject__GetDamageImmunityByFlags)(CNWSObject *, uint16_t);
extern int (*CNWSObject__GetDamageLevel)(CNWSObject *);
extern int (*CNWSObject__GetDead)(CNWSObject *);
extern int (*CNWSObject__GetDialogInterruptable)(CNWSObject *);
extern int (*CNWSObject__GetDialogOwner)(CNWSObject *);
extern int (*CNWSObject__GetDialogPrivate)(CNWSObject *);
extern int (*CNWSObject__GetDialogResref)(CNWSObject *);
extern int (*CNWSObject__GetDialogValid)(CNWSObject *);
extern int (*CNWSObject__GetEffectArrayIndex)(CNWSObject *);
extern int (*CNWSObject__GetEffectSpellId)(CNWSObject *);
extern int (*CNWSObject__GetEffectTargets)(CNWSObject *);
extern int (*CNWSObject__GetExecutingAIAction)(CNWSObject *);
extern int (*CNWSObject__GetExpressionStrings)(CNWSObject *);
extern int (*CNWSObject__GetFirstName)(CNWSObject *);
extern int (*CNWSObject__GetGender)(CNWSObject *);
extern int (*CNWSObject__GetHasFeatEffectApplied)(CNWSObject *, uint16_t);
extern int (*CNWSObject__GetIDByAQActionID)(CNWSObject *, uint16_t);
extern int (*CNWSObject__GetInventoryDisturbItem)(CNWSObject *);
extern int (*CNWSObject__GetInventoryDisturbType)(CNWSObject *);
extern int (*CNWSObject__GetIsDestroyable)(CNWSObject *);
extern int (*CNWSObject__GetIsPCDying)(CNWSObject *);
extern int (*CNWSObject__GetIsRaiseable)(CNWSObject *);
extern int (*CNWSObject__GetKiller)(CNWSObject *);
extern int (*CNWSObject__GetLastAttackMode)(CNWSObject *);
extern int (*CNWSObject__GetLastAttackType)(CNWSObject *);
extern int (*CNWSObject__GetLastAttacker)(CNWSObject *);
extern int (*CNWSObject__GetLastConversationResref)(CNWSObject *);
extern int (*CNWSObject__GetLastDamageAmountByFlags)(CNWSObject *, int32_t);
extern int (*CNWSObject__GetLastDamager)(CNWSObject *);
extern int (*CNWSObject__GetLastDisturbed)(CNWSObject *);
extern int (*CNWSObject__GetLastGroupID)(CNWSObject *);
extern int (*CNWSObject__GetLastHostileActor)(CNWSObject *);
extern int (*CNWSObject__GetLastName)(CNWSObject *);
extern int (*CNWSObject__GetLastSpeaker)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellCast)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellCastAtMe)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellCastAtMeCaster)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellCastAtMeHarmful)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellCastDomainLevel)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellCastFeat)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellCastMetaType)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellCastMulticlass)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellCastSpontaneous)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellId)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellLocationTarget)(CNWSObject *);
extern int (*CNWSObject__GetLastSpellObjectTarget)(CNWSObject *);
extern int (*CNWSObject__GetLastWeaponAttackedWith)(CNWSObject *);
extern int (*CNWSObject__GetListenExpressionObj)(CNWSObject *, int32_t);
extern int (*CNWSObject__GetListenExpressions)(CNWSObject *);
extern int (*CNWSObject__GetLockOrientationToObject)(CNWSObject *);
extern int (*CNWSObject__GetLoopingVisualEffects)(CNWSObject *);
extern int (*CNWSObject__GetMatchedPos)(CNWSObject *);
extern int (*CNWSObject__GetMaxHitPoints)(CNWSObject *, int32_t);
extern int (*CNWSObject__GetMaximumDamageResistanceVsDamageFlag)(CNWSObject *, uint16_t, int32_t *);
extern int (*CNWSObject__GetNearestObjectByName)(CNWSObject *, CExoString const *, float);
extern int (*CNWSObject__GetNewGroupID)(CNWSObject *);
extern int (*CNWSObject__GetNodeById)(CNWSObject *, uint16_t, uint16_t);
extern int (*CNWSObject__GetNumActionGroups)(CNWSObject *);
extern int (*CNWSObject__GetObjectToDialog)(CNWSObject *);
extern int (*CNWSObject__GetOpenDoorAnimationPlayed)(CNWSObject *);
extern int (*CNWSObject__GetOrientation)(CNWSObject *);
extern int (*CNWSObject__GetPendingEffectRemoval)(CNWSObject *);
extern int (*CNWSObject__GetPlotObject)(CNWSObject *);
extern int (*CNWSObject__GetPortrait)(CNWSObject *);
extern int (*CNWSObject__GetPortraitId)(CNWSObject *);
extern int (*CNWSObject__GetPosition)(CNWSObject *);
extern int (*CNWSObject__GetPositionByGroupIndex)(CNWSObject *, int32_t);
extern int (*CNWSObject__GetPrivateConversation)(CNWSObject *);
extern int (*CNWSObject__GetQueuedActionsList)(CNWSObject *);
extern int (*CNWSObject__GetReputation)(CNWSObject *, uint32_t, int32_t *, int32_t);
extern int (*CNWSObject__GetSavingThrowSpellId)(CNWSObject *);
extern int (*CNWSObject__GetScriptLocation)(CNWSObject *);
extern int (*CNWSObject__GetScriptVarTable)(CNWSObject *);
extern int (*CNWSObject__GetSelectableWhenDead)(CNWSObject *);
extern int (*CNWSObject__GetTag)(CNWSObject *);
extern int (*CNWSObject__GetTemplate)(CNWSObject *);
extern int (*CNWSObject__GetTemporaryHitPoints)(CNWSObject *);
extern int (*CNWSObject__HasSpellEffectApplied)(CNWSObject *, uint32_t);
extern int (*CNWSObject__IsAbleToModifyActionQueue)(CNWSObject *);
extern int (*CNWSObject__IsDialogDelay)(CNWSObject *);
extern int (*CNWSObject__IsDialogPaused)(CNWSObject *);
extern int (*CNWSObject__IsListening)(CNWSObject *);
extern int (*CNWSObject__IsPCInDialog)(CNWSObject *);
extern int (*CNWSObject__LoadActionQueue)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__LoadEffectList)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__LoadListenData)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__LoadObjectState)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__LoadVarTable)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__PlaySoundSet)(CNWSObject *, CNWSPlayer *, uint8_t);
extern int (*CNWSObject__RemoveEffect)(CNWSObject *, CGameEffect *);
extern int (*CNWSObject__RemoveEffectByCreator)(CNWSObject *, uint32_t);
extern int (*CNWSObject__RemoveEffectById)(CNWSObject *, uint64_t);
extern int (*CNWSObject__RemoveEffectBySpellId)(CNWSObject *, uint32_t);
extern int (*CNWSObject__RemoveEffectTarget)(CNWSObject *, uint32_t);
extern int (*CNWSObject__RemoveGroup)(CNWSObject *, uint16_t);
extern int (*CNWSObject__RemoveLoopingVisualEffect)(CNWSObject *, uint16_t);
extern int (*CNWSObject__RemoveObjectFromDialog)(CNWSObject *, uint32_t);
extern int (*CNWSObject__RemoveSomeEffectsOfDurationType)(CNWSObject *, uint16_t);
extern int (*CNWSObject__ReplyDialog)(CNWSObject *, uint32_t, uint32_t, int32_t, uint32_t);
extern int (*CNWSObject__ReportOverflow)(CNWSObject *, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSObject__RunActions)(CNWSObject *, uint32_t, uint32_t, uint64_t);
extern int (*CNWSObject__RunDialogOneLiner)(CNWSObject *, CExoString const *, uint32_t);
extern int (*CNWSObject__SaveActionQueue)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__SaveEffectList)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__SaveListenData)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__SaveObjectState)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__SaveVarTable)(CNWSObject *, CResGFF *, CResStruct *);
extern int (*CNWSObject__SendDialogEntry)(CNWSObject *, uint32_t, int32_t);
extern int (*CNWSObject__SendDialogReplies)(CNWSObject *);
extern int (*CNWSObject__SetAILevel)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetAILock)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetAIPosList)(CNWSObject *, CExoLinkedListNode *);
extern int (*CNWSObject__SetAbleToModifyActionQueue)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetAnimation)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetAnimationSpeed)(CNWSObject *, float);
extern int (*CNWSObject__SetApplyingPostProcessEffects)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetArea)(CNWSObject *, CNWSArea *);
extern int (*CNWSObject__SetAreaId)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetBaseHitPoints)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetConversationPlayHello)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetCurrentActionTarget)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetCurrentHitPoints)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetCustomScriptEventId)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetDamageImmunity)(CNWSObject *, uint16_t, int32_t);
extern int (*CNWSObject__SetDialogAnimation)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetDialogDelay)(CNWSObject *, float);
extern int (*CNWSObject__SetDialogOwner)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetDialogPaused)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetEffectArrayIndex)(CNWSObject *, uint16_t);
extern int (*CNWSObject__SetEffectSpellId)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetExecutingAIAction)(CNWSObject *, CNWSAction *);
extern int (*CNWSObject__SetGroupInterruptable)(CNWSObject *, uint16_t, int32_t);
extern int (*CNWSObject__SetInventoryDisturbItem)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetInventoryDisturbType)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetIsDestroyable)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetIsRaiseable)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetKiller)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetLastAnimationTimes)(CNWSObject *, uint32_t, uint32_t);
extern int (*CNWSObject__SetLastAttackMode)(CNWSObject *, uint8_t);
extern int (*CNWSObject__SetLastAttackType)(CNWSObject *, uint16_t);
extern int (*CNWSObject__SetLastAttacker)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetLastConversationResref)(CNWSObject *, CExoString);
extern int (*CNWSObject__SetLastDamageAmount)(CNWSObject *, int32_t, int32_t);
extern int (*CNWSObject__SetLastDamager)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetLastDisturbed)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetLastGroupID)(CNWSObject *, uint16_t);
extern int (*CNWSObject__SetLastHostileActor)(CNWSObject *, uint32_t, int32_t);
extern int (*CNWSObject__SetLastSpeaker)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetLastSpellCast)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetLastSpellCastAtMe)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetLastSpellCastAtMeCaster)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetLastSpellCastAtMeHarmful)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetLastSpellCastDomainLevel)(CNWSObject *, uint8_t);
extern int (*CNWSObject__SetLastSpellCastFeat)(CNWSObject *, uint16_t);
extern int (*CNWSObject__SetLastSpellCastMetaType)(CNWSObject *, uint8_t);
extern int (*CNWSObject__SetLastSpellCastMulticlass)(CNWSObject *, uint8_t);
extern int (*CNWSObject__SetLastSpellCastSpontaneous)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetLastSpellId)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetLastSpellLocationTarget)(CNWSObject *, Vector);
extern int (*CNWSObject__SetLastSpellObjectTarget)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetLastWeaponAttackedWith)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetListenExpression)(CNWSObject *, CExoString, int32_t);
extern int (*CNWSObject__SetListening)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetLockOrientationToObject)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetMatchedPos)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetOpenDoorAnimationPlayed)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetOrientation)(CNWSObject *, Vector);
extern int (*CNWSObject__SetPendingEffectRemoval)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetPlotObject)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetPortrait)(CNWSObject *, CResRef);
extern int (*CNWSObject__SetPortraitId)(CNWSObject *, uint16_t);
extern int (*CNWSObject__SetPosition)(CNWSObject *, Vector, int32_t);
extern int (*CNWSObject__SetPrivateConversation)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetSavingThrowSpellId)(CNWSObject *, uint32_t);
extern int (*CNWSObject__SetSelectableWhenDead)(CNWSObject *, int32_t);
extern int (*CNWSObject__SetStartActionTimer)(CNWSObject *, uint32_t, uint32_t);
extern int (*CNWSObject__SetTag)(CNWSObject *, CExoString);
extern int (*CNWSObject__SetTemplate)(CNWSObject *, CExoString const *);
extern int (*CNWSObject__SetTemporaryHitPoints)(CNWSObject *, int32_t);
extern int (*CNWSObject__SpawnBodyBag)(CNWSObject *);
extern int (*CNWSObject__SpellCastAndImpact)(CNWSObject *, uint32_t, Vector, uint32_t, uint8_t, uint32_t, int32_t, int32_t, uint8_t, int32_t);
extern int (*CNWSObject__StartDialog)(CNWSObject *, uint32_t, CExoString const *, int32_t, int32_t);
extern int (*CNWSObject__StopDialog)(CNWSObject *);
extern int (*CNWSObject__TerminateAISliceAfterAction)(CNWSObject *, uint32_t);
extern int (*CNWSObject__TestActionList)(CNWSObject *);
extern int (*CNWSObject__TestListenExpression)(CNWSObject *, CExoString);
extern int (*CNWSObject__UpdateAttributesOnEffect)(CNWSObject *, CGameEffect *, int32_t);
extern int (*CNWSObject__UpdateDialog)(CNWSObject *);
extern int (*CNWSObject__UpdateEffectList)(CNWSObject *, uint32_t, uint32_t);
extern int (*CNWSObject__UpdateEffectPtrs)(CNWSObject *);
extern int (*CNWSPlaceable__AIActionCastSpell)(CNWSPlaceable *, CNWSAction *);
extern int (*CNWSPlaceable__AIUpdate)(CNWSPlaceable *);
extern int (*CNWSPlaceable__AcquireItem)(CNWSPlaceable *, CNWSItem **, uint32_t, uint8_t, uint8_t, int32_t);
extern int (*CNWSPlaceable__AcquireItemsFromObject)(CNWSPlaceable *, uint32_t, int32_t);
extern int (*CNWSPlaceable__AddCastSpellActions)(CNWSPlaceable *, uint32_t, int32_t, Vector, uint32_t, int32_t, uint8_t);
extern int (*CNWSPlaceable__AddToArea)(CNWSPlaceable *, CNWSArea *, float, float, float, int32_t);
extern int (*CNWSPlaceable__AsNWSPlaceable)(CNWSPlaceable *);
extern int (*CNWSPlaceable__CalculateActionPoints)(CNWSPlaceable *);
extern int (*CNWSPlaceable__CloseInventory)(CNWSPlaceable *, uint32_t, int32_t);
extern int (*CNWSPlaceable__ClosePlaceableForAllPlayers)(CNWSPlaceable *);
extern int (*CNWSPlaceable__DoDamage)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__DropItemsIntoArea)(CNWSPlaceable *);
extern int (*CNWSPlaceable__EventHandler)(CNWSPlaceable *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSPlaceable__GetActive)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetAppearance)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetAutoRemoveKey)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetBaseType)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetBearing)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetBodyBag)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetBodyBagAppearance)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetCloseLockDC)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetCreatureList)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetCurrentItemContainer)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetDescription)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetDescriptionOverride)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetDetectDC)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetDetectable)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetDialogResref)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetDieWhenEmpty)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetDisarmDC)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetDisarmable)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetDisplayName)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetEffectSpellId)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetFactionId)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetFirstName)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetFlagged)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetFortSave)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetHardness)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetHasInventory)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetIsBodyBag)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetIsGroundPile)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetItemContainerArrayIndex)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetItemCount)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__GetItemRepository)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetKeyName)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetKeyRequired)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetKeyRequiredFeedbackMessage)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLastClosed)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLastDefaultClickedBy)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLastDisarmed)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLastLocked)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLastOpened)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLastTriggered)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLastUnlocked)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLastUser)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLightIsOn)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLightStateChange)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLockable)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLocked)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetLootableCreatureId)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetNearestActionPoint)(CNWSPlaceable *, Vector const *);
extern int (*CNWSPlaceable__GetNeverMakeIntoStaticObject)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetOneShot)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetOpenLockDC)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetPickable)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetPortalInfo)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetRecoverable)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetReflexSave)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetRepositoryArrayIndex)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetScriptName)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__GetSittingCreature)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetStaticObject)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetTemplateResRef)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetTrapCreator)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetTrapFaction)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetTrapped)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetType)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetUpdateDisplayName)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetUseable)(CNWSPlaceable *);
extern int (*CNWSPlaceable__GetWillSave)(CNWSPlaceable *);
extern int (*CNWSPlaceable__LoadBodyBag)(CNWSPlaceable *, uint16_t);
extern int (*CNWSPlaceable__LoadFromTemplate)(CNWSPlaceable *, CResRef, CExoString *);
extern int (*CNWSPlaceable__LoadPlaceable)(CNWSPlaceable *, CResGFF *, CResStruct *, CExoString *);
extern int (*CNWSPlaceable__OpenInventory)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__PostProcess)(CNWSPlaceable *);
extern int (*CNWSPlaceable__RemoveFromArea)(CNWSPlaceable *);
extern int (*CNWSPlaceable__RemoveItem)(CNWSPlaceable *, CNWSItem *, int32_t);
extern int (*CNWSPlaceable__SavePlaceable)(CNWSPlaceable *, CResGFF *, CResStruct *);
extern int (*CNWSPlaceable__SetActive)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetAppearance)(CNWSPlaceable *, uint16_t);
extern int (*CNWSPlaceable__SetAutoRemoveKey)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetBaseType)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetBearing)(CNWSPlaceable *, float);
extern int (*CNWSPlaceable__SetBodyBag)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetCloseLockDC)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetCurrentItemContainer)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetDescription)(CNWSPlaceable *, CExoLocString);
extern int (*CNWSPlaceable__SetDescriptionOverride)(CNWSPlaceable *, CExoString);
extern int (*CNWSPlaceable__SetDetectDC)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetDetectable)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetDialogResref)(CNWSPlaceable *, CResRef);
extern int (*CNWSPlaceable__SetDieWhenEmpty)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetDisarmDC)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetDisarmable)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetDisplayName)(CNWSPlaceable *, CExoString);
extern int (*CNWSPlaceable__SetEffectSpellId)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetFactionId)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetFirstName)(CNWSPlaceable *, CExoLocString);
extern int (*CNWSPlaceable__SetFlagged)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetFortSave)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetHardness)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetHasInventory)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetIsBodyBag)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetIsGroundPile)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetItemContainerArrayIndex)(CNWSPlaceable *, uint16_t);
extern int (*CNWSPlaceable__SetKeyName)(CNWSPlaceable *, CExoString const *);
extern int (*CNWSPlaceable__SetKeyRequired)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetKeyRequiredFeedbackMessage)(CNWSPlaceable *, CExoString);
extern int (*CNWSPlaceable__SetLastClosed)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetLastDefaultClickedBy)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetLastDisarmed)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetLastLocked)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetLastOpened)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetLastTriggered)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetLastUnlocked)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetLastUser)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetLightIsOn)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetLightStateChange)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetLockable)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetLocked)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetLootableCreatureId)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetNeverMakeIntoStaticObject)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetOneShot)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetOpenLockDC)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetOrientation)(CNWSPlaceable *, Vector);
extern int (*CNWSPlaceable__SetPickable)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetPortalInfo)(CNWSPlaceable *, CExoString);
extern int (*CNWSPlaceable__SetRecoverable)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetReflexSave)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetRepositoryArrayIndex)(CNWSPlaceable *, uint16_t);
extern int (*CNWSPlaceable__SetScriptName)(CNWSPlaceable *, int32_t, CExoString);
extern int (*CNWSPlaceable__SetSittingCreature)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetStaticObject)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetTemplateResRef)(CNWSPlaceable *, CResRef);
extern int (*CNWSPlaceable__SetTrapCreator)(CNWSPlaceable *, uint32_t);
extern int (*CNWSPlaceable__SetTrapFaction)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetTrapped)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetType)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlaceable__SetUpdateDisplayName)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetUseable)(CNWSPlaceable *, int32_t);
extern int (*CNWSPlaceable__SetWillSave)(CNWSPlaceable *, uint8_t);
extern int (*CNWSPlayer__AddArea)(CNWSPlayer *, uint32_t);
extern int (*CNWSPlayer__AddDMAbilities)(CNWSPlayer *, CNWSCreature *);
extern int (*CNWSPlayer__AllocateAreas)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__AsNWSPlayer)(CNWSPlayer *);
extern int (*CNWSPlayer__BackupServerCharacter)(CNWSPlayer *, CExoString const *);
extern int (*CNWSPlayer__CleanMyTURDs)(CNWSPlayer *);
extern int (*CNWSPlayer__ClearPlayerLastUpdateObject)(CNWSPlayer *);
extern int (*CNWSPlayer__ClearPlayerOnDestroyGame)(CNWSPlayer *);
extern int (*CNWSPlayer__CreateNewPlayerLastUpdateObject)(CNWSPlayer *);
extern int (*CNWSPlayer__DropTURD)(CNWSPlayer *);
extern int (*CNWSPlayer__EatTURD)(CNWSPlayer *, CNWSPlayerTURD *);
extern int (*CNWSPlayer__GetAlwaysRun)(CNWSPlayer *);
extern int (*CNWSPlayer__GetArea)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__GetAreaNum)(CNWSPlayer *);
extern int (*CNWSPlayer__GetAreaTransitionBMP)(CNWSPlayer *);
extern int (*CNWSPlayer__GetAreaTransitionName)(CNWSPlayer *);
extern int (*CNWSPlayer__GetCharSheetGUIInfo)(CNWSPlayer *);
extern int (*CNWSPlayer__GetCharacterInfoFromIFO)(CNWSPlayer *, unsigned char *, int32_t *, unsigned char *, uint32_t *);
extern int (*CNWSPlayer__GetCharacterType)(CNWSPlayer *);
extern int (*CNWSPlayer__GetCommunityNameAuthorized)(CNWSPlayer *);
extern int (*CNWSPlayer__GetContainerGUIInfo)(CNWSPlayer *);
extern int (*CNWSPlayer__GetCutsceneState)(CNWSPlayer *);
extern int (*CNWSPlayer__GetFileName)(CNWSPlayer *);
extern int (*CNWSPlayer__GetFloatyEffects)(CNWSPlayer *);
extern int (*CNWSPlayer__GetFromSaveGame)(CNWSPlayer *);
extern int (*CNWSPlayer__GetFromTURD)(CNWSPlayer *);
extern CGameObject *(*CNWSPlayer__GetGameObject)(CNWSPlayer *);
extern int (*CNWSPlayer__GetIFOCharacterIndex)(CNWSPlayer *);
extern int (*CNWSPlayer__GetInventoryGUIInfo)(CNWSPlayer *);
extern int (*CNWSPlayer__GetIsAllowedToSave)(CNWSPlayer *);
extern int (*CNWSPlayer__GetIsPrimaryPlayer)(CNWSPlayer *);
extern int (*CNWSPlayer__GetJournalQuestInfo)(CNWSPlayer *);
extern int (*CNWSPlayer__GetLastObjectControlled)(CNWSPlayer *);
extern int (*CNWSPlayer__GetLastUpdateObject)(CNWSPlayer *, uint32_t);
extern int (*CNWSPlayer__GetLastUpdatedTime)(CNWSPlayer *);
extern int (*CNWSPlayer__GetLoginState)(CNWSPlayer *);
extern int (*CNWSPlayer__GetModuleInfoSucceeded)(CNWSPlayer *);
extern int (*CNWSPlayer__GetOtherInventoryGUIInfo)(CNWSPlayer *);
extern int (*CNWSPlayer__GetPCObject)(CNWSPlayer *);
extern int (*CNWSPlayer__GetPlayModuleListingCharacters)(CNWSPlayer *);
extern int (*CNWSPlayer__GetPlayerLastUpdateObject)(CNWSPlayer *);
extern int (*CNWSPlayer__GetPlayerListIndex)(CNWSPlayer *);
extern int (*CNWSPlayer__GetPlayerName)(CNWSPlayer *);
extern int (*CNWSPlayer__GetStoreGUIInfo)(CNWSPlayer *);
extern int (*CNWSPlayer__HasExpansionPack)(CNWSPlayer *, uint8_t, int32_t);
extern int (*CNWSPlayer__LoadCharacterFromIFO)(CNWSPlayer *, uint32_t, int32_t, int32_t, int32_t, int32_t);
extern int (*CNWSPlayer__LoadCreatureData)(CNWSPlayer *, CResRef, CNWSCreature *);
extern int (*CNWSPlayer__LoadDMCharacter)(CNWSPlayer *);
extern int (*CNWSPlayer__LoadLocalCharacter)(CNWSPlayer *);
extern int (*CNWSPlayer__LoadServerCharacter)(CNWSPlayer *, CResRef, int32_t);
extern int (*CNWSPlayer__LoadTURDInfoFromIFO)(CNWSPlayer *, uint32_t);
extern int (*CNWSPlayer__PackCreatureIntoMessage)(CNWSPlayer *);
extern int (*CNWSPlayer__PermittedToDisplayCharacterSheet)(CNWSPlayer *, uint32_t);
extern int (*CNWSPlayer__RestoreCameraSettings)(CNWSPlayer *);
extern int (*CNWSPlayer__SaveServerCharacter)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetAlwaysRun)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetAreaTransitionBMP)(CNWSPlayer *, int32_t, CExoString);
extern int (*CNWSPlayer__SetCharacterType)(CNWSPlayer *, uint8_t);
extern int (*CNWSPlayer__SetCommunityNameAuthorized)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetCutsceneState)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetFileName)(CNWSPlayer *, CResRef);
extern int (*CNWSPlayer__SetFloatyEffects)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetFromSaveGame)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetFromTURD)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetGameObject)(CNWSPlayer *, CNWSObject *);
extern int (*CNWSPlayer__SetIFOCharacterIndex)(CNWSPlayer *, uint32_t);
extern int (*CNWSPlayer__SetIsPrimaryPlayer)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetLastObjectControlled)(CNWSPlayer *, uint32_t);
extern int (*CNWSPlayer__SetLastUpdatedTime)(CNWSPlayer *, uint64_t);
extern int (*CNWSPlayer__SetLoginState)(CNWSPlayer *, uint8_t);
extern int (*CNWSPlayer__SetModuleInfoSucceeded)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetPCObject)(CNWSPlayer *, uint32_t);
extern int (*CNWSPlayer__SetPlayModuleListingCharacters)(CNWSPlayer *, int32_t);
extern int (*CNWSPlayer__SetPlayerListIndex)(CNWSPlayer *, uint32_t);
extern int (*CNWSPlayer__StoreCameraSettings)(CNWSPlayer *);
extern int (*CNWSPlayer__StripAllInvalidItemPropertiesInInventory)(CNWSPlayer *, CNWSCreature *);
extern int (*CNWSPlayer__StripAllInvalidItemPropertiesOnItem)(CNWSPlayer *, CNWSItem *);
extern int (*CNWSPlayer__ValidateCharacter)(CNWSPlayer *, int32_t *);
extern int (*CNWSPlayer__ValidateCharacter_SetNormalBonusFlags)(CNWSPlayer *, uint16_t, int32_t *, int32_t *, uint8_t);
extern int (*CNWSScriptVarTable__DeleteIndex)(CNWSScriptVarTable *, CExoString *, uint32_t);
extern int (*CNWSScriptVarTable__DestroyFloat)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__DestroyInt)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__DestroyLocation)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__DestroyObject)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__DestroyString)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__GetFloat)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__GetInt)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__GetLocation)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__GetObject)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__GetString)(CNWSScriptVarTable *, CExoString *);
extern int (*CNWSScriptVarTable__LoadVarTable)(CNWSScriptVarTable *, CResGFF *, CResStruct *);
extern int (*CNWSScriptVarTable__MatchIndex)(CNWSScriptVarTable *, CExoString *, uint32_t, int32_t);
extern int (*CNWSScriptVarTable__SaveVarTable)(CNWSScriptVarTable *, CResGFF *, CResStruct *);
extern int (*CNWSScriptVarTable__SetFloat)(CNWSScriptVarTable *, CExoString *, float);
extern int (*CNWSScriptVarTable__SetInt)(CNWSScriptVarTable *, CExoString *, int32_t, int32_t);
extern int (*CNWSScriptVarTable__SetLocation)(CNWSScriptVarTable *, CExoString *, CScriptLocation);
extern int (*CNWSScriptVarTable__SetObject)(CNWSScriptVarTable *, CExoString *, uint32_t);
extern int (*CNWSScriptVarTable__SetString)(CNWSScriptVarTable *, CExoString *, CExoString *);
extern int (*CNWSSoundObject__AIUpdate)(CNWSSoundObject *);
extern int (*CNWSSoundObject__AddToArea)(CNWSSoundObject *, CNWSArea *, int32_t);
extern int (*CNWSSoundObject__AsNWSSoundObject)(CNWSSoundObject *);
extern int (*CNWSSoundObject__ChangePosition)(CNWSSoundObject *, Vector);
extern int (*CNWSSoundObject__ChangeVolume)(CNWSSoundObject *, int32_t);
extern int (*CNWSSoundObject__EventHandler)(CNWSSoundObject *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSSoundObject__GetContinuous)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetHours)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetInterval)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetIntervalVariance)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetIsActive)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetLooping)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetMaxDistance)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetMinDistance)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetPeopleInSoundRange)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetPitchVariation)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetPositional)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetPriority)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetRandom)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetRandomPosition)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetRandomXRange)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetRandomYRange)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetSoundList)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetTimeofDay)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetVolume)(CNWSSoundObject *);
extern int (*CNWSSoundObject__GetVolumeVariation)(CNWSSoundObject *);
extern int (*CNWSSoundObject__Load)(CNWSSoundObject *, CResGFF *, CResStruct *);
extern int (*CNWSSoundObject__PackIntoMessage)(CNWSSoundObject *, CNWSMessage *);
extern int (*CNWSSoundObject__Play)(CNWSSoundObject *);
extern int (*CNWSSoundObject__RemoveFromArea)(CNWSSoundObject *);
extern int (*CNWSSoundObject__Save)(CNWSSoundObject *, CResGFF *, CResStruct *);
extern int (*CNWSSoundObject__SetContinuous)(CNWSSoundObject *, int32_t);
extern int (*CNWSSoundObject__SetHours)(CNWSSoundObject *, uint32_t);
extern int (*CNWSSoundObject__SetInterval)(CNWSSoundObject *, uint32_t);
extern int (*CNWSSoundObject__SetIntervalVariance)(CNWSSoundObject *, uint32_t);
extern int (*CNWSSoundObject__SetIsActive)(CNWSSoundObject *, int32_t);
extern int (*CNWSSoundObject__SetLooping)(CNWSSoundObject *, int32_t);
extern int (*CNWSSoundObject__SetMaxDistance)(CNWSSoundObject *, float);
extern int (*CNWSSoundObject__SetMinDistance)(CNWSSoundObject *, float);
extern int (*CNWSSoundObject__SetPitchVariation)(CNWSSoundObject *, float);
extern int (*CNWSSoundObject__SetPositional)(CNWSSoundObject *, int32_t);
extern int (*CNWSSoundObject__SetPriority)(CNWSSoundObject *, uint8_t);
extern int (*CNWSSoundObject__SetRandom)(CNWSSoundObject *, int32_t);
extern int (*CNWSSoundObject__SetRandomPosition)(CNWSSoundObject *, int32_t);
extern int (*CNWSSoundObject__SetRandomXRange)(CNWSSoundObject *, float);
extern int (*CNWSSoundObject__SetRandomYRange)(CNWSSoundObject *, float);
extern int (*CNWSSoundObject__SetTimeofDay)(CNWSSoundObject *, CNWSSoundObjectTimeOfDay);
extern int (*CNWSSoundObject__SetVolume)(CNWSSoundObject *, int32_t);
extern int (*CNWSSoundObject__SetVolumeVariation)(CNWSSoundObject *, int32_t);
extern int (*CNWSSoundObject__Stop)(CNWSSoundObject *);
extern int (*CNWSStore__AIUpdate)(CNWSStore *);
extern int (*CNWSStore__AcquireItem)(CNWSStore *, CNWSItem *, int32_t, uint8_t, uint8_t);
extern int (*CNWSStore__AddCustomer)(CNWSStore *, CNWSPlayer *, int8_t, int8_t);
extern int (*CNWSStore__AddGold)(CNWSStore *, int32_t);
extern int (*CNWSStore__AddItemToInventory)(CNWSStore *, CNWSItem **, uint8_t, uint8_t, uint8_t);
extern int (*CNWSStore__AddToArea)(CNWSStore *, CNWSArea *, float, float, float, int32_t);
extern int (*CNWSStore__AsNWSStore)(CNWSStore *);
extern int (*CNWSStore__CalculateItemBuyPrice)(CNWSStore *, CNWSItem *, uint32_t);
extern int (*CNWSStore__CalculateItemSellPrice)(CNWSStore *, CNWSItem *, uint32_t);
extern int (*CNWSStore__EventHandler)(CNWSStore *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSStore__GetAppropriateListId)(CNWSStore *, uint32_t);
extern int (*CNWSStore__GetBlackMarket)(CNWSStore *);
extern int (*CNWSStore__GetBlackMarketMarkDown)(CNWSStore *);
extern int (*CNWSStore__GetCustomer)(CNWSStore *, uint32_t);
extern int (*CNWSStore__GetCustomerBuyRate)(CNWSStore *, uint32_t, int32_t);
extern int (*CNWSStore__GetCustomerSellRate)(CNWSStore *, uint32_t);
extern int (*CNWSStore__GetGold)(CNWSStore *);
extern int (*CNWSStore__GetIdentifyCost)(CNWSStore *);
extern int (*CNWSStore__GetIsRestrictedBuyItem)(CNWSStore *, int32_t);
extern int (*CNWSStore__GetItemInInventory_1)(CNWSStore *, CExoString *);
extern int (*CNWSStore__GetItemInInventory_2)(CNWSStore *, uint32_t);
extern int (*CNWSStore__GetLastClosed)(CNWSStore *);
extern int (*CNWSStore__GetLastOpened)(CNWSStore *);
extern int (*CNWSStore__GetMarkDown)(CNWSStore *);
extern int (*CNWSStore__GetMarkUp)(CNWSStore *);
extern int (*CNWSStore__GetMaxBuyPrice)(CNWSStore *);
extern int (*CNWSStore__GetName)(CNWSStore *);
extern int (*CNWSStore__GetRepository)(CNWSStore *, uint8_t);
extern int (*CNWSStore__GetRepositoryArrayIndex)(CNWSStore *);
extern int (*CNWSStore__GetRepositoryListNumber)(CNWSStore *);
extern int (*CNWSStore__GetScriptName)(CNWSStore *, int32_t);
extern int (*CNWSStore__GetWillNotBuyItem)(CNWSStore *, int32_t);
extern int (*CNWSStore__GetWillNotBuyListSize)(CNWSStore *);
extern int (*CNWSStore__GetWillOnlyBuyItem)(CNWSStore *, int32_t);
extern int (*CNWSStore__GetWillOnlyBuyListSize)(CNWSStore *);
extern int (*CNWSStore__LoadFromTemplate)(CNWSStore *, CResRef, CExoString *);
extern int (*CNWSStore__LoadStore)(CNWSStore *, CResGFF *, CResStruct *, CExoString *);
extern int (*CNWSStore__RemoveCustomer)(CNWSStore *, CNWSPlayer *);
extern int (*CNWSStore__RemoveFromArea)(CNWSStore *);
extern int (*CNWSStore__RemoveGold)(CNWSStore *, int32_t);
extern int (*CNWSStore__RemoveItem)(CNWSStore *, CNWSItem *);
extern int (*CNWSStore__RemoveItemFromInventory)(CNWSStore *, CNWSItem *, uint8_t);
extern int (*CNWSStore__SaveStore)(CNWSStore *, CResGFF *, CResStruct *);
extern int (*CNWSStore__SellItem)(CNWSStore *, CNWSItem *, CNWSCreature *, uint8_t, uint8_t);
extern int (*CNWSStore__SetBlackMarket)(CNWSStore *, int32_t);
extern int (*CNWSStore__SetBlackMarketMarkDown)(CNWSStore *, int32_t);
extern int (*CNWSStore__SetGold)(CNWSStore *, int32_t);
extern int (*CNWSStore__SetIdentifyCost)(CNWSStore *, int32_t);
extern int (*CNWSStore__SetLastClosed)(CNWSStore *, uint32_t);
extern int (*CNWSStore__SetLastOpened)(CNWSStore *, uint32_t);
extern int (*CNWSStore__SetMarkDown)(CNWSStore *, int32_t);
extern int (*CNWSStore__SetMarkUp)(CNWSStore *, int32_t);
extern int (*CNWSStore__SetMaxBuyPrice)(CNWSStore *, int32_t);
extern int (*CNWSStore__SetName)(CNWSStore *, CExoLocString);
extern int (*CNWSStore__SetRepositoryArrayIndex)(CNWSStore *, uint16_t);
extern int (*CNWSStore__SetRepositoryListNumber)(CNWSStore *, uint8_t);
extern int (*CNWSStore__SetScriptName)(CNWSStore *, int32_t, CExoString);
extern int (*CNWSTile__AddDoor)(CNWSTile *, uint32_t);
extern int (*CNWSTile__AddTrigger)(CNWSTile *, uint32_t);
extern int (*CNWSTile__ClearLineOfSight)(CNWSTile *, int32_t, Vector, Vector, Vector *);
extern int (*CNWSTile__ClippedLineSegmentWalkable)(CNWSTile *, float, float, float, float, float *, float *, float *, float *, float *, float *);
extern int (*CNWSTile__ComputeClippedLineSegment)(CNWSTile *, Vector, Vector, Vector *, Vector *);
extern int (*CNWSTile__ComputeHeight)(CNWSTile *, Vector);
extern int (*CNWSTile__FindClosestRegion)(CNWSTile *, float, float);
extern int (*CNWSTile__GetDoorsList)(CNWSTile *);
extern int (*CNWSTile__GetExit)(CNWSTile *, int32_t, float *, float *, int32_t *);
extern int (*CNWSTile__GetExitNumber)(CNWSTile *, float, float);
extern int (*CNWSTile__GetFlaggedAsProblem)(CNWSTile *);
extern int (*CNWSTile__GetHasPlaceableWithWalkMesh)(CNWSTile *);
extern int (*CNWSTile__GetMainLightColorChange)(CNWSTile *);
extern int (*CNWSTile__GetNumTriggers)(CNWSTile *);
extern int (*CNWSTile__GetRegionCoords)(CNWSTile *, int32_t, float *, float *);
extern int (*CNWSTile__GetRegionEntrance)(CNWSTile *, float, float);
extern int (*CNWSTile__GetSourceLightColorChange)(CNWSTile *);
extern int (*CNWSTile__GetSurfaceMaterial)(CNWSTile *, Vector);
extern int (*CNWSTile__GetTileData)(CNWSTile *);
extern int (*CNWSTile__GetTotalExits)(CNWSTile *);
extern int (*CNWSTile__GetTriggerData)(CNWSTile *);
extern int (*CNWSTile__GetWalkMesh)(CNWSTile *);
extern int (*CNWSTile__InTrigger)(CNWSTile *, Vector, CExoArrayList_uint32 *);
extern int (*CNWSTile__IntersectLineSegments)(CNWSTile *, float, float, float, float, float, float, float, float, float *, float *);
extern int (*CNWSTile__LoadWalkMesh)(CNWSTile *);
extern int (*CNWSTile__NoNonWalkPolysOnTile)(CNWSTile *, float, float, float, float, float, float, float);
extern int (*CNWSTile__PlotIntraTilePath)(CNWSTile *, CNWArea *, CPathfindInformation *, float, float, float, float, uint32_t);
extern int (*CNWSTile__RemoveDoor)(CNWSTile *, uint32_t);
extern int (*CNWSTile__SetFlaggedAsProblem)(CNWSTile *);
extern int (*CNWSTile__SetHasPlaceableWithWalkMesh)(CNWSTile *);
extern int (*CNWSTile__SetMainLightColor)(CNWSTile *, uint8_t, uint8_t);
extern int (*CNWSTile__SetMainLightColorChange)(CNWSTile *, int32_t);
extern int (*CNWSTile__SetSourceLightColor)(CNWSTile *, uint8_t, uint8_t);
extern int (*CNWSTile__SetSourceLightColorChange)(CNWSTile *, int32_t);
extern int (*CNWSTile__SetTileData)(CNWSTile *, CNWTileData *);
extern int (*CNWSTrigger__AIUpdate)(CNWSTrigger *);
extern int (*CNWSTrigger__AddToArea)(CNWSTrigger *, CNWSArea *, float, float, float, int32_t);
extern int (*CNWSTrigger__AsNWSTrigger)(CNWSTrigger *);
extern int (*CNWSTrigger__CalculateNearestPoint)(CNWSTrigger *, Vector, Vector *);
extern int (*CNWSTrigger__ComputeBoundingBox)(CNWSTrigger *, float *, float *, float *, float *);
extern int (*CNWSTrigger__CreateNewGeometry_1)(CNWSTrigger *, float, CScriptLocation *, CNWSArea *);
extern int (*CNWSTrigger__CreateNewGeometry_2)(CNWSTrigger *, float, Vector, CNWSArea *);
extern int (*CNWSTrigger__EventHandler)(CNWSTrigger *, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSTrigger__GetActive)(CNWSTrigger *);
extern int (*CNWSTrigger__GetAutoRemoveKey)(CNWSTrigger *);
extern int (*CNWSTrigger__GetBaseType)(CNWSTrigger *);
extern int (*CNWSTrigger__GetCanFireTrapOnObject)(CNWSTrigger *, uint32_t, int32_t);
extern int (*CNWSTrigger__GetClosestPointWithinTrigger)(CNWSTrigger *, Vector, Vector *);
extern int (*CNWSTrigger__GetCreator)(CNWSTrigger *);
extern int (*CNWSTrigger__GetCreatureList)(CNWSTrigger *);
extern int (*CNWSTrigger__GetCursor)(CNWSTrigger *);
extern int (*CNWSTrigger__GetCustomScriptEventId)(CNWSTrigger *);
extern int (*CNWSTrigger__GetDescriptionOverride)(CNWSTrigger *);
extern int (*CNWSTrigger__GetDetectDC)(CNWSTrigger *);
extern int (*CNWSTrigger__GetDetectable)(CNWSTrigger *);
extern int (*CNWSTrigger__GetDisarmDC)(CNWSTrigger *);
extern int (*CNWSTrigger__GetDisarmable)(CNWSTrigger *);
extern int (*CNWSTrigger__GetFacingPosition)(CNWSTrigger *);
extern int (*CNWSTrigger__GetFactionId)(CNWSTrigger *);
extern int (*CNWSTrigger__GetFirstName)(CNWSTrigger *);
extern int (*CNWSTrigger__GetFlagged)(CNWSTrigger *);
extern int (*CNWSTrigger__GetIsAreaTransition)(CNWSTrigger *);
extern int (*CNWSTrigger__GetIsTrap)(CNWSTrigger *);
extern int (*CNWSTrigger__GetKeyName)(CNWSTrigger *);
extern int (*CNWSTrigger__GetLastDisarmed)(CNWSTrigger *);
extern int (*CNWSTrigger__GetLastEntered)(CNWSTrigger *);
extern int (*CNWSTrigger__GetLastLeft)(CNWSTrigger *);
extern int (*CNWSTrigger__GetLinkedFlags)(CNWSTrigger *);
extern int (*CNWSTrigger__GetLinkedTo)(CNWSTrigger *);
extern int (*CNWSTrigger__GetLoadScreenID)(CNWSTrigger *);
extern int (*CNWSTrigger__GetNumVertices)(CNWSTrigger *);
extern int (*CNWSTrigger__GetObjectArrayIndex)(CNWSTrigger *);
extern int (*CNWSTrigger__GetOneShot)(CNWSTrigger *);
extern int (*CNWSTrigger__GetRecoverable)(CNWSTrigger *);
extern int (*CNWSTrigger__GetScriptName)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__GetTargetArea)(CNWSTrigger *);
extern int (*CNWSTrigger__GetTriggerHeight)(CNWSTrigger *);
extern int (*CNWSTrigger__GetVertices)(CNWSTrigger *);
extern int (*CNWSTrigger__InTrigger)(CNWSTrigger *, Vector);
extern int (*CNWSTrigger__LineSegmentIntersectTrigger)(CNWSTrigger *, Vector, Vector);
extern int (*CNWSTrigger__LoadFromTemplate)(CNWSTrigger *, CResRef);
extern int (*CNWSTrigger__LoadTrigger)(CNWSTrigger *, CResGFF *, CResStruct *);
extern int (*CNWSTrigger__OnEnterTrap)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__RemoveFromArea)(CNWSTrigger *);
extern int (*CNWSTrigger__SaveTrigger)(CNWSTrigger *, CResGFF *, CResStruct *);
extern int (*CNWSTrigger__SetActive)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetAutoRemoveKey)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetBaseType)(CNWSTrigger *, uint8_t);
extern int (*CNWSTrigger__SetCreator)(CNWSTrigger *, uint32_t);
extern int (*CNWSTrigger__SetCursor)(CNWSTrigger *, uint8_t);
extern int (*CNWSTrigger__SetCustomScriptEventId)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetDescriptionOverride)(CNWSTrigger *, CExoString);
extern int (*CNWSTrigger__SetDetectDC)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetDetectable)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetDisarmDC)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetDisarmable)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetFactionId)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetFirstName)(CNWSTrigger *, uint32_t);
extern int (*CNWSTrigger__SetFlagged)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetIsAreaTransition)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetIsTrap)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetKeyName)(CNWSTrigger *, CExoString const *);
extern int (*CNWSTrigger__SetLastDisarmed)(CNWSTrigger *, uint32_t);
extern int (*CNWSTrigger__SetLastEntered)(CNWSTrigger *, uint32_t);
extern int (*CNWSTrigger__SetLastLeft)(CNWSTrigger *, uint32_t);
extern int (*CNWSTrigger__SetLinkedFlags)(CNWSTrigger *, uint8_t);
extern int (*CNWSTrigger__SetLinkedTo)(CNWSTrigger *, CExoString);
extern int (*CNWSTrigger__SetObjectArrayIndex)(CNWSTrigger *, uint16_t);
extern int (*CNWSTrigger__SetOneShot)(CNWSTrigger *, uint8_t);
extern int (*CNWSTrigger__SetRecoverable)(CNWSTrigger *, int32_t);
extern int (*CNWSTrigger__SetScriptName)(CNWSTrigger *, int32_t, CExoString);
extern int (*CNWSTrigger__SetTriggerHeight)(CNWSTrigger *, float);
extern int (*CNWSWaypoint__AIUpdate)(CNWSWaypoint **);
extern int (*CNWSWaypoint__AddToArea)(CNWSWaypoint **, CNWSArea *, float, float, float, int32_t);
extern int (*CNWSWaypoint__AsNWSWaypoint)(CNWSWaypoint **);
extern int (*CNWSWaypoint__EventHandler)(CNWSWaypoint **, uint32_t, uint32_t, void *, uint32_t, uint32_t);
extern int (*CNWSWaypoint__GetFirstName)(CNWSWaypoint **);
extern int (*CNWSWaypoint__GetIsMapNote)(CNWSWaypoint **);
extern int (*CNWSWaypoint__GetMapNoteEnabled)(CNWSWaypoint **);
extern int (*CNWSWaypoint__GetMapNoteString)(CNWSWaypoint **);
extern int (*CNWSWaypoint__LoadFromTemplate)(CNWSWaypoint **, CResRef, CExoString *);
extern int (*CNWSWaypoint__LoadWaypoint)(CNWSWaypoint **, CResGFF *, CResStruct *, CExoString *);
extern int (*CNWSWaypoint__RemoveFromArea)(CNWSWaypoint **);
extern int (*CNWSWaypoint__SaveWaypoint)(CNWSWaypoint **, CResGFF *, CResStruct *);
extern int (*CNWSWaypoint__SetIsMapNote)(CNWSWaypoint **, int32_t);
extern int (*CNWSWaypoint__SetMapNoteEnabled)(CNWSWaypoint **, int32_t);
extern int (*CNWSWaypoint__SetMapNoteString)(CNWSWaypoint **, CExoLocString);
extern int (*CNWSkill__GetDescriptionText)(CNWSkill *);
extern int (*CNWSkill__GetNameText)(CNWSkill *);
extern int (*CNWSpell__GetSpellHasSomaticComponent)(CNWSpell *);
extern int (*CNWSpell__GetSpellHasVerbalComponent)(CNWSpell *);
extern int (*CNWSpell__GetSpellLevel)(CNWSpell *, uint8_t);
extern int (*CNWSpell__GetSpellNameText)(CNWSpell *);
extern int (*CNWSpell__GetSubRadialSpell)(CNWSpell *, uint8_t);
extern int (*CNWSpell__SetSubRadialSpell)(CNWSpell *, uint8_t, uint32_t);
extern int (*CNWSpell__SetSubRadialSpellCount)(CNWSpell *, uint8_t);
extern int (*CNWSpellArray__GetSpell)(CNWSpellArray *, int32_t);
extern int (*CNWSpellArray__Load)(CNWSpellArray *);
extern int (*CNWSpellArray__Get)(CNWSpellArray *, int32_t);
extern int (*CNWVirtualMachineCommands__CopyGameDefinedStructure)(CNWVirtualMachineCommands *, int32_t, void *);
extern int (*CNWVirtualMachineCommands__CreateGameDefinedStructure)(CNWVirtualMachineCommands *, int32_t);
extern int (*CNWVirtualMachineCommands__DebugGUIGetMessageFrom)(CNWVirtualMachineCommands *, char **, int32_t *);
extern int (*CNWVirtualMachineCommands__DebugGUISendMessageTo)(CNWVirtualMachineCommands *, char *, int32_t);
extern int (*CNWVirtualMachineCommands__DebugGUIStart)(CNWVirtualMachineCommands *);
extern int (*CNWVirtualMachineCommands__DebugGUIStop)(CNWVirtualMachineCommands *);
extern int (*CNWVirtualMachineCommands__DebugGUIUpdate)(CNWVirtualMachineCommands *);
extern int (*CNWVirtualMachineCommands__DestroyGameDefinedStructure)(CNWVirtualMachineCommands *, int32_t, void *);
extern int (*CNWVirtualMachineCommands__ExecuteCommand)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionCounterSpell)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionDoCommand)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionEquipMostDamagingMelee)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionEquipMostDamagingRanged)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionEquipMostEffectiveArmor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionExamine)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionExchangeItem)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionFollowObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionInteractObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionJumpToObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionJumpToPoint)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionLockActions)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionMoveAwayFromLocation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionPauseConversation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionRandomWalk)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionRest)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionResumeConversation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionSit)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionStartConversation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionUseFeat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionUseSkill)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActionUseTalent)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandActivatePortal)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandAddItemProperty)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandAddJournalQuestEntry)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandAddToParty)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandAdjustAlignment)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandAdjustReputation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandAmbientSound)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandApplyEffectAtPoint)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandApplyEffectOnObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandAssignCommand)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandAssociateAccess)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandAttack)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandBeginConversation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandBlackScreen)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandBootPC)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandCastSpell)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandChangeFaction)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandClearAllActions)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandCloseDoor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandCopyItem)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandCopyItemAndModify)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandCopyObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandCreateItemOnObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandCreateObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandCreateTrapAtLocation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandCreateTrapOnObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDayNightCycle)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDecrementFeatUses)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDecrementSpellUses)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDelayCommand)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDeleteCampaignVariable)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDeleteVar)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDestroyCampaignDatabase)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDestroyObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDistanceConversions)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDoDoorAction)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDoSinglePlayerAutoSave)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDoTouchAttack)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandDoWhirlwindAttack)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectACDecrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectACIncrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectAbilityDecrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectAbilityIncrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectAppear)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectAreaEffect)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectAttackDecrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectAttackIncrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectBeam)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectBlindness)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectComplex)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectConcealment)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectCutsceneGhost)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDamage)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDamageDecrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDamageImmunityDecrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDamageImmunityIncrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDamageIncrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDamageReduction)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDamageResistance)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDamageShield)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDarkness)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDisappear)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDisappearAppear)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectDisease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectEthereal)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectHeal)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectHitPointChangeWhenDying)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectImmunity)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectInvisibility)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectLinkEffects)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectMissChance)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectModifyAttacks)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectMovementSpeedDecrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectMovementSpeedIncrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectNegativeLevel)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectPetrify)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectPoison)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectResurrection)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSanctuary)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSavingThrowDecrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSavingThrowIncrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSeeInvisible)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSkillDecrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSkillIncrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSpellFailure)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSpellImmunity)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSpellLevelAbsorption)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSpellResistanceDecrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSpellResistanceIncrease)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSummonCreature)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectSwarm)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectTemporaryHP)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectTrueSeeing)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectTurnResistance)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectUltravision)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEffectVisualEffect)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEndGame)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEquipItem)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEventActivateItem)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEventConversation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEventSpellCastAt)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandEventUserDefined)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandExecuteScript)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandExploreAreaForPlayer)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandExportAllCharacters)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandExportSingleCharacter)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandFindSubString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandFloatToInt)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandFloatToString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandFloatingText)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandForceRest)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGet2DAString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAC)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAILevel)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAOEObjectCreator)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAbilityModifier)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAbilityScore)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetActionMode)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAge)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAlignment)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAnimalCompanionCreatureType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAnimalCompanionName)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAppearanceType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetArcaneSpellFailure)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetArea)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAreaSize)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAssociate)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAssociateType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAttackTarget)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAttemptedAttackTarget)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetAttemptedSpellTarget)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetBaseAttackBonus)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetBaseItemType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetBattleTrack)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetBlockingDoor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCalendarDay)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCalendarMonth)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCalendarYear)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCampaignFloat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCampaignInt)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCampaignLocation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCampaignString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCampaignVector)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCasterLevel)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetChallengeRating)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetClassInformation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetColor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCommandable)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCreatureBodyPart)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCreatureHasTalent)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCreatureSize)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCreatureTailType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCreatureTalent)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCreatureWingType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCurrentAction)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCutsceneCameraMoveRate)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetCutsceneMode)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetDamageDealtByType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetDayTrack)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetDeity)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetDescription)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetDialogSoundLength)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetDistanceBetween)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetDistanceBetweenLocations)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetDistanceToObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetDroppableFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetEffect)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetEffectCreator)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetEffectDurationType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetEffectSpellId)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetEffectSubType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetEffectType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetEmotions)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetEncounterData)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetEnteringObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFacing)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageGoodEvilAlignment)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageLawChaosAlignment)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageLevel)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageReputation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageXP)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionBestAC)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionEqual)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionGold)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionLeader)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionLeastDamagedMember)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionMember)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionMostDamagedMember)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionMostFrequentClass)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionNthNearestMember)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionStrongestMember)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionWeakestMember)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFactionWorstAC)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFamiliarCreatureType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFamiliarName)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFogAmount)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFogColor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFootstepType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetFortitudeSavingThrow)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetGameDifficulty)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetGoingToBeAttackedBy)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetGold)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetGoldPieceValue)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHardness)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHasFeat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHasFeatEffect)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHasInventory)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHasSkill)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHasSpell)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHasSpellEffect)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHenchman)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHitDice)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetHitpoints)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIdentified)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetImmortal)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetInPersistentObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetInfiniteFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetInventoryDisturbItem)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetInventoryDisturbType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsAreaAboveGround)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsAreaInterior)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsAreaNatural)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsCreatureDisarmable)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsDMPossessed)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsDawn)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsDay)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsDoorActionPossible)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsDusk)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsEncounterCreature)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsImmune)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsInCombat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsInTrigger)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsNight)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsOpen)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsPossessedFamiliar)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsRacialTypePlayable)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsReactionType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsResting)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsSkillSuccessful)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsTalentValid)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsTrapped)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetIsWeaponEffective)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemACValue)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemAppearance)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemCharges)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemCursedFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemHasItemProperty)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemInInventory)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemInSlot)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemPossessedBy)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemPossessor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemProperty)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemPropertyDurationType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemPropertyInfo)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemPropertyType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetItemStackSize)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetJournalQuestExperience)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetKeyRequiredFeedbackMessage)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastAssociateCommand)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastAttackMode)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastAttackType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastAttacker)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastClosedBy)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastDamager)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastDisarmed)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastDisturbed)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastEquipped)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastHostileActor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastKiller)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastLocked)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastOpenedBy)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastPCRested)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastPerceived)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastPerception)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastRestEventType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastSpeaker)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastSpellCastClass)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastTrapDetected)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastUnlocked)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastUsedBy)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLastWeaponUsed)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLeavingObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLocation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLockInfo)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLocked)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetLootable)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetMaster)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetMatchedString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetMatchedStringsCount)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetMatchedStringsNum)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetMaxHenchmen)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetMetaMagicFeat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetModeState)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetModule)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetModuleItemStuff)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetModuleName)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetMovementRate)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetName)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetNearestObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetNearestTrap)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetNightTrack)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetNumStackedItems)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetObjectByTag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetObjectInArea)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetObjectInShape)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetObjectType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetObjectValid)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetObjectVisibility)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPC)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPCChatMessage)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPCChatSpeaker)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPCChatVolume)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPCIPAddress)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPCLevellingUp)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPCPlayerName)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPCPublicCDKey)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPCSpeaker)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPhenoType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPickpocketableFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPlaceableIllumination)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPlotFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPortraitId)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPortraitResRef)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetPosition)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetRacialType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetReflexAdjustedDamage)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetReflexSavingThrow)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetReputation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetResRef)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSittingCreature)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSkillRank)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSkyBox)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSpellCast)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSpellCasterItem)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSpellId)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSpellResistance)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSpellSaveDC)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSpellTargetLoc)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSpellTargetObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStartingPackage)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStolenFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStrByStrRef)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStrRefSoundDuration)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStringLeft)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStringLength)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStringLowerCase)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStringRight)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetStringUpperCase)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSubRace)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetSubString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetTag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetTileLightColor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetTimeHour)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetTimeMillisecond)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetTimeMinute)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetTimeSecond)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetTotalDamageDealt)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetTrapInfo)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetTurnResistanceHD)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetUseableFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetUserDefinedEventNumber)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetVar)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetWaypointByTag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetWaypointByTrigger)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetWeaponRanged)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetWeather)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetWeight)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetWillSavingThrow)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetXP)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGetXPScale)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGiveGoldToCreature)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandGiveXPToCreature)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIncrementRemainingFeatUses)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandInsertString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIntToFloat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIntToHexString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIntToString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIsAIState)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIsDM)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIsEffectValid)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIsInConversation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIsItemPropertyValid)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIsListening)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandIsPC)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandItemActivated)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandItemPropertyEffect)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandLevelUpHenchman)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandLineOfSight)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandLocation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandLocationAccess)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandLockCamera)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandMath)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandModuleAccess)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandMoveAwayFromObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandMoveToObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandMoveToPoint)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandMusicBackground)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandMusicBattle)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandObjectToString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandOpenDoor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandOpenInventory)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandOpenStore)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPersonalReputationAccess)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPickUpItem)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPlayAnimation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPlaySound)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPlaySoundByStrRef)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPopUpGUIPanel)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPrintFloat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPrintInteger)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPrintLogEntry)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPrintObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPrintString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPrintVector)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandPutDownItem)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRandom)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRandomName)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRecomputeStaticLighting)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRemoveEffect)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRemoveFromParty)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRemoveItemProperty)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRemoveJournalQuestEntry)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandResistSpell)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRestoreBaseAttackBonus)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRestoreCameraFacing)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRetrieveCampaignObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandRollDice)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSavingThrow)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSendMessageToAllDMs)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSendMessageToPC)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSendMessageToPCByStrRef)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetAILevel)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetActionMode)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetAreaTransitionBMP)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetAssociateListenPatterns)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetBaseAttackBonus)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCalendar)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCameraHeight)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCameraLocation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCameraMode)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCampaignFloat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCampaignInt)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCampaignLocation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCampaignString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCampaignVector)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetColor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCommandable)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCreatureAppearanceType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCreatureBodyPart)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCreatureTailType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCreatureWingType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCustomToken)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCutsceneCameraMoveRate)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetCutsceneMode)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetDeity)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetDescription)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetDislike)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetDroppableFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetEncounterData)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetFacing)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetFade)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetFogAmount)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetFogColor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetFootstepType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetHardness)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetIdentified)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetImmortal)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetInfiniteFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetIsDestroyable)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetItemCharges)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetItemCursedFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetItemStackSize)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetKeyRequiredFeedbackMessage)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetLike)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetListenString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetListening)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetLockInfo)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetLocked)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetLootable)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetMapPinEnabled)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetMaxHenchmen)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetName)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetPCChatMessage)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetPCChatVolume)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetPanelButtonFlash)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetPhenoType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetPickpocketableFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetPlaceableIllumination)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetPlotFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetPortraitId)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetPortraitResRef)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetSavingThrow)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetSkyBox)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetStolenFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetSubRace)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetSubType)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetTileLightColor)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetTime)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetTrapInfo)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetUseableFlag)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetVar)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetWeather)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetXP)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSetXPScale)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSignalEvent)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSoundObjectPlay)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSoundObjectSetPosition)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSoundObjectSetVolume)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSoundObjectStop)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSpawnScriptDebugger)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSpeakOneLinerConversation)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSpeakStrRef)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSpeakString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandStandardFactionReputationAccess)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandStartNewModule)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandStopFade)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandStoreCameraFacing)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandStoreCampaignObject)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandStoreGet)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandStoreSet)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandStringConversions)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSummonAssociate)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandSurrenderToEnemies)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandTakeGoldFromCreature)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandTalent)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandTalentAccess)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandTestString)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandTimeConversions)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandUnequipItem)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandUnpossessFamiliar)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandVector)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandVectorConversions)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandVectorMagnitude)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandVectorNormalize)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandVersusEffect)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandVoiceChat)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__ExecuteCommandWait)(CNWVirtualMachineCommands *, int32_t, int32_t);
extern int (*CNWVirtualMachineCommands__GetDebuggerLabelName)(CNWVirtualMachineCommands *, int32_t);
extern int (*CNWVirtualMachineCommands__GetEngineStructureWatchView)(CNWVirtualMachineCommands *, int32_t, void *, int32_t *, CExoString **, CExoString **);
extern int (*CNWVirtualMachineCommands__GetEqualGameDefinedStructure)(CNWVirtualMachineCommands *, int32_t, void *, void *);
extern int (*CNWVirtualMachineCommands__GetGameDefinedStructureName)(CNWVirtualMachineCommands *, int32_t);
extern int (*CNWVirtualMachineCommands__GetObjectWatchView)(CNWVirtualMachineCommands *, uint32_t, int32_t *, CExoString **, CExoString **);
extern int (*CNWVirtualMachineCommands__GetTableFromArmorPart)(CNWVirtualMachineCommands *, int32_t);
extern int (*CNWVirtualMachineCommands__InitializeCommands)(CNWVirtualMachineCommands *);
extern int (*CNWVirtualMachineCommands__LoadGameDefinedStructure)(CNWVirtualMachineCommands *, int32_t, void **, CResGFF *, CResStruct *);
extern int (*CNWVirtualMachineCommands__ReportError)(CNWVirtualMachineCommands *, CExoString *, int32_t);
extern int (*CNWVirtualMachineCommands__RunScriptCallback)(CNWVirtualMachineCommands *, CExoString *);
extern int (*CNWVirtualMachineCommands__SaveGameDefinedStructure)(CNWVirtualMachineCommands *, int32_t, void *, CResGFF *, CResStruct *);
extern int (*CObjectLookupTable__AddID)(CObjectLookupTable *, uint32_t);
extern int (*CObjectLookupTable__GetIDFromIndex)(CObjectLookupTable *, uint32_t);
extern int (*CObjectLookupTable__GetIndexFromID)(CObjectLookupTable *, uint32_t);
extern int (*CObjectLookupTable__GetUpdate)(CObjectLookupTable *, void *, uint32_t *);
extern int (*CObjectLookupTable__Touch)(CObjectLookupTable *, uint32_t);
extern int (*CObjectLookupTable__Update)(CObjectLookupTable *, void *, uint32_t);
extern int (*CObjectTableManager__AddID)(CObjectTableManager *, uint32_t, uint32_t *, uint32_t);
extern int (*CObjectTableManager__ClearAll)(CObjectTableManager *);
extern int (*CObjectTableManager__CreateNewPlayer)(CObjectTableManager *, uint32_t);
extern int (*CObjectTableManager__GetIDFromIndex)(CObjectTableManager *, uint32_t, uint32_t);
extern int (*CObjectTableManager__GetIndexFromID)(CObjectTableManager *, uint32_t, uint32_t);
extern int (*CObjectTableManager__RemovePlayer)(CObjectTableManager *, uint32_t);
extern int (*CObjectTableManager__Touch)(CObjectTableManager *, uint32_t, uint32_t);
extern int (*CScriptEvent__CopyScriptEvent)(CScriptEvent *, CScriptEvent *);
extern int (*CScriptEvent__GetFloat)(CScriptEvent *, int32_t);
extern int (*CScriptEvent__GetInteger)(CScriptEvent *, int32_t);
extern int (*CScriptEvent__GetObjectID)(CScriptEvent *, int32_t);
extern int (*CScriptEvent__GetString)(CScriptEvent *, int32_t);
extern int (*CScriptEvent__LoadEvent)(CScriptEvent *, CResGFF *, CResStruct *);
extern int (*CScriptEvent__SaveEvent)(CScriptEvent *, CResGFF *, CResStruct *);
extern int (*CScriptEvent__SetFloat)(CScriptEvent *, int32_t, float);
extern int (*CScriptEvent__SetInteger)(CScriptEvent *, int32_t, int32_t);
extern int (*CScriptEvent__SetObjectID)(CScriptEvent *, int32_t, uint32_t);
extern int (*CScriptEvent__SetString)(CScriptEvent *, int32_t, CExoString);
extern int (*CScriptEvent__op_ne)(CScriptEvent *, CScriptEvent const *);
extern int (*CScriptEvent__op_eq)(CScriptEvent *, CScriptEvent const *);
extern int (*CServerAIMaster__AddEventAbsoluteTime)(CServerAIMaster *, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, void *);
extern int (*CServerAIMaster__AddEventAbsoluteTimeViaTail)(CServerAIMaster *, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, void *);
extern int (*CServerAIMaster__AddEventDeltaTime)(CServerAIMaster *, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, void *);
extern int (*CServerAIMaster__AddObject)(CServerAIMaster *, CNWSObject *, int32_t);
extern int (*CServerAIMaster__AdjustTargetAndWitnessReputations)(CServerAIMaster *, uint32_t, uint32_t, int32_t);
extern int (*CServerAIMaster__ClearEventQueue)(CServerAIMaster *);
extern int (*CServerAIMaster__DeleteEventData)(CServerAIMaster *, uint32_t, void *);
extern int (*CServerAIMaster__EventPending)(CServerAIMaster *, uint32_t, uint32_t);
extern int (*CServerAIMaster__GetPendingEvent)(CServerAIMaster *, uint32_t *, uint32_t *, uint32_t *, uint32_t *, uint32_t *, void **);
extern int (*CServerAIMaster__LoadEventQueue)(CServerAIMaster *, CResGFF *, CResStruct *);
extern int (*CServerAIMaster__LoadReputationAdjustments)(CServerAIMaster *);
extern int (*CServerAIMaster__OnEffectApplied)(CServerAIMaster *, CNWSObject *, CGameEffect *, int32_t);
extern int (*CServerAIMaster__OnEffectRemoved)(CServerAIMaster *, CNWSObject *, CGameEffect *);
extern int (*CServerAIMaster__OnItemPropertyApplied)(CServerAIMaster *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t, int32_t);
extern int (*CServerAIMaster__OnItemPropertyRemoved)(CServerAIMaster *, CNWSItem *, CNWItemProperty *, CNWSCreature *, uint32_t);
extern int (*CServerAIMaster__RemoveObject)(CServerAIMaster *, CNWSObject *);
extern int (*CServerAIMaster__SaveEventQueue)(CServerAIMaster *, CResGFF *, CResStruct *);
extern int (*CServerAIMaster__SetAILevel)(CServerAIMaster *, CNWSObject *, int32_t);
extern int (*CServerAIMaster__SetExoAppInternal)(CServerAIMaster *, CServerExoAppInternal *);
extern int (*CServerAIMaster__UpdateState)(CServerAIMaster *);
extern int (*CServerExoApp__AddCDKeyToBannedList)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__AddCharListRequest)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__AddIPToBannedList)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__AddPlayerNameToBannedList)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__AddSubNetProfileSendSize)(CServerExoApp *, uint32_t, uint32_t);
extern int (*CServerExoApp__AddToExclusionList)(CServerExoApp *, uint32_t, uint8_t);
extern int (*CServerExoApp__AdmitNetworkAddress)(CServerExoApp *, uint32_t, CExoString);
extern int (*CServerExoApp__AdmitPlayerName)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__ContinueMessageProcessing)(CServerExoApp *);
extern int (*CServerExoApp__ExportAllPlayers)(CServerExoApp *);
extern int (*CServerExoApp__GSClientAddServer)(CServerExoApp *, void *, char *, char *, int32_t, int32_t, int32_t, int32_t, char *, int32_t, int32_t, char *, int32_t, int32_t, int32_t, char *, char *, int32_t, int32_t, int32_t, int32_t, int32_t, bool);
extern int (*CServerExoApp__GSClientChatMessage)(CServerExoApp *, int32_t, CExoString, CExoString);
extern int (*CServerExoApp__GSClientClearServers)(CServerExoApp *);
extern int (*CServerExoApp__GSClientGroupRoomAdded)(CServerExoApp *, int32_t, uint32_t);
extern int (*CServerExoApp__GSClientRemoveServer)(CServerExoApp *, void *);
extern int (*CServerExoApp__GSClientUpdateConnectionPhase)(CServerExoApp *, uint8_t, CExoString const *);
extern int (*CServerExoApp__GSClientUpdateServer)(CServerExoApp *, void *, char *, char *, int32_t, int32_t, int32_t, int32_t, char *, int32_t, int32_t, char *, int32_t, int32_t, int32_t, char *, char *, int32_t, int32_t, int32_t, int32_t, int32_t, bool);
extern int (*CServerExoApp__GetActiveExclusionList)(CServerExoApp *);
extern int (*CServerExoApp__GetActivePauseState)(CServerExoApp *);
extern int (*CServerExoApp__GetActiveTimer)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetApplicationId)(CServerExoApp *);
extern CNWSArea *(*CServerExoApp__GetAreaByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetAreaOfEffectByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetAutoSavePending)(CServerExoApp *);
extern int (*CServerExoApp__GetBannedListString)(CServerExoApp *);
extern CNWSPlayer *(*CServerExoApp__GetClientObjectByObjectId)(CServerExoApp *, uint32_t);
extern CNWSPlayer *(*CServerExoApp__GetClientObjectByPlayerId)(CServerExoApp *, uint32_t, uint8_t);
extern int (*CServerExoApp__GetCodeBase)(CServerExoApp *);
extern int (*CServerExoApp__GetConnectionLib)(CServerExoApp *);
extern int (*CServerExoApp__GetCreatureByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetDebugMode)(CServerExoApp *);
extern int (*CServerExoApp__GetDifficultyOption)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__GetDoorByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetEncounterByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetExoAppInternal)(CServerExoApp *);
extern int (*CServerExoApp__GetExportCharacterPending)(CServerExoApp *);
extern int (*CServerExoApp__GetExportPlayersCharacter)(CServerExoApp *);
extern int (*CServerExoApp__GetExtendedServerInfo_1)(CServerExoApp *, CExtendedServerInfo *);
extern int (*CServerExoApp__GetExtendedServerInfo_2)(CServerExoApp *);
extern int (*CServerExoApp__GetFPS)(CServerExoApp *);
extern int (*CServerExoApp__GetFactionOfObject)(CServerExoApp *, uint32_t, int32_t *);
extern int (*CServerExoApp__GetFirstPCObject)(CServerExoApp *);
extern CGameObject *(*CServerExoApp__GetGameObject)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetGameSpyEnabled)(CServerExoApp *);
extern int (*CServerExoApp__GetImportingChar)(CServerExoApp *);
extern int (*CServerExoApp__GetIsCDKeyOnBannedList)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__GetIsControlledByPlayer)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetIsIPOnBannedList)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__GetIsMultiPlayer)(CServerExoApp *);
extern int (*CServerExoApp__GetIsPlayerNameOnBannedList)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__GetItemByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetLoadingModule)(CServerExoApp *);
extern CNWSModule *(*CServerExoApp__GetModule)(CServerExoApp *);
extern CNWSModule *(*CServerExoApp__GetModuleByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetModuleDescription)(CServerExoApp *);
extern int (*CServerExoApp__GetModuleLanguage)(CServerExoApp *);
extern int (*CServerExoApp__GetModuleName)(CServerExoApp *);
extern int (*CServerExoApp__GetMoveToModulePending)(CServerExoApp *);
extern int (*CServerExoApp__GetMoveToModuleString)(CServerExoApp *);
extern int (*CServerExoApp__GetMultiplayerEnabled)(CServerExoApp *);
extern int (*CServerExoApp__GetNWSMessage)(CServerExoApp *);
extern int (*CServerExoApp__GetNetLayer)(CServerExoApp *);
extern int (*CServerExoApp__GetNextPCObject)(CServerExoApp *);
extern int (*CServerExoApp__GetObjectArray)(CServerExoApp *);
extern int (*CServerExoApp__GetPauseState)(CServerExoApp *, uint8_t);
extern int (*CServerExoApp__GetPauseTimer)(CServerExoApp *);
extern int (*CServerExoApp__GetPlaceMeshManager)(CServerExoApp *);
extern int (*CServerExoApp__GetPlaceableByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetPlayerAddressData)(CServerExoApp *, uint32_t, uint32_t *, unsigned char **, unsigned char **, uint32_t *);
extern int (*CServerExoApp__GetPlayerIDByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetPlayerLanguage)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetPlayerList)(CServerExoApp *);
extern int (*CServerExoApp__GetPlayerListString)(CServerExoApp *);
extern int (*CServerExoApp__GetPortalListString)(CServerExoApp *);
extern int (*CServerExoApp__GetReloadModuleWhenEmpty)(CServerExoApp *);
extern int (*CServerExoApp__GetServerAIMaster)(CServerExoApp *);
extern int (*CServerExoApp__GetServerInfo)(CServerExoApp *);
extern int (*CServerExoApp__GetServerMode)(CServerExoApp *);
extern int (*CServerExoApp__GetSoundObjectByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetStoreByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetSysAdminList)(CServerExoApp *);
extern int (*CServerExoApp__GetTimestopTimer)(CServerExoApp *);
extern int (*CServerExoApp__GetTriggerByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetWaypointByGameObjectID)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__GetWorldTimer)(CServerExoApp *);
extern int (*CServerExoApp__HandleGameSpyToServerMessage)(CServerExoApp *, int32_t, void *, int32_t);
extern int (*CServerExoApp__HandleMessage)(CServerExoApp *, uint32_t, unsigned char *, uint32_t, int32_t);
extern int (*CServerExoApp__Initialize)(CServerExoApp *);
extern int (*CServerExoApp__InitiateModuleForPlayer)(CServerExoApp *, void *);
extern int (*CServerExoApp__IsOnActiveExclusionList)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__IsOnExclusionList)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__LoadCharacterFinish)(CServerExoApp *, CNWSPlayer *, int32_t, int32_t);
extern int (*CServerExoApp__LoadCharacterStart)(CServerExoApp *, uint8_t, CNWSPlayer *, CResRef, void *, uint32_t);
extern int (*CServerExoApp__LoadGame)(CServerExoApp *, uint32_t, CExoString *, CExoString *, CNWSPlayer *);
extern int (*CServerExoApp__LoadModule)(CServerExoApp *, CExoString, int32_t, CNWSPlayer *);
extern int (*CServerExoApp__LoadPrimaryPlayer)(CServerExoApp *, CNWSPlayer *);
extern int (*CServerExoApp__MainLoop)(CServerExoApp *);
extern int (*CServerExoApp__MovePlayerToArea)(CServerExoApp *, void *);
extern int (*CServerExoApp__OnCDChange)(CServerExoApp *);
extern int (*CServerExoApp__OnExit)(CServerExoApp *);
extern int (*CServerExoApp__OnGainFocus)(CServerExoApp *);
extern int (*CServerExoApp__OnLostFocus)(CServerExoApp *);
extern int (*CServerExoApp__OnVideoChange)(CServerExoApp *);
extern int (*CServerExoApp__PlayerListChange)(CServerExoApp *, uint32_t, int32_t, int32_t);
extern int (*CServerExoApp__PushMessageOverWall)(CServerExoApp *, unsigned char *, uint32_t);
extern int (*CServerExoApp__RemoveCDKeyFromBannedList)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__RemoveFromExclusionList)(CServerExoApp *, uint32_t, uint8_t);
extern int (*CServerExoApp__RemoveIPFromBannedList)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__RemovePCFromWorld)(CServerExoApp *, CNWSPlayer *);
extern int (*CServerExoApp__RemovePlayerNameFromBannedList)(CServerExoApp *, CExoString);
extern int (*CServerExoApp__ResolvePlayerByFirstName)(CServerExoApp *, CExoString const *);
extern int (*CServerExoApp__RestartNetLayer)(CServerExoApp *);
extern int (*CServerExoApp__RunModule)(CServerExoApp *);
extern int (*CServerExoApp__SaveGame)(CServerExoApp *, uint32_t, CExoString *, CExoString *, CNWSPlayer *, int32_t, CExoString *);
extern int (*CServerExoApp__SendCharacterQuery)(CServerExoApp *, CNWSPlayer *);
extern int (*CServerExoApp__SetApplicationIdsMatch)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetAutoSavePending)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetDebugMode)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetEndGamePending)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetEndGameString)(CServerExoApp *, CExoString *);
extern int (*CServerExoApp__SetExportCharacterPending)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetExportPlayersCharacter)(CServerExoApp *, uint32_t);
extern int (*CServerExoApp__SetForceUpdate)(CServerExoApp *);
extern int (*CServerExoApp__SetGameSpyEnabled)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetGameSpyReporting)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetImportingChar)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetLoadingModule)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetMoveToModulePending)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetMoveToModuleString)(CServerExoApp *, CExoString *);
extern int (*CServerExoApp__SetNetworkAddressBan)(CServerExoApp *, uint32_t, CExoString, int32_t);
extern int (*CServerExoApp__SetPauseState)(CServerExoApp *, uint8_t, int32_t);
extern int (*CServerExoApp__SetReloadModuleWhenEmpty)(CServerExoApp *, int32_t);
extern int (*CServerExoApp__SetWeGotDisconnected)(CServerExoApp *);
extern int (*CServerExoApp__ShutDownToMainMenu)(CServerExoApp *);
extern int (*CServerExoApp__Shutdown)(CServerExoApp *, int32_t, int32_t);
extern int (*CServerExoApp__ShutdownNetLayer)(CServerExoApp *);
extern int (*CServerExoApp__StartNewModule)(CServerExoApp *, CExoString *);
extern int (*CServerExoApp__StartServices)(CServerExoApp *);
extern int (*CServerExoApp__StopServices)(CServerExoApp *);
extern int (*CServerExoApp__StripColorTokens)(CServerExoApp *, CExoString *);
extern int (*CServerExoApp__TogglePauseState)(CServerExoApp *, uint8_t);
extern int (*CServerExoApp__Uninitialize)(CServerExoApp *);
extern int (*CServerExoApp__UnloadModule)(CServerExoApp *);
extern int (*CServerExoApp__ValidatePlayerLogin)(CServerExoApp *, void *);
extern int (*CServerExoApp__VomitServerOptionsToLog)(CServerExoApp *);
extern int (*CServerExoAppInternal__AddCDKeyToBannedList)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__AddCharListRequest)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__AddIPToBannedList)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__AddPendingAuthorization)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__AddPlayerNameToBannedList)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__AddSubNetProfile)(CServerExoAppInternal *, uint32_t, CExoString, CExoString);
extern int (*CServerExoAppInternal__AddSubNetProfileRecvSize)(CServerExoAppInternal *, uint32_t, uint32_t);
extern int (*CServerExoAppInternal__AddSubNetProfileSendSize)(CServerExoAppInternal *, uint32_t, uint32_t);
extern int (*CServerExoAppInternal__AddToExclusionList)(CServerExoAppInternal *, uint32_t, unsigned char);
extern int (*CServerExoAppInternal__AdmitNetworkAddress)(CServerExoAppInternal *, uint32_t, CExoString *);
extern int (*CServerExoAppInternal__AdmitPlayerName)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__CheckMasterServerTranslation)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__ConnectionLibMainLoop)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__ContinueMessageProcessing)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__CopyModuleToCurrentGame)(CServerExoAppInternal *, CExoString *, CExoString *, uint16_t);
extern int (*CServerExoAppInternal__CreateServerVaultLostAndFound)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__DealWithLoadGameError)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__EndGame)(CServerExoAppInternal *, CExoString const *);
extern int (*CServerExoAppInternal__ExportAllPlayers)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__ExportPlayer)(CServerExoAppInternal *, CNWSPlayer *);
extern int (*CServerExoAppInternal__GetActiveExclusionList)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__GetActivePauseState)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__GetActiveTimer)(CServerExoAppInternal *, uint32_t);
extern CNWSArea *(*CServerExoAppInternal__GetAreaByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetAreaOfEffectByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetBannedListString)(CServerExoAppInternal *);
extern CNWSPlayer *(*CServerExoAppInternal__GetClientObjectByObjectId)(CServerExoAppInternal *, uint32_t);
extern CNWSPlayer *(*CServerExoAppInternal__GetClientObjectByPlayerId)(CServerExoAppInternal *, uint32_t, unsigned char);
extern int (*CServerExoAppInternal__GetCreatureByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetDifficultyOption)(CServerExoAppInternal *, int32_t);
extern int (*CServerExoAppInternal__GetDoorByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetEncounterByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetExtendedServerInfo)(CServerExoAppInternal *, CExtendedServerInfo *);
extern int (*CServerExoAppInternal__GetFactionOfObject)(CServerExoAppInternal *, uint32_t, int32_t *);
extern int (*CServerExoAppInternal__GetFirstPCObject)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__GetGameObject)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetIsCDKeyOnBannedList)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__GetIsIPOnBannedList)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__GetIsPlayerNameOnBannedList)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__GetItemByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern CNWSModule *(*CServerExoAppInternal__GetModule)(CServerExoAppInternal *);
extern CNWSModule *(*CServerExoAppInternal__GetModuleByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetModuleExists)(CServerExoAppInternal *, CExoString const *);
extern int (*CServerExoAppInternal__GetModuleLanguage)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__GetModuleName)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__GetNextPCObject)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__GetPauseState)(CServerExoAppInternal *, unsigned char);
extern int (*CServerExoAppInternal__GetPlaceableByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetPlayerAddressData)(CServerExoAppInternal *, uint32_t, uint32_t *, unsigned char **, unsigned char **, uint32_t *);
extern int (*CServerExoAppInternal__GetPlayerIDByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetPlayerLanguage)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetPlayerListString)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__GetPortalListString)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__GetServerInfoFromIniFile)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__GetSoundObjectByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetStoreByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetTriggerByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__GetWaypointByGameObjectID)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__HandleGameSpyToServerMessage)(CServerExoAppInternal *, int32_t, void *, int32_t);
extern int (*CServerExoAppInternal__HandleMessage)(CServerExoAppInternal *, uint32_t, unsigned char *, uint32_t, int32_t);
extern int (*CServerExoAppInternal__Initialize)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__InitializeNetLayer)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__InitiateModuleForPlayer)(CServerExoAppInternal *, void *);
extern int (*CServerExoAppInternal__IsOnActiveExclusionList)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__IsOnExclusionList)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__LoadCharacterFinish)(CServerExoAppInternal *, CNWSPlayer *, int32_t, int32_t);
extern int (*CServerExoAppInternal__LoadCharacterStart)(CServerExoAppInternal *, unsigned char, CNWSPlayer *, CResRef, void *, uint32_t);
extern int (*CServerExoAppInternal__LoadGame)(CServerExoAppInternal *, uint32_t, CExoString *, CExoString *, CNWSPlayer *);
extern int (*CServerExoAppInternal__LoadModule)(CServerExoAppInternal *, CExoString, int32_t, CNWSPlayer *);
extern int (*CServerExoAppInternal__LoadPrimaryPlayer)(CServerExoAppInternal *, CNWSPlayer *);
extern int (*CServerExoAppInternal__MainLoop)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__MarkUpdateClientsForObject)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__MovePlayerToArea)(CServerExoAppInternal *, void *);
extern int (*CServerExoAppInternal__OnCDChange)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__OnExit)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__OnGainFocus)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__OnLostFocus)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__OnVideoChange)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__PlayerListChange)(CServerExoAppInternal *, uint32_t, int32_t, int32_t);
extern int (*CServerExoAppInternal__PushMessageOverWall)(CServerExoAppInternal *, unsigned char *, uint32_t);
extern int (*CServerExoAppInternal__ReadBannedLists)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__RemoveCDKeyFromBannedList)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__RemoveFromExclusionList)(CServerExoAppInternal *, uint32_t, unsigned char);
extern int (*CServerExoAppInternal__RemoveIPFromBannedList)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__RemovePCFromWorld)(CServerExoAppInternal *, CNWSPlayer *);
extern int (*CServerExoAppInternal__RemovePendingAuthorization)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__RemovePlayerNameFromBannedList)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__RemoveSubNetProfile)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__ReprocessExclusionListActions)(CServerExoAppInternal *, unsigned char);
extern int (*CServerExoAppInternal__ResolvePlayerByFirstName)(CServerExoAppInternal *, CExoString const *);
extern int (*CServerExoAppInternal__RestartNetLayer)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__RunModule)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__SaveGame)(CServerExoAppInternal *, uint32_t, CExoString *, CExoString *, CNWSPlayer *, int32_t, CExoString *);
extern int (*CServerExoAppInternal__SendCharacterQuery)(CServerExoAppInternal *, CNWSPlayer *);
extern int (*CServerExoAppInternal__SendEnteringStartNewModuleMessage)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__SendExitingStartNewModuleMessage)(CServerExoAppInternal *, int32_t);
extern int (*CServerExoAppInternal__SendHeartbeatToMasterServer)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__SendStartStallEvent)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__SetEstimatedSaveSize)(CServerExoAppInternal *, CExoString const *, uint16_t);
extern int (*CServerExoAppInternal__SetGameSpyReporting)(CServerExoAppInternal *, int32_t);
extern int (*CServerExoAppInternal__SetNetworkAddressBan)(CServerExoAppInternal *, uint32_t, CExoString, int32_t);
extern int (*CServerExoAppInternal__SetPauseState)(CServerExoAppInternal *, unsigned char, int32_t);
extern int (*CServerExoAppInternal__Shutdown)(CServerExoAppInternal *, int32_t, int32_t);
extern int (*CServerExoAppInternal__ShutdownNetLayer)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__ShutdownServerProfiles)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__StallEventSaveGame)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__StartNewModule)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__StartServices)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__StartShutdownTimer)(CServerExoAppInternal *, uint64_t, uint64_t);
extern int (*CServerExoAppInternal__StopServices)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__StorePlayerCharacters)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__StripColorTokens)(CServerExoAppInternal *, CExoString *);
extern int (*CServerExoAppInternal__Test_Unit_Script_Compile)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__Test_Unit_Script_Run)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__TogglePauseState)(CServerExoAppInternal *, unsigned char);
extern int (*CServerExoAppInternal__Uninitialize)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__UnloadModule)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__UnlockBiowareModule)(CServerExoAppInternal *, CNWSModule *);
extern int (*CServerExoAppInternal__UpdateAutoSaveTimer)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__UpdateClientGameObjects)(CServerExoAppInternal *, int32_t);
extern int (*CServerExoAppInternal__UpdateClientGameObjectsForPlayer)(CServerExoAppInternal *, CNWSPlayer *, int32_t, uint64_t);
extern int (*CServerExoAppInternal__UpdateClientsForObject)(CServerExoAppInternal *, uint32_t);
extern int (*CServerExoAppInternal__UpdateLogHeartbeatTimer)(CServerExoAppInternal *, uint64_t);
extern int (*CServerExoAppInternal__UpdateShutdownTimer)(CServerExoAppInternal *, uint64_t);
extern int (*CServerExoAppInternal__UpdateWindowTitle)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__ValidateCreateServerCharacter)(CServerExoAppInternal *, CNWSPlayer *, void *, uint32_t);
extern int (*CServerExoAppInternal__ValidatePlayerLogin)(CServerExoAppInternal *, void *);
extern int (*CServerExoAppInternal__VomitServerOptionsToLog)(CServerExoAppInternal *);
extern int (*CServerExoAppInternal__WriteServerInfoToIniFile)(CServerExoAppInternal *);
extern int (*CTlkTable__ClearCustomTokens)(CTlkTable *);
extern int (*CTlkTable__CloseFile)(CTlkTable *, CTlkFile **);
extern int (*CTlkTable__CloseFileAlternate)(CTlkTable *);
extern int (*CTlkTable__ExoIsDBCSLeadByte)(CTlkTable *, uint8_t);
extern int (*CTlkTable__GetLanguageVersion)(CTlkTable *);
extern int (*CTlkTable__GetSimpleString)(CTlkTable *, uint32_t);
extern int (*CTlkTable__GetTokenValue)(CTlkTable *, CTlkTableToken const *, CExoString *);
extern int (*CTlkTable__OpenFile_1)(CTlkTable *, CExoString const *, CTlkFile **);
extern int (*CTlkTable__OpenFile_2)(CTlkTable *, CExoString);
extern int (*CTlkTable__OpenFileAlternate)(CTlkTable *, CExoString const *);
extern int (*CTlkTable__ParseStr)(CTlkTable *, CExoString *);
extern int (*CTlkTable__RemapFontName)(CTlkTable *, char *);
extern int (*CTlkTable__SetCustomToken)(CTlkTable *, int32_t, CExoString const *);
extern int (*CTlkTable__SetUseLargeDialogFont)(CTlkTable *, int32_t);
extern int (*CTwoDimArrays__ClearCached2DAs)(CTwoDimArrays *);
extern int (*CTwoDimArrays__GetCached2DA)(CTwoDimArrays *, CExoString, int32_t);
extern int (*CTwoDimArrays__GetEpicAttackBonus)(CTwoDimArrays *, uint8_t);
extern int (*CTwoDimArrays__GetEpicFortSaveBonus)(CTwoDimArrays *, uint8_t);
extern int (*CTwoDimArrays__GetEpicRefSaveBonus)(CTwoDimArrays *, uint8_t);
extern int (*CTwoDimArrays__GetEpicWillSaveBonus)(CTwoDimArrays *, uint8_t);
extern int (*CTwoDimArrays__GetIPRPCostTable)(CTwoDimArrays *, uint8_t);
extern int (*CTwoDimArrays__Load2DArrays)(CTwoDimArrays *);
extern int (*CTwoDimArrays__LoadEpicAttacks)(CTwoDimArrays *);
extern int (*CTwoDimArrays__LoadEpicSaves)(CTwoDimArrays *);
extern int (*CTwoDimArrays__LoadIPRPCostTables)(CTwoDimArrays *);
extern int (*CTwoDimArrays__UnLoad2DArrays)(CTwoDimArrays *);
extern int (*CTwoDimArrays__UnLoadIPRPCostTables)(CTwoDimArrays *);
extern int (*CTwoDimArrays__Update2DACache)(CTwoDimArrays *, CExoLinkedList *, int32_t, C2DA *);
extern int (*CVirtualMachine__Debugger)(CVirtualMachine *, int32_t *);
extern int (*CVirtualMachine__DeleteScript)(CVirtualMachine *, CVirtualMachineScript *);
extern int (*CVirtualMachine__DeleteScriptSituation)(CVirtualMachine *, void *);
extern int (*CVirtualMachine__ExecuteCode)(CVirtualMachine *, int32_t *, char *, int32_t, CVirtualMachineDebuggingContext *);
extern int (*CVirtualMachine__GetRunScriptReturnValue)(CVirtualMachine *, int32_t *, void **);
extern int (*CVirtualMachine__InitializeScript)(CVirtualMachine *, CVirtualMachineScript *, char *, int32_t);
extern int (*CVirtualMachine__LoadScriptSituation_Internal)(CVirtualMachine *, CVirtualMachineScript **, CResGFF *, CResStruct *);
extern int (*CVirtualMachine__PopInstructionPtr)(CVirtualMachine *, int32_t *);
extern int (*CVirtualMachine__PushInstructionPtr)(CVirtualMachine *, int32_t);
extern int (*CVirtualMachine__ReadScriptFile)(CVirtualMachine *, CExoString *);
extern int (*CVirtualMachine__RunScript)(CVirtualMachine *, CExoString *, uint32_t, int32_t);
extern int (*CVirtualMachine__RunScriptFile)(CVirtualMachine *, int32_t);
extern int (*CVirtualMachine__RunScriptSituation)(CVirtualMachine *, void *, uint32_t, int32_t);
extern int (*CVirtualMachine__SaveScriptSituation_Internal)(CVirtualMachine *, CVirtualMachineScript *, CResGFF *, CResStruct *);
extern int (*CVirtualMachine__SetCommandImplementer)(CVirtualMachine *, CVirtualMachineCmdImplementer *);
extern int (*CVirtualMachine__SetDebugGUIFlag)(CVirtualMachine *, int32_t);
extern int (*CVirtualMachine__SetUpScriptSituation)(CVirtualMachine *, CVirtualMachineScript *);
extern int (*CVirtualMachine__StackPopCommand_Internal)(CVirtualMachine *, CVirtualMachineScript **);
extern int (*CVirtualMachine__StackPopEngineStructure)(CVirtualMachine *, int32_t, void **);
extern int (*CVirtualMachine__StackPopFloat)(CVirtualMachine *, float *);
extern int (*CVirtualMachine__StackPopInteger)(CVirtualMachine *, int32_t *);
extern int (*CVirtualMachine__StackPopObject)(CVirtualMachine *, uint32_t *);
extern int (*CVirtualMachine__StackPopString)(CVirtualMachine *, CExoString *);
extern int (*CVirtualMachine__StackPopVector)(CVirtualMachine *, Vector *);
extern int (*CVirtualMachine__StackPushEngineStructure)(CVirtualMachine *, int32_t, void *);
extern int (*CVirtualMachine__StackPushFloat)(CVirtualMachine *, float);
extern int (*CVirtualMachine__StackPushInteger)(CVirtualMachine *, int32_t);
extern int (*CVirtualMachine__StackPushObject)(CVirtualMachine *, uint32_t);
extern int (*CVirtualMachine__StackPushString)(CVirtualMachine *, CExoString const *);
extern int (*CVirtualMachine__StackPushVector)(CVirtualMachine *, Vector);
extern int (*CVirtualMachine__Test_RunAllScriptsInDirectory)(CVirtualMachine *, CExoString *);
extern int (*CWorldTimer__AddWorldTimes)(CWorldTimer *, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t *, uint32_t *);
extern int (*CWorldTimer__AdvanceToTime)(CWorldTimer *, int32_t, int32_t, int32_t, int32_t);
extern int (*CWorldTimer__CompareWorldTimes)(CWorldTimer *, uint32_t, uint32_t, uint32_t, uint32_t);
extern int (*CWorldTimer__ConvertFromCalendarDay)(CWorldTimer *, uint32_t, uint32_t *, uint32_t *, uint32_t *);
extern int (*CWorldTimer__ConvertFromTimeOfDay)(CWorldTimer *, uint32_t, uint32_t *, uint32_t *, uint32_t *, uint32_t *);
extern int (*CWorldTimer__ConvertToCalendarDay)(CWorldTimer *, uint32_t, uint32_t, uint32_t);
extern int (*CWorldTimer__ConvertToTimeOfDay)(CWorldTimer *, uint32_t, uint32_t, uint32_t, uint32_t);
extern int (*CWorldTimer__GetCalendarDayFromSeconds)(CWorldTimer *, float);
extern int (*CWorldTimer__GetSnapshotTime)(CWorldTimer *);
extern int (*CWorldTimer__GetSnapshotTimeDifference)(CWorldTimer *);
extern int (*CWorldTimer__GetTimeDifferenceFromWorldTime)(CWorldTimer *, uint32_t, uint32_t);
extern int (*CWorldTimer__GetTimeOfDayFromSeconds)(CWorldTimer *, float);
extern int (*CWorldTimer__GetWorldTime)(CWorldTimer *, uint32_t *, uint32_t *);
extern int (*CWorldTimer__GetWorldTimeCalendarDay)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeCalendarDayString)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeDay)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeHour)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeMillisecond)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeMinute)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeMonth)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeSecond)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeTimeOfDay)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeTimeOfDayString)(CWorldTimer *);
extern int (*CWorldTimer__GetWorldTimeYear)(CWorldTimer *);
extern int (*CWorldTimer__PauseWorldTimer)(CWorldTimer *);
extern int (*CWorldTimer__ResetTimer)(CWorldTimer *, CWorldTimer *);
extern int (*CWorldTimer__SetFixedSnapshotRate)(CWorldTimer *, int32_t, int32_t);
extern int (*CWorldTimer__SetMinutesPerHour)(CWorldTimer *, uint8_t);
extern int (*CWorldTimer__SetSnapshotTime)(CWorldTimer *);
extern int (*CWorldTimer__SetWorldTime_1)(CWorldTimer *, uint32_t, uint32_t, int32_t);
extern int (*CWorldTimer__SetWorldTime_2)(CWorldTimer *, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, int32_t);
extern int (*CWorldTimer__SubtractWorldTimes)(CWorldTimer *, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t *, uint32_t *);
extern int (*CWorldTimer__TranslateWorldTimeToString)(CWorldTimer *, uint32_t, uint32_t, CExoString *, CExoString *);
extern int (*CWorldTimer__UnpauseWorldTimer)(CWorldTimer *);

#ifdef __cplusplus
}
#endif

#endif /* _NX_NWN_FUNCS_H_ */

/* vim: set sw=4: */
